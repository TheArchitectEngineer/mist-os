# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")

visibility = [ "//src/developer/forensics/*" ]

###############################################################################
# COMPONENTS
###############################################################################
fuchsia_component("fake_data_provider") {
  manifest = "meta/fake_data_provider.cml"

  deps = [
    ":checkboard_100",
    ":fake_data_provider_exe",
  ]
}

fuchsia_component("fake_crash_introspect") {
  testonly = true

  manifest = "meta/fake_crash_introspect.cml"

  deps = [ ":fake_crash_introspect_exe" ]
}

executable("fake_data_provider_exe") {
  sources = [
    "data_provider.cc",
    "data_provider.h",
    "data_provider_main.cc",
  ]

  deps = [
    "//sdk/fidl/fuchsia.feedback:fuchsia.feedback_hlcpp",
    "//sdk/fidl/fuchsia.mem:fuchsia.mem_hlcpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/async-loop:async-loop-default",
    "//sdk/lib/fidl/hlcpp",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/syslog/cpp",
    "//src/developer/forensics/utils:archive",
    "//src/lib/fsl",
    "//src/lib/fxl",
  ]
}

executable("fake_crash_introspect_exe") {
  sources = [
    "crash_introspect.cc",
    "crash_introspect.h",
    "crash_introspect_main.cc",
  ]

  deps = [
    "//sdk/fidl/fuchsia.driver.crash:fuchsia.driver.crash_cpp",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2_cpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/async-loop:async-loop-default",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/fidl/cpp/wire",
    "//sdk/lib/fidl/hlcpp",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/syslog/cpp",
  ]
}

###############################################################################
# SOURCES
###############################################################################
source_set("privacy_settings") {
  testonly = true

  sources = [
    "privacy_settings.cc",
    "privacy_settings.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.settings:fuchsia.settings_hlcpp",
    "//sdk/lib/fidl/hlcpp",
    "//src/lib/fxl",
  ]

  deps = [
    "//sdk/lib/fit-promise",
    "//sdk/lib/syslog/cpp",
  ]
}

###############################################################################
# RESOURCES
###############################################################################
resource("checkboard_100") {
  sources =
      [ "//src/developer/forensics/testing/resources/checkerboard_100.png" ]

  outputs = [ "checkboard_100.png" ]
}
