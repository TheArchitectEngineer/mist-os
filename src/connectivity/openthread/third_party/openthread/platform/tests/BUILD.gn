# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/testing/cc_test_executable.gni")
import("//third_party/openthread/openthread_upstream_version.gni")

group("tests") {
  testonly = true
  deps = [
    ":threadstack-bootstrap-unittests",
    ":threadstack-unittests",
  ]
}

fuchsia_unittest_package("threadstack-unittests") {
  manifest = "meta/threadstack-unittests.cml"
  deps = [
    ":unittests-bin",
    "//src/connectivity/network/netstack:component",
  ]
}

# Create separate package for threadstack-bootstrap-unittests
# since one of the test case tests for edge case which
# generates output to 'FX_LOGS(ERROR)'. To prevent that from
# being flagged as a failing test, we add max_severity = "ERROR".
# We need to create separate testcase as we don't want to affect
# max_severity for other tests.
fuchsia_unittest_package("threadstack-bootstrap-unittests") {
  manifest = "meta/threadstack-bootstrap-unittests.cml"
  deps = [
    ":bootstrap-unittests-bin",
    "//src/connectivity/network/netstack:component",
  ]

  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

cc_test_executable("unittests-bin") {
  output_name = "threadstack-unittests"

  testonly = true

  sources = [
    "dummy_plat_impl.cc",
    "entropy_test.cc",
    "fuchsia_platform_alarm_tests.cc",
    "settings_test.cc",
  ]

  deps = [
    "//sdk/lib/async:async-cpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/async-loop:async-loop-default",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/cpp/testing:unit",
    "//sdk/lib/syslog/cpp",
    "//src/connectivity/openthread/third_party/openthread/platform",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gtest",
    "//third_party/openthread:lib-ot-core",
    "//zircon/system/ulib/zx",
  ]

  include_dirs = [
    "//third_party/openthread/include",
    "//src/connectivity/openthread/third_party/openthread/platform",
  ]
}

cc_test_executable("bootstrap-unittests-bin") {
  output_name = "threadstack-bootstrap-unittests"

  testonly = true

  sources = [
    "bootstrap_fidl_impl_tests.cc",
    "dummy_plat_impl.cc",
  ]

  deps = [
    "//sdk/lib/async:async-cpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/async-loop:async-loop-default",
    "//src/connectivity/openthread/third_party/openthread/platform",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gtest",
    "//zircon/system/ulib/svc",
    "//zircon/system/ulib/zx",
  ]

  include_dirs = [
    "//third_party/openthread/include",
    "//src/connectivity/openthread/third_party/openthread/platform",
  ]
}
