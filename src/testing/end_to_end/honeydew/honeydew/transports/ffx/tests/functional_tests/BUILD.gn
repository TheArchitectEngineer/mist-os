# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/python/python_mobly_test.gni")
import("//build/testing/environments.gni")

# Note - To run this test on internal product:
#  - Add the `python_mobly_test("ffx_test_on_<BOARD>") {` in `//v/g/testing/lacewing/BUILD.gn`
#  - Refer to the test in corresponding `//v/g/bundles/buildbot/<PRODUCT>/<BOARD>/BUILD.gn` file

if (is_host) {
  python_mobly_test("ffx_test_on_x64") {
    main_source = "test_ffx.py"
    libraries = [
      "//src/testing/end_to_end/honeydew",
      "//src/testing/end_to_end/mobly_base_tests:fuchsia_base_test",
    ]
    test_data_deps = [ "//src/developer/ffx/tools/power:ffx_power_test_data" ]
    package_deps = [ "//examples/hello_world/rust:hello-world-rust-tests" ]
    params = {
      expected_values = {
        board = "x64"
      }
    }
    environments = [
      # Only enable for AEMU-x64 as host-tests aren't supported on QEMU-arm64.
      aemu_env,
      nuc11_env,
    ]
  }

  python_mobly_test("ffx_test_on_vim3") {
    main_source = "test_ffx.py"
    libraries = [
      "//src/testing/end_to_end/honeydew",
      "//src/testing/end_to_end/mobly_base_tests:fuchsia_base_test",
    ]
    test_data_deps = [ "//src/developer/ffx/tools/power:ffx_power_test_data" ]
    package_deps = [ "//examples/hello_world/rust:hello-world-rust-tests" ]
    params = {
      expected_values = {
        board = "vim3"
      }
    }
    environments = [ vim3_env ]
  }

  python_mobly_test("ffx_wait_for_rcs_disconnection_test") {
    main_source = "test_ffx_wait_for_rcs_disconnection.py"
    libraries = [
      "//src/testing/end_to_end/honeydew",
      "//src/testing/end_to_end/mobly_base_tests:fuchsia_base_test",
    ]
    environments = [
      # Only enable for AEMU-x64 as host-tests aren't supported on QEMU-arm64.
      aemu_env,
      nuc11_env,
      vim3_env,
      nelson_env,
      sherlock_env,
    ]
  }
}

# Group containing all of the FFX transport functional test cases and their dependencies.
group("tests") {
  testonly = true
  public_deps = [
    ":ffx_test_on_vim3($host_toolchain)",
    ":ffx_test_on_x64($host_toolchain)",
    ":ffx_wait_for_rcs_disconnection_test($host_toolchain)",
  ]
}
