# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/test.gni")

group("tests") {
  testonly = true
  deps = [
    ":fake-display-unittests",
    ":fake-sysmem-device-hierarchy-tests",
    ":sysmem-service-forwarder-tests",
  ]
}

source_set("fake-lib") {
  sources = [
    "fake-display.cc",
    "fake-display.h",
    "image-info.cc",
    "image-info.h",
  ]
  public_deps = [
    "//sdk/banjo/fuchsia.hardware.display.controller:fuchsia.hardware.display.controller_banjo_cpp",
    "//sdk/fidl/fuchsia.hardware.platform.device:fuchsia.hardware.platform.device_cpp",
    "//sdk/fidl/fuchsia.sysmem2:fuchsia.sysmem2_cpp",
    "//sdk/lib/driver/logging/cpp",
    "//src/graphics/display/lib/api-protocols/cpp",
    "//src/graphics/display/lib/api-types/cpp",
    "//src/lib/fsl",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/fzl",
    "//zircon/system/ulib/image-format",
    "//zircon/system/ulib/inspect",
    "//zircon/system/ulib/sysmem-version",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
  ]
  deps = [
    "//src/graphics/display/drivers/coordinator:preferred-scanout-image-type",
  ]
}

static_library("fake-display-stack") {
  testonly = true

  sources = [
    "fake-display-stack.cc",
    "fake-display-stack.h",
  ]
  public_deps = [
    ":fake-lib",
    ":sysmem-service-provider",
    "//sdk/fidl/fuchsia.hardware.display:fuchsia.hardware.display_cpp",
    "//sdk/fidl/fuchsia.sysmem2:fuchsia.sysmem2_cpp",
    "//sdk/lib/driver/testing/cpp:scoped_global_logger",
    "//src/devices/testing/mock-ddk",
    "//src/graphics/display/drivers/coordinator:shared",
    "//zircon/system/ulib/sync:sync-cpp",
  ]
}

test("fake-display-unittests-bin") {
  sources = [ "fake-display-test.cc" ]

  deps = [
    ":fake-display-stack",
    ":fake-sysmem-device-hierarchy",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/predicates",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
  ]
}

fuchsia_unittest_package("fake-display-unittests") {
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
  deps = [ ":fake-display-unittests-bin" ]
}

source_set("sysmem-service-provider") {
  sources = [ "sysmem-service-provider.h" ]
  public_deps = [
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/fidl/fuchsia.sysmem2:fuchsia.sysmem2_cpp",
    "//zircon/system/ulib/zx",
  ]
}

source_set("sysmem-service-forwarder") {
  sources = [
    "sysmem-service-forwarder.cc",
    "sysmem-service-forwarder.h",
  ]
  public_deps = [
    ":sysmem-service-provider",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/syslog/cpp",
  ]
  deps = [
    "//sdk/lib/async:async-cpp",
    "//sdk/lib/component/incoming/cpp",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/sync:sync-cpp",
  ]
}

test("sysmem-service-forwarder-unittest") {
  sources = [ "sysmem-service-forwarder-unittest.cc" ]
  deps = [
    ":sysmem-service-forwarder",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/fidl/fuchsia.sysmem2:fuchsia.sysmem2_cpp",
    "//sdk/lib/component/incoming/cpp",
    "//sdk/lib/device-watcher/cpp",
    "//sdk/lib/fdio",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/predicates",
  ]
}

fuchsia_unittest_package("sysmem-service-forwarder-tests") {
  deps = [ ":sysmem-service-forwarder-unittest" ]
  manifest = "meta/sysmem-service-forwarder-tests.cml"

  # The test type must be "vulkan" in order to use the system-provided
  # sysmem allocators.
  test_type = "vulkan"
}

source_set("fake-sysmem-device-hierarchy") {
  testonly = true
  sources = [
    "fake-sysmem-device-hierarchy.cc",
    "fake-sysmem-device-hierarchy.h",
  ]
  public_deps = [
    ":sysmem-service-provider",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//src/devices/testing/mock-ddk",
    "//src/sysmem/server:sysmem_common_srcs",
  ]
  deps = [
    "//sdk/lib/async:async-cpp",
    "//sdk/lib/component/incoming/cpp",
    "//sdk/lib/syslog/cpp",
    "//zircon/system/ulib/ddk-platform-defs",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/sync:sync-cpp",
  ]
}

test("fake-sysmem-device-hierarchy-unittest") {
  sources = [ "fake-sysmem-device-hierarchy-unittest.cc" ]
  deps = [
    ":fake-sysmem-device-hierarchy",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/fidl/fuchsia.sysmem2:fuchsia.sysmem2_cpp",
    "//sdk/lib/component/incoming/cpp",
    "//sdk/lib/device-watcher/cpp",
    "//sdk/lib/fdio",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/predicates",
  ]
}

fuchsia_unittest_package("fake-sysmem-device-hierarchy-tests") {
  deps = [ ":fake-sysmem-device-hierarchy-unittest" ]
}
