# Copyright 2025 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/drivers.gni")

driver_bind_rules("bind") {
  disable_autobind = true
  bind_output = "root.bindbc"
}

fuchsia_cc_driver("root_driver") {
  testonly = true
  output_name = "reload_test_nested_root_driver"
  sources = [ "root_driver.cc" ]
  deps = [
    ":bind",
    "//src/devices/lib/driver:driver_runtime",
    "//src/devices/tests/v2/reload-driver:driver_helpers",
  ]
}

fuchsia_driver_component("component_root") {
  testonly = true
  manifest = "meta/root.cml"
  component_name = "root"
  deps = [ ":root_driver" ]
  info = "meta/info.json"
}

driver_bind_rules("bind_composite_a") {
  rules = "meta/composite-a.bind"
  deps = [ "//src/devices/tests/v2/reload-driver/bindlib:fuchsia.reloaddriverbind.test" ]
  bind_output = "composite-a.bindbc"
}

fuchsia_cc_driver("driver_composite_a") {
  testonly = true
  output_name = "reload_test_nested_composite_a_driver"
  sources = [ "composite_a.cc" ]
  deps = [
    ":bind_composite_a",
    "//src/devices/lib/driver:driver_runtime",
    "//src/devices/tests/v2/reload-driver:driver_helpers",
  ]
}

fuchsia_driver_component("component_composite_a") {
  testonly = true
  manifest = "meta/composite-a.cml"
  component_name = "reload_test_nested_composite_a"
  deps = [ ":driver_composite_a" ]
  info = "meta/info.json"
}

driver_bind_rules("bind_composite_b") {
  rules = "meta/composite-b.bind"
  deps = [ "//src/devices/tests/v2/reload-driver/bindlib:fuchsia.reloaddriverbind.test" ]
  bind_output = "composite-b.bindbc"
}

fuchsia_cc_driver("driver_composite_b") {
  testonly = true
  output_name = "reload_test_nested_composite_b_driver"
  sources = [ "composite_b.cc" ]
  deps = [
    ":bind_composite_b",
    "//src/devices/lib/driver:driver_runtime",
    "//src/devices/tests/v2/reload-driver:driver_helpers",
  ]
}

fuchsia_driver_component("component_composite_b") {
  testonly = true
  manifest = "meta/composite-b.cml"
  component_name = "reload_test_nested_composite_b"
  deps = [ ":driver_composite_b" ]
  info = "meta/info.json"
}

driver_bind_rules("bind_top_b") {
  rules = "meta/top-b.bind"
  deps = [ "//src/devices/tests/v2/reload-driver/bindlib:fuchsia.reloaddriverbind.test" ]
  bind_output = "top-b.bindbc"
}

fuchsia_cc_driver("driver_top_b") {
  testonly = true
  output_name = "reload_test_nested_top_b_driver"
  sources = [ "top_b.cc" ]
  deps = [
    ":bind_top_b",
    "//src/devices/lib/driver:driver_runtime",
    "//src/devices/tests/v2/reload-driver:driver_helpers",
  ]
}

fuchsia_driver_component("component_top_b") {
  testonly = true
  manifest = "meta/top-b.cml"
  component_name = "reload_test_nested_top_b"
  deps = [ ":driver_top_b" ]
  info = "meta/info.json"
}
