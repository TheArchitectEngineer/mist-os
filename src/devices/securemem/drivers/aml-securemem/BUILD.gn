# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/test.gni")

driver_bind_rules("aml-securemem-bind") {
  rules = "meta/aml-securemem.bind"
  bind_output = "aml-securemem.bindbc"
  tests = "meta/aml-securemem-bind-test.json"
  deps = [
    "//sdk/fidl/fuchsia.hardware.tee:fuchsia.hardware.tee_bindlib",
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.platform",
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":aml-securemem-bind_test",
    ":aml-securemem-test",
  ]
}

source_set("common") {
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]
  sources = [
    "device.cc",
    "device.h",
    "log.h",
    "secmem-session.cc",
    "secmem-session.h",
    "sysmem-secure-mem-server.cc",
    "sysmem-secure-mem-server.h",
  ]
  deps = [
    "//sdk/lib/async:async-cpp",
    "//sdk/lib/async_patterns/cpp",
    "//sdk/lib/fit-promise",
    "//src/devices/bind/fuchsia.amlogic.platform.sysmem.heap:fuchsia.amlogic.platform.sysmem.heap_cpp",
    "//src/devices/lib/driver",
    "//src/devices/lib/driver:driver_runtime",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/zx",
    "//zircon/third_party/ulib/safemath",
  ]
  public_deps = [
    "//sdk/fidl/fuchsia.hardware.securemem:fuchsia.hardware.securemem_cpp",
    "//sdk/fidl/fuchsia.hardware.sysmem:fuchsia.hardware.sysmem_cpp",
    "//sdk/fidl/fuchsia.hardware.tee:fuchsia.hardware.tee_cpp",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_cpp",
    "//sdk/fidl/fuchsia.tee:fuchsia.tee_hlcpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/driver/platform-device/cpp",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//src/security/lib/tee/tee-client-api:tee-client-api-headers",
  ]
}

fuchsia_cc_driver("aml-securemem-driver") {
  legacy = true
  output_name = "aml-securemem"
  deps = [
    ":aml-securemem-bind",
    ":common",
  ]
}

fuchsia_driver_component("aml-securemem") {
  info = "meta/aml-securemem-info.json"
  component_name = "aml-securemem"
  deps = [ ":aml-securemem-driver" ]
  manifest = "meta/aml-securemem.cml"
}

fuchsia_driver_package("package") {
  package_name = "aml-securemem"
  export_to_bazel = true
  driver_components = [ ":aml-securemem" ]
}

test("aml-securemem-test-bin") {
  output_name = "aml-securemem-test"
  sources = [ "test/aml-securemem-test.cc" ]
  include_dirs = [ "." ]
  deps = [
    ":aml-securemem-bind",
    ":common",
    "//sdk/fidl/fuchsia.hardware.sysmem:fuchsia.hardware.sysmem_cpp_testing",
    "//sdk/fidl/fuchsia.hardware.tee:fuchsia.hardware.tee_cpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/async-loop:async-loop-default",
    "//sdk/lib/async_patterns/testing/cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/driver/fake-platform-device/cpp",
    "//sdk/lib/fit-promise",
    "//src/devices/testing/mock-ddk",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/sync:sync-cpp",
    "//zircon/system/ulib/zxtest",
  ]
}

fuchsia_unittest_package("aml-securemem-test") {
  deps = [ ":aml-securemem-test-bin" ]
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}
