# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

assert(target_cpu == "arm64", "The aml-usb-phy driver is only valid on arm64.")

import("//build/bazel/drivers/bazel_driver_package.gni")
import("//build/bind/bind.gni")

driver_bind_rules("aml_usb_phy_bind") {
  rules = "meta/aml_usb_phy.bind"
  bind_output = "aml-usb-phy.bindbc"
  tests = "meta/test_bind.json"
  deps = [
    "//sdk/fidl/fuchsia.hardware.registers:fuchsia.hardware.registers_bindlib",
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.clock",
    "//src/devices/bind/fuchsia.devicetree",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
  ]
}

bazel_driver_package("bazel_package") {
  bazel_target = "//src/devices/usb/drivers/aml-usb-phy:aml-usb-phy"
  package_name = "aml-usb-phy"
  inputs = [
    "aml-usb-phy.cc",
    "aml-usb-phy.h",
    "aml-usb-phy-device.cc",
    "aml-usb-phy-device.h",
    "power-regs.h",
    "usb-phy-base.h",
    "usb-phy-regs.h",
    "usb-phy2.cc",
    "usb-phy2.h",
    "usb-phy2-regs.h",
    "usb-phy3.cc",
    "usb-phy3.h",
    "usb-phy3-regs.h",
  ]
}

# Note: Don't add additional bazel tests into this group as it will introduce
# more bazel actions into build graph. Instead, add them into
# //src:bazel_tests
group("tests") {
  testonly = true
  deps = [ ":aml_usb_phy_bind_test" ]
}
