# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")

driver_bind_rules("usb-virtual-bus-bind") {
  rules = "meta/usb-virtual-bus.bind"
  deps = [ "//src/devices/bind/fuchsia.test.platform" ]
}

source_set("common") {
  configs += [ "//build/config:all_source" ]
  sources = [
    "usb-virtual-bus.cc",
    "usb-virtual-bus.h",
    "usb-virtual-device.cc",
    "usb-virtual-device.h",
    "usb-virtual-endpoint.cc",
    "usb-virtual-endpoint.h",
    "usb-virtual-host.cc",
    "usb-virtual-host.h",
  ]
  public_deps = [
    ":usb-virtual-bus-bind",
    "//sdk/banjo/fuchsia.hardware.usb.bus:fuchsia.hardware.usb.bus_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.usb.dci:fuchsia.hardware.usb.dci_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.usb.hci:fuchsia.hardware.usb.hci_banjo_cpp",
    "//sdk/fidl/fuchsia.hardware.usb.dci:fuchsia.hardware.usb.dci_cpp",
    "//sdk/fidl/fuchsia.hardware.usb.hci:fuchsia.hardware.usb.hci_cpp",
    "//sdk/fidl/fuchsia.hardware.usb.virtual.bus:fuchsia.hardware.usb.virtual.bus_cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//src/devices/bind/fuchsia:fuchsia_cpp",
    "//src/devices/bind/fuchsia.test.platform:fuchsia.test.platform_cpp",
    "//src/devices/lib/driver",
    "//src/devices/lib/driver:driver_runtime",
    "//src/devices/usb/lib/usb",
    "//src/devices/usb/lib/usb:usb-fidl",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/sync",
    "//zircon/system/ulib/sync:sync-cpp",
    "//zircon/system/ulib/zx",
  ]
}

fuchsia_cc_driver("usb-virtual-bus-driver") {
  legacy = true
  output_name = "usb-virtual-bus"
  deps = [
    ":common",
    "//src/devices/lib/driver",
  ]
}

fuchsia_driver_component("usb-virtual-bus") {
  info = "meta/usb-virtual-bus-info.json"
  component_name = "usb-virtual-bus"
  deps = [ ":usb-virtual-bus-driver" ]
  manifest = "meta/usb-virtual-bus.cml"
}

group("tests") {
  testonly = true
  deps = [
    "tests:usb-virtual-bus-test",
    "tests:usb-virtual-bus-unit-test",
  ]
}
