# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/test.gni")

driver_bind_rules("ufs-bind") {
  rules = "meta/ufs.bind"
  tests = "meta/bind_tests.json"
  deps = [
    "//sdk/fidl/fuchsia.hardware.pci:fuchsia.hardware.pci_bindlib",
    "//src/devices/bind/fuchsia.acpi",
    "//src/devices/bind/fuchsia.pci",
    "//src/devices/bind/fuchsia.pci.massstorage",
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":ufs-bind_test",
    ":ufs-tests",
  ]
}

group("e2e_tests") {
  testonly = true
  deps = [ "test/e2e:tests" ]
}

_common_deps = [
  ":ufs-bind",
  ":ufs-config",
  "//sdk/fidl/fuchsia.hardware.block.driver:fuchsia.hardware.block.driver_banjo_cpp",
  "//sdk/fidl/fuchsia.hardware.pci:fuchsia.hardware.pci_cpp",
  "//sdk/fidl/fuchsia.hardware.power:fuchsia.hardware.power_cpp",
  "//sdk/fidl/fuchsia.hardware.ufs:fuchsia.hardware.ufs_cpp",
  "//sdk/fidl/fuchsia.power.broker:fuchsia.power.broker_cpp",
  "//sdk/fidl/fuchsia.power.system:fuchsia.power.system_cpp",
  "//sdk/lib/driver/compat/cpp",
  "//sdk/lib/driver/component/cpp:cpp",
  "//sdk/lib/driver/power/cpp",
  "//sdk/lib/driver/runtime:driver_runtime_cpp",
  "//src/devices/block/lib/common:common",
  "//src/devices/block/lib/scsi",
  "//src/devices/lib/dev-operation",
  "//src/devices/lib/dma-buffer",
  "//src/devices/lib/driver:driver_runtime",
  "//src/devices/lib/mmio",
  "//zircon/system/ulib/fzl",
  "//zircon/system/ulib/hwreg",
  "//zircon/system/ulib/inspect",
  "//zircon/system/ulib/sync",
  "//zircon/system/ulib/zircon-internal",
  "//zircon/system/ulib/zx",
  "//zircon/third_party/ulib/safemath",
]

fuchsia_cc_driver("ufs-driver") {
  output_name = "ufs"
  configs += [ "//build/config:all_source" ]
  sources = [
    "device_manager.cc",
    "request_list.cc",
    "request_processor.cc",
    "task_management_request_processor.cc",
    "transfer_request_processor.cc",
    "ufs-export.cc",
    "ufs.cc",
    "uic/uic_commands.cc",
  ]
  deps = _common_deps
}

fuchsia_component_manifest("ufs-manifest") {
  component_name = "ufs"
  manifest = "meta/ufs.cml"
}

fuchsia_driver_component("ufs") {
  component_name = "ufs"
  cm_label = ":ufs-manifest"
  deps = [ ":ufs-driver" ]
  info = "meta/ufs-info.json"
}

fuchsia_structured_config_cpp_elf_lib("ufs-config") {
  cm_label = ":ufs-manifest"
}

fuchsia_structured_config_values("sc-values") {
  cm_label = ":ufs-manifest"
  values = {
    enable_suspend = false
  }
}

fuchsia_driver_package("pkg") {
  package_name = "ufs"
  driver_components = [ ":ufs" ]
  deps = [ ":sc-values" ]
}

_test_deps = [
  "//sdk/lib/driver/power/cpp/testing",
  "//sdk/lib/driver/testing/cpp",
  "//sdk/lib/inspect/testing/cpp",
  "//src/devices/pci/testing:pci-protocol-fake",
  "//src/devices/testing/fake-mmio-reg",
  "//src/lib/fxl/test:gtest_main",
  "//src/lib/json_parser",
  "//src/lib/testing/predicates",
  "//src/storage/lib/block_client/cpp",
  "//zircon/system/ulib/fdio-caller",
  "//zircon/third_party/ulib/safemath",
]

test("ufs-unit-tests-bin") {
  output_name = "ufs-unit-tests"
  configs += [ "//build/config:all_source" ]
  sources = [
    "device_manager.cc",
    "request_list.cc",
    "request_processor.cc",
    "task_management_request_processor.cc",
    "test/block-op-test.cc",
    "test/init-test.cc",
    "test/mock-device/fake-dma-handler.cc",
    "test/mock-device/query-request-processor.cc",
    "test/mock-device/register-mmio-processor.cc",
    "test/mock-device/scsi-command-processor.cc",
    "test/mock-device/task-management-request-processor.cc",
    "test/mock-device/transfer-request-processor.cc",
    "test/mock-device/ufs-mock-device.cc",
    "test/mock-device/uiccmd-processor.cc",
    "test/power-test.cc",
    "test/query-request-test.cc",
    "test/register-test.cc",
    "test/request-processor-test.cc",
    "test/scsi-command-test.cc",
    "test/task-management-request-processor-test.cc",
    "test/uic-test.cc",
    "test/unit-lib.cc",
    "transfer_request_processor.cc",
    "ufs.cc",
    "uic/uic_commands.cc",
  ]
  deps = _common_deps + _test_deps
}

fuchsia_unittest_component("ufs-unit-tests") {
  manifest = "test/meta/unit_tests.cml"
  deps = [ ":ufs-unit-tests-bin" ]
}

fuchsia_test_package("ufs-tests") {
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
  test_components = [ ":ufs-unit-tests" ]
}
