// Copyright 2024 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    children: [
        // Full-drivers collection needs the full_resolver to load components.
        // But we can't use the full_resolver from the core realm, since that
        // would create a cycle. Instead, we create a "local" instance of the
        // full resolver, which simply delegates to the supplied resolver
        // protocol
        //
        // TODO(https://fxbug.dev/42180879): Remove need for this component.
        {
            name: "full_resolver",
            url: "fuchsia-pkg://fuchsia.com/loopback_resolver#meta/loopback_resolver.cm",
            environment: "#base-resolver-env",
        },
    ],
    collections: [
        {
            name: "full-drivers",
            environment: "#full-pkg-driver-env",
            durability: "single_run",
            allowed_offers: "static_and_dynamic",
            allow_long_names: true,
        },
    ],
    offer: [
        {
            config: [ "fuchsia.power.SuspendEnabled" ],
            from: "parent",
            to: "#full-drivers",
        },
        {
            dictionary: "diagnostics",
            from: "self",
            to: [
                "#full-drivers",
                "#full_resolver",
            ],
        },
        {
            protocol: "fuchsia.component.resolution.Resolver-full",
            from: "parent",
            as: "fuchsia.component.resolution.Resolver",
            to: "#full_resolver",
        },
        {
            protocol: "fuchsia.tracing.provider.Registry",
            from: "parent",
            to: "#full-drivers",
            availability: "optional",
        },
        {
            protocol: "fuchsia.kernel.InfoResource",
            from: "parent",
            to: "#full-drivers",
        },
        {
            protocol: [ "fuchsia.scheduler.RoleManager" ],
            from: "#role_manager",
            to: "#full-drivers",
        },
        {
            protocol: [ "fuchsia.driver.framework.CompositeNodeManager" ],
            from: "#driver_manager",
            to: "#full-drivers",
        },
        {
            protocol: [
                "fuchsia.hardware.sysmem.Sysmem",
                "fuchsia.sysmem.Allocator",
                "fuchsia.sysmem2.Allocator",
            ],
            from: "#sysmem",
            to: "#full-drivers",

            // This must be weak because sysmem needs sysmem from devfs, which creates
            // a cycle. sysmem can be made into a non-driver to fix this.
            dependency: "weak",
            source_availability: "unknown",
        },
        {
            protocol: [ "fuchsia.system.state.SystemStateTransition" ],
            from: "#shutdown_shim",
            to: "#full-drivers",
            source_availability: "unknown",
        },

        // TODO(https://fxbug.dev/345827642): remove once OOT drivers are using these protocols from
        // the diagnostics dictionary themselves.
        {
            protocol: [
                "fuchsia.inspect.InspectSink",
                "fuchsia.logger.LogSink",
            ],
            from: "#archivist",
            to: "#full-drivers",
        },

        // TODO(https://fxbug.dev/369189827): Route these statically again when the dictionary
        // can override them.
        // {
        //     protocol: [ "fuchsia.power.system.ActivityGovernor" ],
        //     from: "#system-activity-governor",
        //     to: "#full-drivers",

        //     // system-activity-governor depends on the suspend HAL but not all
        //     // drivers depend on system-activity-governor.
        //     // Weak to resolve dependency cycles.
        //     dependency: "weak",
        //     source_availability: "unknown",
        // },
        // {
        //     protocol: [ "fuchsia.power.broker.Topology" ],
        //     from: "#power-broker",
        //     to: "#full-drivers",
        // },
    ],
    expose: [
        {
            service: [
                "fuchsia.gpu.magma.TestService",
                "fuchsia.gpu.magma.TrustedService",
                "fuchsia.hardware.gnss.Service",
                "fuchsia.hardware.google.nanohub.Service",
                "fuchsia.hardware.haptics.Service",
                "fuchsia.hardware.nfc.Service",
                "fuchsia.hardware.power.suspend.SuspendService",
                "fuchsia.hardware.qcom.hvdcpopti.Service",
                "fuchsia.hardware.qualcomm.fastrpc.SecureService",
                "fuchsia.hardware.sockettunnel.Service",
                "fuchsia.hardware.spmi.DebugService",
                "fuchsia.hardware.vsock.Service",
                "fuchsia.storage.ftl.Service",
                "fuchsia.sysinfo.Service",

                // These duplicate a service advertised by devfs, below.
                // "fuchsia.gpu.magma.Service",
                // "fuchsia.hardware.backlight.Service",
                // "fuchsia.hardware.cpu.ctrl.Service",
                // "fuchsia.hardware.rtc.Service",
            ],
            from: "#full-drivers",
        },
        {
            // All the services that used to be part of devfs.  Some of these services may never
            // come from drivers in the #full-drivers collection, but this way we keep the same set
            // of services exposed from each driver collection.
            service: [
                "fuchsia.gpu.magma.DependencyInjectionService",
                "fuchsia.gpu.magma.PerformanceCounterService",
                "fuchsia.gpu.magma.Service",
                "fuchsia.hardware.adb.Service",
                "fuchsia.hardware.adc.Service",
                "fuchsia.hardware.audio.CodecConnectorService",
                "fuchsia.hardware.audio.CompositeConnectorService",
                "fuchsia.hardware.audio.DaiConnectorService",
                "fuchsia.hardware.audio.Device",
                "fuchsia.hardware.audio.StreamConfigConnectorInputService",
                "fuchsia.hardware.audio.StreamConfigConnectorOutputService",
                "fuchsia.hardware.ax88179.Service",
                "fuchsia.hardware.backlight.Service",
                "fuchsia.hardware.bluetooth.EmulatorService",
                "fuchsia.hardware.bluetooth.Service",
                "fuchsia.hardware.camera.Service",
                "fuchsia.hardware.clock.measure.Service",
                "fuchsia.hardware.cpu.ctrl.Service",
                "fuchsia.hardware.display.service",
                "fuchsia.hardware.fan.Service",
                "fuchsia.hardware.fastboot.Service",
                "fuchsia.hardware.goldfish.AddressSpaceService",
                "fuchsia.hardware.goldfish.ControllerService",
                "fuchsia.hardware.goldfish.ControlService",
                "fuchsia.hardware.goldfish.SyncService",
                "fuchsia.hardware.gpu.mali.UtilsService",
                "fuchsia.hardware.hrtimer.Service",
                "fuchsia.hardware.i2c.Service",
                "fuchsia.hardware.input.Service",
                "fuchsia.hardware.light.LightService",
                "fuchsia.hardware.mediacodec.Service",
                "fuchsia.hardware.midi.Service",
                "fuchsia.hardware.network.Service",
                "fuchsia.hardware.pin.DebugService",
                "fuchsia.hardware.power.sensor.Service",
                "fuchsia.hardware.powersource.Service",
                "fuchsia.hardware.pty.Service",
                "fuchsia.hardware.radar.Service",
                "fuchsia.hardware.ram.metrics.Service",
                "fuchsia.hardware.registers.Service",
                "fuchsia.hardware.rtc.Service",
                "fuchsia.hardware.sdio.DriverService",
                "fuchsia.hardware.serial.Service",
                "fuchsia.hardware.skipblock.Service",
                "fuchsia.hardware.spi.ControllerService",
                "fuchsia.hardware.tee.proprietary.Service",
                "fuchsia.hardware.tee.Service",
                "fuchsia.hardware.temperature.Service",
                "fuchsia.hardware.thermal.Service",
                "fuchsia.hardware.trippoint.TripPointService",
                "fuchsia.hardware.usb.device.Service",
                "fuchsia.hardware.usb.peripheral.Service",
                "fuchsia.hardware.usb.tester.Service",
                "fuchsia.hardware.usb.virtualbustest.Service",
                "fuchsia.input.report.Service",
                "fuchsia.lowpan.spinel.Service",
                "fuchsia.power.battery.InfoService",
                "fuchsia.services.test.Device",
                "fuchsia.tpm.Service",
                "fuchsia.wlan.device.Service",
            ],
            from: "#full-drivers",
        },
    ],
    environments: [
        {
            name: "full-pkg-driver-env",
            extends: "none",
            runners: [
                {
                    runner: "driver",
                    from: "#driver_manager",
                },
            ],
            resolvers: [
                {
                    resolver: "boot_resolver",
                    from: "parent",
                    scheme: "fuchsia-boot",
                },
                {
                    resolver: "resolver",
                    from: "#full_resolver",
                    scheme: "fuchsia-pkg",
                },
            ],

            // 1 second
            __stop_timeout_ms: 1000,
        },
    ],
}
