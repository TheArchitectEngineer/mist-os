# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//sdk/ctf/build/ctf.gni")
import("//src/lib/vulkan/vulkan.gni")

group("tests") {
  testonly = true
  public_deps = [
    ":display-ownership-integration-test",
    ":flatland-allocation-test",
    ":flatland-focus-integration-test",
    ":flatland-mouse-integration-test",
    ":flatland-pixeltest-flip-and-orientation",
    ":flatland-pixeltest-general",
    ":flatland-pixeltest-yuv",
    ":flatland-protected-memory-integration-test",
    ":flatland-touch-integration-test",
    ":flatland-view-integration-test",
    ":flatland-view-ref-installed-integration-test",
    ":null-renderer-integration-test",
    ":observer-registry-integration-test",
    ":scoped-observer-registry-integration-test",
    ":screen-capture-integration-test",
    ":screen-capture2-integration-test",
    ":singleton-display-integration-test",
  ]

  # TODO(https://fxbug.dev/42075218): Re-enable this test once zx_cache_flush is implemented on
  # riscv64.
  if (target_cpu != "riscv64") {
    public_deps += [ ":cpu-renderer-integration-test" ]
  }
}

group("ctf-tests") {
  testonly = true
  deps = [
    ":flatland-focus-integration-test-suite_archive",
    ":flatland-touch-integration-test-suite_archive",
    ":observer-registry-integration-test-suite_archive",
    ":scoped-observer-registry-integration-test-suite_archive",

    # TODO(https://fxbug.dev/362762825): Update the test to the current
    # fuchsia.ui.composition API and re-enable.
    # ":screen-capture2-integration-test-suite_archive",

    ":flatland-allocation-test-suite_archive",
    ":flatland-mouse-integration-test-suite_archive",
    ":flatland-pixeltest-flip-and-orientation-suite_archive",
    ":flatland-pixeltest-general-suite_archive",
    ":flatland-pixeltest-yuv-suite_archive",
    ":flatland-protected-memory-integration-test-suite_archive",
    ":flatland-view-integration-test-suite_archive",
    ":flatland-view-ref-installed-integration-test-suite_archive",
    ":null-renderer-integration-test-suite_archive",
    ":screen-capture-integration-test-suite_archive",
    ":singleton-display-integration-test-suite_archive",
  ]

  # TODO(https://fxbug.dev/42075218): Re-enable this test once zx_cache_flush is implemented on
  # riscv64.
  if (target_cpu != "riscv64") {
    deps += [ ":cpu-renderer-integration-test-suite_archive" ]
  }
}

source_set("common-deps-zxtest") {
  testonly = true
  sources = [
    "utils/blocking_present.cc",
    "utils/blocking_present.h",
    "utils/scenic_ctf_test_base.cc",
    "utils/scenic_ctf_test_base.h",
    "utils/utils.cc",
    "utils/utils.h",
  ]
  public_deps = [
    "//sdk/fidl/fuchsia.testing.harness:fuchsia.testing.harness_hlcpp",
    "//sdk/fidl/fuchsia.ui.test.context:fuchsia.ui.test.context_hlcpp",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/syslog/cpp",
    "//sdk/lib/ui/scenic/cpp",
    "//src/lib/fostr/fidl/fuchsia.ui.input:fuchsia.ui.input",
    "//src/ui/testing/util:loop_fixture",
    "//src/ui/testing/util:screenshot_helper",
    "//zircon/system/ulib/zxtest",
  ]
}

source_set("screen-capture-utils") {
  testonly = true
  sources = [
    "utils/screen_capture_utils.cc",
    "utils/screen_capture_utils.h",
  ]
  public_deps = [
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//src/ui/scenic/lib/allocation:allocation",
  ]
  deps = [
    ":common-deps-zxtest",
    "//src/ui/scenic/lib/flatland/buffers",
    "//src/ui/scenic/lib/utils:utils",
    "//zircon/system/ulib/fbl",
  ]
}

# Generate CTF tests required package format.
#
# Usage:
#
# ```
# ctf_components_packages("the-test-name") {
#   sources = [ "test.cc" ]
#   deps = [
#     "deps for *.cc test body"
#   ]
#   test_spec = { ... }
# }
# ```
#
# To run the test:
# fx test the-test-name
#
# This requires file name in format:
#  - validator cml: $prefix-validator.cml
#  - test root cml: #prefix.cml
#
# Topology:
#
# test package: *-integration-test
#   component: *-integration-test-component (test root)
# ---------------------------------------------------------------------------
#  Latest Code                    |  Latest code and Build archives
# ---------------------------------------------------------------------------
#  package: scenic-realm-factory  |  package: *-test-suites
#             (real factory)      |    component: *-validator
#                                 |      bin: *-validator-bin (test codes)
#                                 â†‘
#             fuchsia.ui.test.context.ScenicRealmFactory
template("ctf_components_packages") {
  _test_specs = invoker.test_specs
  assert(defined(_test_specs), "test_specs must be provided")
  test_prefix = target_name

  executable("${test_prefix}-validator-bin") {
    testonly = true
    sources = invoker.sources
    output_name = "${test_prefix}-validator"
    deps = invoker.deps
  }

  fuchsia_component("${test_prefix}-validator") {
    testonly = true
    manifest = "meta/${test_prefix}-validator.cml"
    deps = [ ":${test_prefix}-validator-bin" ]
  }

  ctf_fuchsia_package("${test_prefix}-suite") {
    package_name = "${test_prefix}-suite"
    testonly = true
    deps = [ ":${test_prefix}-validator" ]
  }

  _test_component_target = "${test_prefix}-component"

  fuchsia_test_component("$_test_component_target") {
    testonly = true
    component_name = "${test_prefix}"
    manifest = "meta/${test_prefix}.cml"
    test_type = "ctf"
  }

  fuchsia_test_package(target_name) {
    test_components = [ ":$_test_component_target" ]
    subpackages = [
      ":${test_prefix}-suite",
      "//src/ui/testing/scenic_realm_factory:pkg",
    ]
    test_specs = _test_specs
  }
}

ctf_components_packages("flatland-allocation-test") {
  sources = [ "flatland_integration_tests/flatland_allocation_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//src/ui/scenic/lib/allocation:allocation",
    "//src/ui/scenic/lib/utils:utils",
    "//zircon/system/ulib/fbl",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("flatland-touch-integration-test") {
  sources = [
    "flatland_integration_tests/flatland_touch_integration_test.cc",
    "flatland_integration_tests/flatland_touch_local_hit_integration_test.cc",
  ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.pointer:fuchsia.ui.pointer_hlcpp",
    "//sdk/fidl/fuchsia.ui.pointer.augment:fuchsia.ui.pointer.augment_hlcpp",
    "//sdk/fidl/fuchsia.ui.pointerinjector:fuchsia.ui.pointerinjector_hlcpp",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("flatland-focus-integration-test") {
  sources = [ "flatland_integration_tests/flatland_focus_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.focus:fuchsia.ui.focus_hlcpp",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("flatland-view-ref-installed-integration-test") {
  sources = [ "flatland_integration_tests/flatland_view_ref_installed_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.views:fuchsia.ui.views_hlcpp",
  ]
  test_specs = {
    environments = [
      astro_env,
      sherlock_env,
      nelson_env,
    ]
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("flatland-view-integration-test") {
  sources = [ "flatland_integration_tests/flatland_view_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.display.singleton:fuchsia.ui.display.singleton_hlcpp",
    "//sdk/fidl/fuchsia.ui.views:fuchsia.ui.views_hlcpp",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("cpu-renderer-integration-test") {
  sources = [ "flatland_integration_tests/cpu_renderer_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_hlcpp",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//src/ui/scenic/lib/allocation:allocation",
    "//src/ui/scenic/lib/flatland/buffers",
    "//src/ui/scenic/lib/utils:utils",
  ]
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("null-renderer-integration-test") {
  sources = [ "flatland_integration_tests/null_renderer_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_hlcpp",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//src/ui/scenic/lib/allocation:allocation",
    "//src/ui/scenic/lib/utils:utils",
  ]
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("observer-registry-integration-test") {
  sources =
      [ "observer_integration_tests/observer_registry_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.focus:fuchsia.ui.focus_hlcpp",
    "//sdk/fidl/fuchsia.ui.observation.geometry:fuchsia.ui.observation.geometry_hlcpp",
    "//sdk/fidl/fuchsia.ui.observation.test:fuchsia.ui.observation.test_hlcpp",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("scoped-observer-registry-integration-test") {
  sources = [
    "observer_integration_tests/scoped_observer_registry_integration_test.cc",
  ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.focus:fuchsia.ui.focus_hlcpp",
    "//sdk/fidl/fuchsia.ui.observation.geometry:fuchsia.ui.observation.geometry_hlcpp",
    "//sdk/fidl/fuchsia.ui.observation.scope:fuchsia.ui.observation.scope_hlcpp",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("flatland-protected-memory-integration-test") {
  sources =
      [ "flatland_integration_tests/protected_memory_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//src/ui/scenic/lib/allocation:allocation",
    "//src/ui/scenic/lib/utils:utils",
    "//zircon/system/ulib/fbl",
  ]
  test_specs = {
    environments = [
      astro_env,
      sherlock_env,
      nelson_env,
    ]
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("screen-capture-integration-test") {
  sources = [ "flatland_integration_tests/screen_capture_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    ":screen-capture-utils",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//src/ui/scenic/lib/allocation:allocation",
    "//src/ui/scenic/lib/utils:utils",
    "//src/ui/testing/util:zxtest_helpers",
    "//zircon/system/ulib/fbl",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("screen-capture2-integration-test") {
  sources = [ "flatland_integration_tests/screen_capture2_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    ":screen-capture-utils",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.composition.internal:fuchsia.ui.composition.internal_hlcpp",
    "//sdk/fidl/fuchsia.vulkan.loader:fuchsia.vulkan.loader_hlcpp",
    "//src/ui/lib/escher",
    "//src/ui/scenic/lib/allocation:allocation",
    "//src/ui/scenic/lib/utils:utils",
    "//zircon/system/ulib/fbl",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("display-ownership-integration-test") {
  sources = [ "display_ownership_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition.internal:fuchsia.ui.composition.internal_hlcpp",
    "//src/ui/scenic/lib/utils:utils",
    "//zircon/system/ulib/fbl",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("singleton-display-integration-test") {
  sources = [ "singleton_display_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.display.singleton:fuchsia.ui.display.singleton_hlcpp",
    "//src/ui/scenic/lib/utils:utils",
    "//zircon/system/ulib/fbl",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("flatland-mouse-integration-test") {
  sources = [ "flatland_integration_tests/flatland_mouse_integration_test.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.input.report:fuchsia.input.report_hlcpp",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.pointer:fuchsia.ui.pointer_hlcpp",
    "//sdk/fidl/fuchsia.ui.pointerinjector:fuchsia.ui.pointerinjector_hlcpp",
    "//src/ui/scenic/lib/utils",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("flatland-pixeltest-general") {
  sources = [ "flatland_integration_tests/flatland_pixeltest.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.compression.internal:fuchsia.ui.compression.internal_cpp",
    "//sdk/fidl/fuchsia.ui.display.singleton:fuchsia.ui.display.singleton_hlcpp",
    "//src/lib/testing/loop_fixture",
    "//src/ui/scenic/lib/allocation:allocation",
    "//src/ui/scenic/lib/utils",
    "//src/ui/scenic/lib/utils:utils",
    "//src/ui/testing/util:screenshot_helper",
    "//zircon/system/ulib/fbl",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("flatland-pixeltest-flip-and-orientation") {
  sources = [ "flatland_integration_tests/flatland_pixeltest.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.compression.internal:fuchsia.ui.compression.internal_cpp",
    "//sdk/fidl/fuchsia.ui.display.singleton:fuchsia.ui.display.singleton_hlcpp",
    "//src/lib/testing/loop_fixture",
    "//src/ui/scenic/lib/allocation:allocation",
    "//src/ui/scenic/lib/utils",
    "//src/ui/scenic/lib/utils:utils",
    "//src/ui/testing/util:screenshot_helper",
    "//zircon/system/ulib/fbl",
  ]
  test_specs = {
    environments = vulkan_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

ctf_components_packages("flatland-pixeltest-yuv") {
  sources = [ "flatland_integration_tests/flatland_pixeltest.cc" ]
  deps = [
    ":common-deps-zxtest",
    "//sdk/fidl/fuchsia.ui.composition:fuchsia.ui.composition_hlcpp",
    "//sdk/fidl/fuchsia.ui.compression.internal:fuchsia.ui.compression.internal_cpp",
    "//sdk/fidl/fuchsia.ui.display.singleton:fuchsia.ui.display.singleton_hlcpp",
    "//src/lib/testing/loop_fixture",
    "//src/ui/scenic/lib/allocation:allocation",
    "//src/ui/scenic/lib/utils",
    "//src/ui/scenic/lib/utils:utils",
    "//src/ui/testing/util:screenshot_helper",
    "//zircon/system/ulib/fbl",
  ]
  test_specs = {
    # TODO(https://fxbug.dev/42137913): Skip this test for AEMU as YUV Sysmem images are not supported yet.
    environments = magma_libvulkan_hardware_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}
