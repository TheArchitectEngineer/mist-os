# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_test.gni")
import("//build/testing/host_test.gni")
import("//src/starnix/kernel/starnix.gni")
import("//src/starnix/tests/build/starnix_linux_test_component.gni")
import("//src/starnix/tests/starnix_test_subpackages.gni")

group("tests") {
  testonly = true
  deps = [ ":starnix_syscalls_rust_tests" ]
  if (host_os == "linux") {
    deps += [
      # These are Linux tests, so we can run them as host tests on our host Linux bot.
      ":starnix_syscalls_rust_host_tests($host_toolchain)",
    ]
  }
}

_common_sources = [
  "src/device_mapper_test.rs",
  "src/ebpf.rs",
  "src/fscrypt_shared.rs",
  "src/fscrypt_test.rs",
  "src/lib.rs",
]
_common_deps = [
  "//src/starnix/lib/ebpf",
  "//src/starnix/lib/ebpf_loader",
  "//src/starnix/lib/linux_uapi",
  "//third_party/rust_crates:bstr",
  "//third_party/rust_crates:hex",
  "//third_party/rust_crates:libc",
  "//third_party/rust_crates:rand",
  "//third_party/rust_crates:serde",
  "//third_party/rust_crates:serde_json",
  "//third_party/rust_crates:serial_test",
  "//third_party/rust_crates:test-case",
  "//third_party/rust_crates:zerocopy",
]
if (is_host) {
  rustc_test("starnix_syscalls_rust_host_tests") {
    edition = "2021"
    source_root = "src/lib.rs"
    sources = _common_sources
    deps = _common_deps
    deps += [ ":fscrypt_test_bin" ]
  }
}

rustc_test("syscalls_rust_test_bin") {
  edition = "2021"
  source_root = "src/lib.rs"
  sources = _common_sources
  deps = _common_deps

  # TODO(https://fxbug.dev/297293167) enable ASan instrumentation for Linux binaries in Starnix
  exclude_toolchain_tags = [ "asan" ]
}

rustc_binary("fscrypt_test_bin") {
  name = "fscrypt_test"
  edition = "2021"
  emit_tool_path = false

  deps = [
    "//src/starnix/lib/linux_uapi",
    "//third_party/rust_crates:argh",
    "//third_party/rust_crates:hex",
    "//third_party/rust_crates:libc",
    "//third_party/rust_crates:rand",
    "//third_party/rust_crates:serde",
    "//third_party/rust_crates:serde_json",
    "//third_party/rust_crates:zerocopy",
  ]

  source_root = "src/fscrypt_child.rs"
  sources = [
    "src/fscrypt_shared.rs",
    source_root,
  ]
}

resource("simple_ext4_image") {
  sources = [
    "data/corrupted_hashtree.txt",
    "data/corrupted_image_with_hashtree.txt",
    "data/hashtree_truncated.txt",
    "data/root_hash.txt",
    "data/simple_ext4.img",
    "data/valid_image_with_hashtree.txt",
  ]
  outputs = [ "data/{{source_file_part}}" ]
}

resource("ebpf_test_progs") {
  sources = [ "data/ebpf/ebpf_test_progs.o" ]
  outputs = [ "data/ebpf/ebpf_test_progs.o" ]
}

_fscrypt_bin_label = ":fscrypt_test_bin($target_linux_toolchain)"
_fscrypt_binary_path =
    get_label_info(_fscrypt_bin_label, "root_out_dir") + "/fscrypt_test"

resource("fscrypt_test_resource") {
  deps = [ _fscrypt_bin_label ]
  sources = [ _fscrypt_binary_path ]
  outputs = [ "data/tests/fscrypt_test" ]
}

starnix_linux_test_component("syscalls_rust_test") {
  test_label = ":syscalls_rust_test_bin"
  test_binary = "syscalls_rust_test_bin"
  deps = [
    ":ebpf_test_progs",
    ":simple_ext4_image",
  ]
  test_type = "starnix"
}

fuchsia_test_package("starnix_syscalls_rust_tests") {
  test_components = [ ":syscalls_rust_test" ]

  subpackages = starnix_test_subpackages
  subpackages += [ "//src/starnix/containers/debian:debian_package" ]

  deps = [
    ":fscrypt_test_resource",
    "//src/lib/testing/expectation:expectation_comparer",
  ]
}
