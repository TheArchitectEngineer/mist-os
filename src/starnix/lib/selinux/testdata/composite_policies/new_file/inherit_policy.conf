# Attribute for child domains in inheritance tests.
attribute test_inherit_child_a;

# Attribute for domains that can exec into a child domain.
attribute test_inherit_exec_to_child_a;

# Parent domain for inheritance tests.
type test_inherit_parent_t, test_inherit_exec_to_child_a, test_a;

# Intermediate domain that transitions to one of the child domains on exec.
type test_inherit_bridge_t, test_inherit_exec_to_child_a, test_a;

# Child domain that does not have the `use` permission for file descriptors
# labeled with the parent's security context.
type test_inherit_child_no_use_fd_t, test_a, test_inherit_child_a;
neverallow test_inherit_child_no_use_fd_t test_inherit_parent_t:fd { use };

# Child domain that does have the `use` permission for file descriptors
# labeled with the parent's security context.
type test_inherit_child_allow_use_fd_t, test_a, test_inherit_child_a;
allow test_inherit_child_allow_use_fd_t test_inherit_parent_t:fd { use };

# Child domain that does have the `use` permission for file descriptors
# labeled with the parent's security context, but does not have the `read`
# permission for file nodes with type `tmpfs_t`.
type test_inherit_child_no_read_file_t, test_a, test_inherit_child_a;
allow test_inherit_child_no_read_file_t test_inherit_parent_t:fd { use };
neverallow test_inherit_child_no_read_file_t tmpfs_t:file { read };

# Allow files in tmpfs to be labeled with type `tmpfs_t`.
allow tmpfs_t self:filesystem { associate };

# Allow the parent to create and open files in tmpfs.
allow test_inherit_parent_t tmpfs_t:dir { search add_name };
allow test_inherit_parent_t tmpfs_t:file { read create };

# Allow the exec-to-child domains to set the "current" and "exec" contexts.
allow test_inherit_exec_to_child_a self:file { write };
allow test_inherit_exec_to_child_a self:process { setexec };

# Allow the exec-to-child domain to execute files in /data/bin/.
allow test_inherit_exec_to_child_a file_t:file { read execute };

# Allow the exec-to-child domains to transition to the child domains.
allow test_inherit_exec_to_child_a test_inherit_child_a:process { transition };

# Allow the child domains to use files in /data/bin as an entry point.
allow test_inherit_child_a file_t:file { read entrypoint };

# Allow the child to stat files in tmpfs.
allow test_inherit_child_a tmpfs_t:dir { getattr };
allow test_inherit_child_a tmpfs_t:file { getattr };

# Allow the child to stat the selinuxfs null file.
allow test_inherit_child_a devnull_t:chr_file { getattr };

# Allow use of included files and shared libraries(?)
allow test_inherit_exec_to_child_a unlabeled_t:file { read };
allow test_inherit_exec_to_child_a file_t:file { read };
allow test_inherit_child_a unlabeled_t:file { read getattr map execute };
allow test_inherit_child_a file_t:dir { getattr };
allow test_inherit_child_a file_t:file { read getattr map execute };
allow test_inherit_child_a self:lnk_file { read };

# Allow the child to read its own files
allow test_inherit_child_a self:file { read };

### The lines below are only needed on Linux.

# Allow the child domains to use files in /data/bin as an entry point.
allow test_inherit_child_a unlabeled_t:file { read entrypoint };

# Allow the parent to read the file containing the child program.
# The difference between Linux and Starnix is due to a labeling difference.
allow test_inherit_parent_t unlabeled_t:file { read getattr };

# Related to shared object use.
allow test_inherit_exec_to_child_a unlabeled_t:file { execute };

# Related to /dev/console use.
allow test_inherit_exec_to_child_a unlabeled_t:chr_file { getattr };
allow test_inherit_child_a unlabeled_t:chr_file { read getattr };

# Related to null file check.
# The difference between Linux and Starnix is at least partly due to a labeling difference.
allow test_inherit_child_a unconfined_t:chr_file { read write getattr };

# Related to missing directory permission checks in SEStarnix?
allow test_inherit_parent_t self:dir { search };
allow test_inherit_parent_t tmpfs_t:dir { write };
allow test_inherit_exec_to_child_a self:dir { search };
allow test_inherit_exec_to_child_a tmpfs_t:dir { search };
allow test_inherit_child_a self:dir { search };
allow test_inherit_child_a tmpfs_t:dir { search };

# Related to a missing permission check in `open` (via `mkstemp`)?
allow test_inherit_parent_t tmpfs_t:file { write };

# TODO: https://fxbug.dev/322843830 - Check `FsNode` permissions on exec.
# These `allow` statements are currently only required on Linux, but should
# be required on Starnix too.
allow test_inherit_child_no_use_fd_t tmpfs_t:file { read };
allow test_inherit_child_allow_use_fd_t tmpfs_t:file { read };

# Related to some missing file permission checks in SEStarnix?
allow test_inherit_child_a devnull_t:chr_file { read write };

# TODO: https://fxbug.dev/322843830 - Should be required on Starnix.
# Related to the SELinux/SEStarnix difference demonstrated in
# https://fuchsia-review.googlesource.com/c/fuchsia/+/1277457.
allow test_inherit_child_a test_inherit_bridge_t:fd { use };

# Related to misc permissions not yet implemented in SEStarnix.
allow test_inherit_exec_to_child_a self:capability { dac_read_search dac_override };
allow test_inherit_exec_to_child_a test_inherit_child_a:process { noatsecure };
