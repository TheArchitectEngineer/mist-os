# To allow tests to kill the context manager.
allow unconfined_t binder_context_manager_test_t:process { sigkill };

# Attribute for all binder tests.
attribute binder_test_a;

# Common permissions for all binder tests.
# To allow opening binder and doing `ioctl` calls
allow binder_test_a unlabeled_t:chr_file { read ioctl };
# To allow mmaping a buffer with binder
allow binder_test_a unlabeled_t:chr_file { map };

# Type that allows opening binder
type binder_open_test_t;
typeattribute binder_open_test_t test_a, binder_test_a;

# Type that allows becoming the binder context manager
type binder_context_manager_test_t;
typeattribute binder_context_manager_test_t test_a, binder_test_a;
# To allow becoming context manager
allow binder_context_manager_test_t binder_context_manager_test_t:binder { set_context_mgr };
# The context manager wants to use sys_nice for some reason.
# This permission is not strictly needed as the tests pass without it,
# but it gets rid of an "avc deny" message.
allow binder_context_manager_test_t self:capability { sys_nice };

# Identical to `binder_context_manager_test_t`, but without the `set_context_mgr` permission.
type binder_no_context_manager_test_t;
typeattribute binder_no_context_manager_test_t test_a, binder_test_a;
allow binder_no_context_manager_test_t self:capability { sys_nice };

# Type that allows doing ioctl() syscalls to binder.
type binder_ioctl_no_call_test_t;
typeattribute binder_ioctl_no_call_test_t test_a, binder_test_a;

# Identical to `binder_ioctl_no_call_test_t` with the addition of the `call` permission.
type binder_ioctl_call_test_t;
typeattribute binder_ioctl_call_test_t test_a, binder_test_a;
# To allow doing calls to binder
allow binder_ioctl_call_test_t binder_context_manager_test_t:binder { call };
