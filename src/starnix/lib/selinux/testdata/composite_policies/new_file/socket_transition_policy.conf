# Domain for socket testing
type socket_test_t;
typeattribute socket_test_t test_a;

# Label unix stream sockets created by "socket_test_t" with "unix_stream_socket_test_t"
type unix_stream_socket_test_t;
type_transition socket_test_t self:unix_stream_socket unix_stream_socket_test_t;

# Label TCP sockets created by "socket_test_t" with "tcp_socket_test_t"
type tcp_socket_test_t;
type_transition socket_test_t self:tcp_socket tcp_socket_test_t;

# Label UDP sockets created by "socket_test_t" with "udp_socket_test_t"
type udp_socket_test_t;
type_transition socket_test_t self:udp_socket udp_socket_test_t;

# Associate the test role with socket types
role test_r types { unix_stream_socket_test_t tcp_socket_test_t udp_socket_test_t };

# Label socket files created by "socket_test_t" in tmpfs with "sock_file_test_t"
type sock_file_test_t;
type_transition socket_test_t tmpfs_t:sock_file sock_file_test_t;
allow socket_test_t tmpfs_t:dir { search write add_name };
allow sock_file_test_t tmpfs_t:filesystem { associate };
allow socket_test_t sock_file_test_t:sock_file { create getattr };

# Grant permissions to the "socket_test_t" domain to needed socket operations.
allow socket_test_t unix_stream_socket_test_t:unix_stream_socket { create getattr bind };
allow socket_test_t tcp_socket_test_t:tcp_socket { create getattr };
allow socket_test_t udp_socket_test_t:udp_socket { create getattr };
