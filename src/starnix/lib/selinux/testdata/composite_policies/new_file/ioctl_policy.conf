# Label applied to temporary files used in this test.
type test_ioctl_file_t;
typeattribute test_ioctl_file_t file_like_a;
allow test_ioctl_file_t tmpfs_t:filesystem { associate };
allow tmpfs_t self:filesystem { associate };

# Domain used to validate that FIGETBSZ access is granted via "getattr".
type test_ioctl_figetbsz_allowed_t;
typeattribute test_ioctl_figetbsz_allowed_t test_a;
allow test_ioctl_figetbsz_allowed_t test_ioctl_file_t:file { getattr };

# Domain used to validate that FIGETBSZ access is denied if "getattr" is not allowed.
type test_ioctl_figetbsz_denied_t;
typeattribute test_ioctl_figetbsz_denied_t test_a;
neverallow test_ioctl_figetbsz_denied_t test_ioctl_file_t:file { getattr };

# Domain used to validate that a non-special-cased ioctl syscall is granted via "ioctl".
type test_ioctl_allowed_t;
typeattribute test_ioctl_allowed_t test_a;
allow test_ioctl_allowed_t test_ioctl_file_t:file { ioctl };

# Domain used to validate that a non-special-cased ioctl syscall is denied if "ioctl" is not
# allowed.
type test_ioctl_denied_t;
typeattribute test_ioctl_denied_t test_a;
neverallow test_ioctl_denied_t test_ioctl_file_t:file { ioctl };

# Domain used to validate that, when the "ioctl" permission is granted and extended permissions are
# defined, an ioctl request is allowed if and only if it passes the extended permission filter.
type test_ioctl_xperms_filtered_t;
typeattribute test_ioctl_xperms_filtered_t test_a;
allow test_ioctl_xperms_filtered_t test_ioctl_file_t:file { ioctl };
allowxperm test_ioctl_xperms_filtered_t test_ioctl_file_t:file ioctl { 0xabcd };

# Domain used to validate that access is not granted due to an extended permission alone; the
# "ioctl" permission must also be allowed.
type test_ioctl_xperms_only_t;
typeattribute test_ioctl_xperms_only_t test_a;
allowxperm test_ioctl_xperms_only_t test_ioctl_file_t:file ioctl { 0xabcd };
