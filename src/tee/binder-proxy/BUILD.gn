# Copyright 2024 The Fuchsia Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//src/lib/android/aidl/aidl.gni")

group("tests") {
  testonly = true
  deps = [
    ":binder-proxy-tests",
    "tests",
  ]
}

rustc_binary("bin") {
  output_name = "binder_proxy"
  edition = "2021"

  with_unit_tests = true

  sources = [
    "src/binder_proxy.rs",
    "src/bound_virtio_socket.rs",
    "src/convert.rs",
    "src/main.rs",
    "src/microfuchsia_control.rs",
    "src/ta_rpc_session.rs",
    "src/trusted_app.rs",
  ]

  deps = [
    ":android_system_microfuchsia_trusted_app",
    ":android_system_microfuchsia_vm_service",
    ":binder_proxy_config",
    "//sdk/fidl/fuchsia.hardware.virtio.pmem:fuchsia.hardware.virtio.pmem_rust",
    "//sdk/fidl/fuchsia.tee:fuchsia.tee_rust",
    "//sdk/rust/zx",
    "//src/lib/android/binder/rust:binder",
    "//src/lib/android/binder/rust/rpcbinder",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-sync",
    "//src/paravirtualization/lib/vsock/vsock_sys",
    "//src/tee/lib/dev_urandom_compat",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:libc",
    "//third_party/rust_crates:log",
  ]
  test_deps = [ "//third_party/rust_crates:test-case" ]
}

trusted_app_aidl_interface_files = [
  "aidl/android/system/microfuchsia/trusted_app/ITrustedApp.aidl",
  "aidl/android/system/microfuchsia/trusted_app/ITrustedAppSession.aidl",
]

trusted_app_aidl_parcelable_files = [
  "aidl/android/system/microfuchsia/trusted_app/Buffer.aidl",
  "aidl/android/system/microfuchsia/trusted_app/Direction.aidl",
  "aidl/android/system/microfuchsia/trusted_app/OpResult.aidl",
  "aidl/android/system/microfuchsia/trusted_app/Parameter.aidl",
  "aidl/android/system/microfuchsia/trusted_app/ParameterSet.aidl",
  "aidl/android/system/microfuchsia/trusted_app/ReturnOrigin.aidl",
  "aidl/android/system/microfuchsia/trusted_app/Value.aidl",
]

aidl_rust("android_system_microfuchsia_trusted_app") {
  base = "aidl"
  interfaces = trusted_app_aidl_interface_files
  parcelables = trusted_app_aidl_parcelable_files
}

aidl_cpp("android_system_microfuchsia_trusted_app_cpp") {
  base = "aidl"
  interfaces = trusted_app_aidl_interface_files
  parcelables = trusted_app_aidl_parcelable_files
}

android_system_microfuchsia_vm_service_aidl_interfaces = [
  "aidl/android/system/microfuchsia/vm_service/IMicrofuchsia.aidl",
  "aidl/android/system/microfuchsia/vm_service/IHostProxy.aidl",
]

aidl_rust("android_system_microfuchsia_vm_service") {
  base = "aidl"
  interfaces = android_system_microfuchsia_vm_service_aidl_interfaces
}

aidl_cpp("android_system_microfuchsia_vm_service_cpp") {
  base = "aidl"
  interfaces = android_system_microfuchsia_vm_service_aidl_interfaces
}

fuchsia_component_manifest("manifest") {
  component_name = "binder-proxy"
  manifest = "meta/binder_proxy.cml"
}

fuchsia_component("component") {
  cm_label = ":manifest"
  deps = [ ":bin" ]
}

fuchsia_structured_config_rust_lib("binder_proxy_config") {
  cm_label = ":manifest"
}

fuchsia_package("binder-proxy") {
  deps = [ ":component" ]
}

fuchsia_unittest_package("binder-proxy-tests") {
  deps = [ ":bin_test" ]
}
