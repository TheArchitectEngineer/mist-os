# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

static_library("minfs") {
  friend = [
    "test:*",
    "allocator/test:*",
    "//src/storage/conformance/conformance_harness/minfs:bin",
  ]
  visibility = [ "//src/storage/*" ]
  public = [
    "bcache.h",
    "format.h",
    "fsck.h",
    "minfs.h",
    "mount.h",
    "transaction_limits.h",
  ]
  sources = [
    "allocator/allocator.h",
    "allocator/allocator_common.cc",
    "allocator/allocator_reservation.cc",
    "allocator/allocator_reservation.h",
    "allocator/inode_manager.h",
    "allocator/metadata.cc",
    "allocator/metadata.h",
    "allocator/storage.h",
    "allocator/storage_common.cc",
    "block_utils.h",
    "buffer_view.cc",
    "buffer_view.h",
    "cached_block_transaction.h",
    "directory.cc",
    "directory.h",
    "file.cc",
    "file.h",
    "fsck.cc",
    "lazy_buffer.cc",
    "lazy_buffer.h",
    "lazy_reader.cc",
    "lazy_reader.h",
    "minfs.cc",
    "minfs_private.h",
    "pending_work.h",
    "resizeable_array_buffer.cc",
    "resizeable_array_buffer.h",
    "resizeable_buffer.h",
    "runner.cc",
    "runner.h",
    "superblock.h",
    "transaction_limits.cc",
    "unowned_vmo_buffer.h",
    "vnode.cc",
    "vnode.h",
    "vnode_allocation.h",
    "vnode_mapper.cc",
    "vnode_mapper.h",
    "writeback.cc",
    "writeback.h",
  ]
  public_deps = [
    "//src/storage/lib/vfs/cpp/inspect",
    "//src/storage/lib/vfs/cpp/transaction",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/storage/buffer",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
  ]
  deps = [
    "//sdk/lib/async:async-cpp",
    "//sdk/lib/fit",
    "//sdk/lib/syslog/cpp",
    "//src/storage/fvm",
    "//src/storage/lib/trace:cpp",
    "//src/storage/lib/vfs/cpp",
    "//zircon/system/ulib/bitmap",
    "//zircon/system/ulib/range",
    "//zircon/system/ulib/storage/operation",
    "//zircon/third_party/ulib/cksum",
    "//zircon/third_party/ulib/safemath",
  ]

  if (is_fuchsia) {
    sources += [
      "allocator/allocator.cc",
      "allocator/inode_manager.cc",
      "allocator/storage.cc",
      "bcache.cc",
      "component_runner.cc",
      "component_runner.h",
      "file_target.cc",
      "minfs_inspect_tree.cc",
      "minfs_inspect_tree.h",
      "minfs_target.cc",
      "mount.cc",
      "service/admin.cc",
      "service/admin.h",
      "service/lifecycle.cc",
      "service/lifecycle.h",
      "service/startup.cc",
      "service/startup.h",
      "superblock.cc",
      "vnode_allocation.cc",
    ]
    public_deps += [
      # fsck.h includes block-client/cpp/block-device.h
      "//src/storage/lib/block_client/cpp",

      # Several headers include vfs headers
      "//src/storage/lib/vfs/cpp",

      # Used by the MinfsInspectTree class
      "//sdk/lib/inspect/component/cpp:cpp",
      "//zircon/system/ulib/zx",

      # runner.h includes lib/async-loop/cpp/loop.h
      "//sdk/lib/async-loop:async-loop-cpp",

      # mount.h includes fidl/fuchsia.process.lifecycle/cpp/wire.h
      "//sdk/fidl/fuchsia.process.lifecycle:fuchsia.process.lifecycle_cpp",
    ]
    deps += [
      "//sdk/fidl/fuchsia.device:fuchsia.device_cpp",
      "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
      "//sdk/lib/async",
      "//sdk/lib/async-default",
      "//sdk/lib/async-loop",
      "//sdk/lib/async-loop:async-loop-default",
      "//sdk/lib/fidl",
      "//sdk/lib/sys/cpp:cpp",
      "//sdk/lib/syslog/cpp",
      "//src/storage/fidl/fuchsia.fs.startup:fuchsia.fs.startup_cpp",
      "//src/storage/fvm",
      "//src/storage/lib/storage-metrics",
      "//src/storage/lib/vfs/cpp/journal",
      "//zircon/system/ulib/fdio-caller",
      "//zircon/system/ulib/fzl",
      "//zircon/system/ulib/inspect",
      "//zircon/system/ulib/sync",
      "//zircon/system/ulib/trace-provider",
    ]
  } else {
    public += [ "host.h" ]
    sources += [
      "allocator/allocator_host.cc",
      "allocator/inode_manager_host.cc",
      "allocator/storage_host.cc",
      "bcache_host.cc",
      "file_host.cc",
      "host.cc",
      "minfs_host.cc",
      "superblock_host.cc",
    ]
    deps += [
      "//src/storage/lib/vfs/cpp/journal",
      "//src/zircon/lib/zircon:zircon-headers",
    ]
  }
}

group("tests") {
  testonly = true
  deps = [
    "allocator/test:minfs-allocator-tests",
    "bin:tests",
    "test:minfs-fs-tests",
    "test:minfs-fuzzers",
    "test:minfs-slow-fs-tests",
    "test/host:minfs_host($host_toolchain)",
  ]
}
