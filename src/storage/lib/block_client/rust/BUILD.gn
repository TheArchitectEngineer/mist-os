# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_library.gni")
import("//src/storage/testing/driver_test_realm.gni")

group("rust") {
  public_deps = [ ":block-client" ]
}

rustc_library("block-client") {
  with_unit_tests = true
  edition = "2021"
  deps = [
    "//sdk/fidl/fuchsia.hardware.block:fuchsia.hardware.block_rust",
    "//sdk/fidl/fuchsia.hardware.block.driver:fuchsia.hardware.block.driver_rust",
    "//sdk/fidl/fuchsia.hardware.block.partition:fuchsia.hardware.block.partition_rust",
    "//sdk/fidl/fuchsia.hardware.block.volume:fuchsia.hardware.block.volume_rust",
    "//sdk/rust/zx",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-runtime",
    "//src/lib/fuchsia-sync",
    "//src/storage/lib/block_protocol",
    "//src/storage/lib/trace",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:lazy_static",
    "//third_party/rust_crates:linked-hash-map",
    "//third_party/rust_crates:log",
  ]
  test_deps = [
    "//src/lib/fuchsia",
    "//src/storage/lib/block_server",
    "//src/storage/lib/ramdevice_client",
  ]

  sources = [
    "src/cache.rs",
    "src/lib.rs",
  ]
}

rustc_library("fake-block-client") {
  with_unit_tests = false
  edition = "2021"
  deps = [
    ":block-client",
    "//sdk/fidl/fuchsia.hardware.block:fuchsia.hardware.block_rust",
    "//sdk/rust/zx",
    "//src/lib/fuchsia-sync",
    "//third_party/rust_crates:async-trait",
  ]
  sources = [ "src/fake_block_client.rs" ]
  source_root = "src/fake_block_client.rs"
}

storage_driver_test_realm_v2_component("block-client-tests-component") {
  component_name = "block-client-tests"
  deps = [ ":block-client_test" ]
}

fuchsia_test_package("block-client-tests") {
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
  test_components = [ ":block-client-tests-component" ]
}

group("tests") {
  testonly = true
  deps = [ ":block-client-tests" ]
}
