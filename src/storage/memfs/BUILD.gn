# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")

# The in-memory filesystem implementation.
static_library("lib") {
  public = [
    "memfs.h",
    "vnode_dir.h",
    "vnode_file.h",
  ]
  sources = [
    "dnode.cc",
    "dnode.h",
    "memfs.cc",
    "vnode.cc",
    "vnode.h",
    "vnode_dir.cc",
    "vnode_file.cc",
    "vnode_vmo.cc",
    "vnode_vmo.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/lib/async",
    "//sdk/lib/fidl/cpp/wire",
    "//src/storage/lib/vfs/cpp",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/zx",
  ]
  deps = [
    "//sdk/fidl/fuchsia.fs:fuchsia.fs_cpp",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/lib/async",
    "//sdk/lib/fidl/cpp/wire",
    "//sdk/lib/syslog/cpp",
    "//src/storage/lib/vfs/cpp",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/zx",
    "//zircon/third_party/ulib/safemath",
  ]

  # TODO(https://fxbug.dev/293618742): Remove uses of memfs as a library. Tests should use /tmp in
  # tests instead of running their own memfs instances.
  visibility = [
    ":*",
    "//src/lib/loader_service:loader_service_test_fixture",
    "//src/storage/conformance/conformance_harness/memfs:bin",
    "//src/storage/memfs/test/*",
    "//src/sys/component_manager/tests/rights:expose_dir_rights_bin",
  ]
}

# A C++ wrapper around ":lib" that handles setup and tear-down.
source_set("cpp") {
  public = [ "mounted_memfs.h" ]
  sources = [ "mounted_memfs.cc" ]

  deps = [
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/lib/async",
    "//sdk/lib/fdio",
    "//sdk/lib/fidl/cpp/wire",
    "//src/storage/memfs:lib",
    "//zircon/system/ulib/zx",
  ]

  public_deps = [
    ":lib",
    "//sdk/lib/async",
    "//sdk/lib/fdio",
    "//zircon/system/ulib/zx",
  ]

  # TODO(https://fxbug.dev/293618742): Remove uses of memfs as a library. Tests should use /tmp in
  # tests instead of running their own memfs instances.
  visibility = [
    ":*",
    "//src/storage/lib/vfs/cpp:fs-connection-test",
    "//src/storage/memfs/test/*",
  ]
}

executable("memfs_bin") {
  output_name = "memfs"
  sources = [ "component.cc" ]
  deps = [
    ":lib",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/async-loop:async-loop-default",
    "//sdk/lib/fidl/cpp/wire",
    "//sdk/lib/scheduler/cpp",
    "//sdk/lib/syslog/cpp",
    "//src/storage/lib/vfs/cpp",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/zx",
  ]
}

fuchsia_component("memfs_component") {
  manifest = "meta/memfs.cml"
  component_name = "memfs"
  deps = [ ":memfs_bin" ]
}

fuchsia_package("package") {
  package_name = "memfs"
  deps = [ ":memfs_component" ]
}

group("tests") {
  testonly = true
  deps = [ "test:tests" ]
}
