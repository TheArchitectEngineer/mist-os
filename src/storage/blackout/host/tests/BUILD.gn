# Copyright 2025 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/python/python_mobly_test.gni")

assert(is_host && is_linux)

python_mobly_test("blackout_integration_test_no_reboot") {
  main_source = "blackout.py"
  libraries = [
    "//src/storage/blackout/fidl/fuchsia.blackout.test:fuchsia.blackout.test_python",
    "//src/testing/end_to_end/honeydew",
    "//src/testing/end_to_end/mobly_base_tests:test_case_revive",
  ]
  params = {
    # Blackout args
    component_name = "/core/testing/storage-tests:blackout-target"
    component_url = "fuchsia-pkg://fuchsia.com/blackout-integration#meta/blackout-integration-component.cm"
    device_label = "test_label"
    device_path = "test_path"
    load_generation_duration = 5

    # test case revive args
    test_case_revive = true
    fuchsia_device_operation = "None"
  }
  environments = [ emu_env ]
}

python_mobly_test("blackout_integration_test_reboot") {
  main_source = "blackout.py"
  libraries = [
    "//src/storage/blackout/fidl/fuchsia.blackout.test:fuchsia.blackout.test_python",
    "//src/testing/end_to_end/honeydew",
    "//src/testing/end_to_end/mobly_base_tests:test_case_revive",
  ]
  params = {
    # Blackout args
    component_name = "/core/testing/storage-tests:blackout-target"
    component_url = "fuchsia-pkg://fuchsia.com/blackout-integration#meta/blackout-integration-component.cm"
    device_label = "loop"
    device_path = "loop"
    load_generation_duration = 5

    # test case revive args
    test_case_revive = true
    fuchsia_device_operation = "Soft-Reboot"
  }
  environments = [ vim3_env ]
}

python_mobly_test("blackout_integration_test_fail") {
  main_source = "blackout.py"
  libraries = [
    "//src/storage/blackout/fidl/fuchsia.blackout.test:fuchsia.blackout.test_python",
    "//src/testing/end_to_end/honeydew",
    "//src/testing/end_to_end/mobly_base_tests:test_case_revive",
  ]
  params = {
    # Blackout args
    component_name = "/core/testing/storage-tests:blackout-target"
    component_url = "fuchsia-pkg://fuchsia.com/blackout-integration#meta/blackout-integration-component.cm"
    device_label = "fail"
    device_path = "fail"
    load_generation_duration = 0

    # test case revive args
    test_case_revive = true
    fuchsia_device_operation = "None"
  }
}

python_mobly_test("blackout_fxfs_tree_soft_reboot") {
  main_source = "blackout.py"
  libraries = [
    "//src/storage/blackout/fidl/fuchsia.blackout.test:fuchsia.blackout.test_python",
    "//src/testing/end_to_end/honeydew",
    "//src/testing/end_to_end/mobly_base_tests:test_case_revive",
  ]
  params = {
    # Blackout args
    component_name = "/core/testing/storage-tests:blackout-target"
    component_url = "fuchsia-pkg://fuchsia.com/blackout-fxfs-tree#meta/blackout-fxfs-tree-component.cm"
    load_generation_duration = 30

    # TODO(https://fxbug.dev/338452001): the vim3 bootloader currently resets the gpt partition
    # table if it isn't the exact hard-coded partition table it expects, so we use the label of a
    # 32MiB partition that isn't used so it doesn't get blown away on reboot. Once the bootloader
    # doesn't do that, we can use our own partition (in other words, delete the following line
    # once the bug is resolved).
    device_label = "factory"

    # test case revive args
    test_case_revive = true
    fuchsia_device_operation = "Soft-Reboot"
  }
  environments = [ vim3_env ]
  timeout_secs = 360
}

python_mobly_test("blackout_fxfs_tree_hard_reboot") {
  main_source = "blackout.py"
  libraries = [
    "//src/storage/blackout/fidl/fuchsia.blackout.test:fuchsia.blackout.test_python",
    "//src/testing/end_to_end/honeydew",
    "//src/testing/end_to_end/mobly_base_tests:test_case_revive",
  ]
  params = {
    # Blackout args
    component_name = "/core/testing/storage-tests:blackout-target"
    component_url = "fuchsia-pkg://fuchsia.com/blackout-fxfs-tree#meta/blackout-fxfs-tree-component.cm"
    load_generation_duration = 30

    # TODO(https://fxbug.dev/338452001): the vim3 bootloader currently resets the gpt partition
    # table if it isn't the exact hard-coded partition table it expects, so we use the label of a
    # 32MiB partition that isn't used so it doesn't get blown away on reboot. Once the bootloader
    # doesn't do that, we can use our own partition (in other words, delete the following line
    # once the bug is resolved).
    device_label = "factory"

    # test case revive args
    test_case_revive = true
    fuchsia_device_operation = "Hard-Reboot"
  }
  environments = [ vim3_env ]
  timeout_secs = 360
}

python_mobly_test("blackout_fxfs_allocate_soft_reboot") {
  main_source = "blackout.py"
  libraries = [
    "//src/storage/blackout/fidl/fuchsia.blackout.test:fuchsia.blackout.test_python",
    "//src/testing/end_to_end/honeydew",
    "//src/testing/end_to_end/mobly_base_tests:test_case_revive",
  ]
  params = {
    # Blackout args
    component_name = "/core/testing/storage-tests:blackout-target"
    component_url = "fuchsia-pkg://fuchsia.com/blackout-fxfs-allocate#meta/blackout-fxfs-allocate-component.cm"
    load_generation_duration = 30

    # TODO(https://fxbug.dev/338452001): the vim3 bootloader currently resets the gpt partition
    # table if it isn't the exact hard-coded partition table it expects, so we use the label of a
    # 32MiB partition that isn't used so it doesn't get blown away on reboot. Once the bootloader
    # doesn't do that, we can use our own partition (in other words, delete the following line
    # once the bug is resolved).
    device_label = "factory"

    # test case revive args
    test_case_revive = true
    fuchsia_device_operation = "Soft-Reboot"
  }
  environments = [ vim3_env ]
  timeout_secs = 360
}

python_mobly_test("blackout_fxfs_allocate_hard_reboot") {
  main_source = "blackout.py"
  libraries = [
    "//src/storage/blackout/fidl/fuchsia.blackout.test:fuchsia.blackout.test_python",
    "//src/testing/end_to_end/honeydew",
    "//src/testing/end_to_end/mobly_base_tests:test_case_revive",
  ]
  params = {
    # Blackout args
    component_name = "/core/testing/storage-tests:blackout-target"
    component_url = "fuchsia-pkg://fuchsia.com/blackout-fxfs-allocate#meta/blackout-fxfs-allocate-component.cm"
    load_generation_duration = 30

    # TODO(https://fxbug.dev/338452001): the vim3 bootloader currently resets the gpt partition
    # table if it isn't the exact hard-coded partition table it expects, so we use the label of a
    # 32MiB partition that isn't used so it doesn't get blown away on reboot. Once the bootloader
    # doesn't do that, we can use our own partition (in other words, delete the following line
    # once the bug is resolved).
    device_label = "factory"

    # test case revive args
    test_case_revive = true
    fuchsia_device_operation = "Hard-Reboot"
  }
  environments = [ vim3_env ]
  timeout_secs = 360
}
