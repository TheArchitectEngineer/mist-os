# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//build/test.gni")

group("tests") {
  testonly = true
  deps = [
    ":fvm-integration-test",
    ":fvm-rust-tests",
    ":fvm-tests",
    ":fvm_unit($host_toolchain)",
    "//src/storage/fvm/driver:tests",
  ]
}

static_library("fvm") {
  public = [
    "format.h",
    "fvm.h",
    "fvm_sparse.h",
    "metadata.h",
    "metadata_buffer.h",
    "sparse_reader.h",
  ]
  sources = [
    "format.cc",
    "fvm.cc",
    "metadata.cc",
    "metadata_buffer.cc",
    "sparse_reader.cc",
  ]

  deps = [
    "//sdk/lib/fit",
    "//src/lib/digest",
    "//src/lib/uuid",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/range",
    "//zircon/third_party/ulib/lz4",
    "//zircon/third_party/ulib/safemath",
  ]
  public_deps = [
    "//src/lib/digest",
    "//src/storage/gpt",
    "//zircon/system/ulib/zx",
    "//zircon/third_party/ulib/lz4",
  ]

  if (is_fuchsia) {
    sources += [
      "client.cc",
      "fvm_check.cc",
      "vmo_metadata_buffer.cc",
    ]
    public += [
      "client.h",
      "fvm_check.h",
      "vmo_metadata_buffer.h",
    ]

    deps += [
      "//sdk/fidl/fuchsia.hardware.block.volume:fuchsia.hardware.block.volume_cpp",
      "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
      "//src/storage/gpt",
      "//src/storage/lib/block_client/cpp",
      "//zircon/system/ulib/fzl",
      "//zircon/system/ulib/sync",
      "//zircon/system/ulib/zx",
    ]
  } else {
    # fvm-check.cpp has #include <zircon/status.h> even when built for host.
    public_deps += [ "//src/zircon/lib/zircon:zircon-headers" ]
  }
}

static_library("test_support") {
  testonly = true

  sources = [
    "test_support.cc",
    "test_support.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.hardware.block.volume:fuchsia.hardware.block.volume_cpp",
    "//src/storage/fvm",
    "//src/storage/lib/ramdevice_client/cpp",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/zx",
  ]

  deps = [
    "//sdk/fidl/fuchsia.device:fuchsia.device_cpp",
    "//sdk/fidl/fuchsia.hardware.block.partition:fuchsia.hardware.block.partition_cpp",
    "//sdk/fidl/fuchsia.hardware.block.volume:fuchsia.hardware.block.volume_cpp",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/lib/component/incoming/cpp",
    "//sdk/lib/device-watcher/cpp",
    "//sdk/lib/fdio",
    "//sdk/lib/fidl",
    "//src/storage/fvm",
    "//src/storage/lib/block_client/cpp",
    "//src/storage/lib/fs_management",
    "//src/storage/lib/ramdevice_client/cpp",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/fdio-caller",
    "//zircon/system/ulib/fzl",
    "//zircon/system/ulib/zx",
    "//zircon/system/ulib/zxtest",
  ]
}

test("fvm_unit") {
  output_name = "fvm-unit-test"
  sources = [
    "format_test.cc",
    "integrity_validation_test.cc",
    "metadata_test.cc",
    "partition_entry_test.cc",
    "slice_entry_test.cc",
  ]

  deps = [
    "//src/lib/uuid",
    "//src/storage/fvm",
    "//zircon/system/ulib/zxtest",
  ]

  if (is_fuchsia) {
    sources += [ "client_test.cc" ]
    deps += [
      "//sdk/lib/fdio",
      "//src/storage/lib/block_client/cpp",
      "//zircon/system/ulib/fdio-caller",
      "//zircon/system/ulib/zx",
    ]
  }
}

fuchsia_unittest_package("fvm-tests") {
  deps = [ ":fvm_unit" ]
}

test("fvm-integration") {
  output_name = "fvm-integration-test"
  sources = [
    "fvm_integration_test.cc",
    "resize_integration_test.cc",
  ]

  deps = [
    ":test_support",
    "//sdk/fidl/fuchsia.device:fuchsia.device_cpp",
    "//sdk/fidl/fuchsia.hardware.block.partition:fuchsia.hardware.block.partition_cpp",
    "//sdk/fidl/fuchsia.hardware.block.volume:fuchsia.hardware.block.volume_cpp",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp",
    "//sdk/lib/async-loop:async-loop-cpp",
    "//sdk/lib/async-loop:async-loop-default",
    "//sdk/lib/fdio",
    "//src/devices/testing/driver-integration-test-shim",
    "//src/lib/fxl",
    "//src/storage/blobfs",
    "//src/storage/fvm",
    "//src/storage/lib/block_client/cpp",
    "//src/storage/lib/fs_management",
    "//src/storage/lib/ramdevice_client/cpp",
    "//src/storage/minfs",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/fdio-caller",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
    "//zircon/system/ulib/zxtest",
  ]

  # Other components/binaries we depend on.
  deps += [
    "//src/devices/block/drivers/core",
    "//src/devices/block/drivers/ramdisk",
    "//src/devices/bus/drivers/platform",
    "//src/storage/fvm/driver",
  ]
}

fuchsia_test_component("test-component") {
  component_name = "fvm-integration-test"
  manifest = "meta/fvm_integration_test.cml"
  deps = [ ":fvm-integration" ]
}

fuchsia_test_package("fvm-integration-test") {
  test_components = [ ":test-component" ]
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
  deps = [ "//src/storage/minfs/bin:minfs-component" ]
}

fvm_sources = [
  "src/device.rs",
  "src/main.rs",
  "src/mapping.rs",
  "src/zxcrypt.rs",
]

fvm_deps = [
  "//sdk/fidl/fuchsia.fs:fuchsia.fs_rust",
  "//sdk/fidl/fuchsia.hardware.block:fuchsia.hardware.block_rust",
  "//sdk/fidl/fuchsia.hardware.block.volume:fuchsia.hardware.block.volume_rust",
  "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
  "//sdk/rust/zx",
  "//src/lib/fidl/rust/fidl",
  "//src/lib/fuchsia",
  "//src/lib/fuchsia-async",
  "//src/lib/fuchsia-runtime",
  "//src/lib/fuchsia-sync",
  "//src/lib/trace/rust:trace-provider",
  "//src/storage/fidl/fuchsia.fs.startup:fuchsia.fs.startup_rust",
  "//src/storage/fxfs/fidl/fuchsia.fxfs:fuchsia.fxfs_rust",
  "//src/storage/lib/block_client/rust",
  "//src/storage/lib/block_server",
  "//src/storage/lib/fs_management/rust:fs_management",
  "//src/storage/lib/vfs/rust:vfs",
  "//third_party/rust_crates:aes",
  "//third_party/rust_crates:anyhow",
  "//third_party/rust_crates:async-lock",
  "//third_party/rust_crates:event-listener",
  "//third_party/rust_crates:futures",
  "//third_party/rust_crates:log",
  "//third_party/rust_crates:regex",
  "//third_party/rust_crates:sha2",
  "//third_party/rust_crates:static_assertions",
  "//third_party/rust_crates:uuid",
  "//third_party/rust_crates:zerocopy",
]

rustc_binary("fvm_rust") {
  name = "fvm"
  edition = "2021"
  sources = fvm_sources
  deps = fvm_deps

  # Without optimizations, debug builds trigger test timeouts (e.g. minfs-full-tests), so enable
  # optimizations for all builds.
  configs -= [ "//build/config:default_optimize" ]
  configs += [ "//build/config:optimize_speed" ]
  if (!is_lto_variant) {
    configs += [ "//build/config/lto:thinlto" ]
  }
}

rustc_test("fvm_rust_test") {
  edition = "2021"
  source_root = "src/main.rs"
  sources = fvm_sources
  deps = fvm_deps + [
           ":golden",
           "//src/lib/fuchsia-component",
           "//src/lib/fuchsia-fs",
           "//src/storage/lib/block_client/rust:fake-block-client",
           "//src/storage/lib/block_server:fake_block_server",
           "//third_party/rust_crates:assert_matches",
           "//third_party/rust_crates:rand",
         ]
}

fuchsia_component("fvm-component") {
  component_name = "fvm2"
  manifest = "meta/fvm2.cml"
  deps = [
    ":fvm_rust",
    "//src/storage/lib/fs_management:fs_management_shard",
  ]
}

fuchsia_package("package") {
  package_name = "fvm2"
  deps = [ ":fvm-component" ]
}

resource("golden") {
  sources = [ "golden-fvm.blk" ]
  outputs = [ "data/{{source_file_part}}" ]
}

fuchsia_unittest_package("fvm-rust-tests") {
  deps = [ ":fvm_rust_test" ]
}
