// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Generated by ./bindgen.sh using bindgen 0.72.0

#![allow(dead_code)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(unused_results)]
#![allow(non_upper_case_globals)]

pub type __socklen_t = ::std::os::raw::c_uint;
pub type zx_rights_t = u32;
pub type zx_time_t = i64;
pub type zx_handle_t = u32;
pub type zx_status_t = i32;
pub type zx_signals_t = u32;
pub type zx_koid_t = u64;
pub type zx_off_t = u64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct zx_iovec {
    pub buffer: *mut ::std::os::raw::c_void,
    pub capacity: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zx_iovec"][::std::mem::size_of::<zx_iovec>() - 16usize];
    ["Alignment of zx_iovec"][::std::mem::align_of::<zx_iovec>() - 8usize];
    ["Offset of field: zx_iovec::buffer"][::std::mem::offset_of!(zx_iovec, buffer) - 0usize];
    ["Offset of field: zx_iovec::capacity"][::std::mem::offset_of!(zx_iovec, capacity) - 8usize];
};
impl Default for zx_iovec {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type zx_iovec_t = zx_iovec;
pub type zx_obj_type_t = u32;
pub type zxio_flags_t = u32;
pub type zxio_vmo_flags_t = u32;
pub type zxio_signals_t = u32;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zxio_tag {
    pub reserved: [u64; 4usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_tag"][::std::mem::size_of::<zxio_tag>() - 32usize];
    ["Alignment of zxio_tag"][::std::mem::align_of::<zxio_tag>() - 8usize];
    ["Offset of field: zxio_tag::reserved"][::std::mem::offset_of!(zxio_tag, reserved) - 0usize];
};
pub type zxio_t = zxio_tag;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zxio_fsverity_descriptor {
    pub hash_algorithm: u8,
    pub salt_size: u8,
    pub salt: [u8; 32usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_fsverity_descriptor"]
        [::std::mem::size_of::<zxio_fsverity_descriptor>() - 34usize];
    ["Alignment of zxio_fsverity_descriptor"]
        [::std::mem::align_of::<zxio_fsverity_descriptor>() - 1usize];
    ["Offset of field: zxio_fsverity_descriptor::hash_algorithm"]
        [::std::mem::offset_of!(zxio_fsverity_descriptor, hash_algorithm) - 0usize];
    ["Offset of field: zxio_fsverity_descriptor::salt_size"]
        [::std::mem::offset_of!(zxio_fsverity_descriptor, salt_size) - 1usize];
    ["Offset of field: zxio_fsverity_descriptor::salt"]
        [::std::mem::offset_of!(zxio_fsverity_descriptor, salt) - 2usize];
};
pub type zxio_fsverity_descriptor_t = zxio_fsverity_descriptor;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zxio_private {
    pub reserved: [u64; 29usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_private"][::std::mem::size_of::<zxio_private>() - 232usize];
    ["Alignment of zxio_private"][::std::mem::align_of::<zxio_private>() - 8usize];
    ["Offset of field: zxio_private::reserved"]
        [::std::mem::offset_of!(zxio_private, reserved) - 0usize];
};
pub type zxio_private_t = zxio_private;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zxio_storage {
    pub io: zxio_t,
    pub reserved: zxio_private_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_storage"][::std::mem::size_of::<zxio_storage>() - 264usize];
    ["Alignment of zxio_storage"][::std::mem::align_of::<zxio_storage>() - 8usize];
    ["Offset of field: zxio_storage::io"][::std::mem::offset_of!(zxio_storage, io) - 0usize];
    ["Offset of field: zxio_storage::reserved"]
        [::std::mem::offset_of!(zxio_storage, reserved) - 32usize];
};
pub type zxio_storage_t = zxio_storage;
pub type zxio_object_type_t = u32;
pub type zxio_storage_alloc = ::std::option::Option<
    unsafe extern "C" fn(
        type_: zxio_object_type_t,
        out_storage: *mut *mut zxio_storage_t,
        out_context: *mut *mut ::std::os::raw::c_void,
    ) -> zx_status_t,
>;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zxio_datagram_prelude_size {
    pub tx: usize,
    pub rx: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_datagram_prelude_size"]
        [::std::mem::size_of::<zxio_datagram_prelude_size>() - 16usize];
    ["Alignment of zxio_datagram_prelude_size"]
        [::std::mem::align_of::<zxio_datagram_prelude_size>() - 8usize];
    ["Offset of field: zxio_datagram_prelude_size::tx"]
        [::std::mem::offset_of!(zxio_datagram_prelude_size, tx) - 0usize];
    ["Offset of field: zxio_datagram_prelude_size::rx"]
        [::std::mem::offset_of!(zxio_datagram_prelude_size, rx) - 8usize];
};
pub type zxio_datagram_prelude_size_t = zxio_datagram_prelude_size;
pub type zxio_node_protocols_t = u64;
pub type zxio_id_t = u64;
pub type zxio_operations_t = u64;
pub type zxio_rights_t = zxio_operations_t;
pub type zxio_abilities_t = zxio_operations_t;
pub type zxio_hash_algorithm_t = u8;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zxio_verification_options {
    pub salt: [u8; 32usize],
    pub salt_size: usize,
    pub hash_alg: zxio_hash_algorithm_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_verification_options"]
        [::std::mem::size_of::<zxio_verification_options>() - 48usize];
    ["Alignment of zxio_verification_options"]
        [::std::mem::align_of::<zxio_verification_options>() - 8usize];
    ["Offset of field: zxio_verification_options::salt"]
        [::std::mem::offset_of!(zxio_verification_options, salt) - 0usize];
    ["Offset of field: zxio_verification_options::salt_size"]
        [::std::mem::offset_of!(zxio_verification_options, salt_size) - 32usize];
    ["Offset of field: zxio_verification_options::hash_alg"]
        [::std::mem::offset_of!(zxio_verification_options, hash_alg) - 40usize];
};
pub type zxio_verification_options_t = zxio_verification_options;
pub type zxio_selinux_context_state_t = u8;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct zxio_node_attr {
    pub protocols: zxio_node_protocols_t,
    pub abilities: zxio_abilities_t,
    pub id: zxio_id_t,
    pub content_size: u64,
    pub storage_size: u64,
    pub link_count: u64,
    pub creation_time: u64,
    pub modification_time: u64,
    pub change_time: u64,
    pub access_time: u64,
    pub selinux_context: *mut u8,
    pub selinux_context_length: u16,
    pub selinux_context_state: zxio_selinux_context_state_t,
    pub mode: u32,
    pub uid: u32,
    pub gid: u32,
    pub rdev: u64,
    pub fsverity_options: zxio_verification_options_t,
    pub fsverity_root_hash: *mut u8,
    pub fsverity_enabled: bool,
    pub casefold: bool,
    pub object_type: zxio_object_type_t,
    pub wrapping_key_id: [u8; 16usize],
    pub has: zxio_node_attr_zxio_node_attr_has_t,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zxio_node_attr_zxio_node_attr_has_t {
    pub protocols: bool,
    pub abilities: bool,
    pub id: bool,
    pub content_size: bool,
    pub storage_size: bool,
    pub link_count: bool,
    pub creation_time: bool,
    pub modification_time: bool,
    pub change_time: bool,
    pub access_time: bool,
    pub mode: bool,
    pub uid: bool,
    pub gid: bool,
    pub rdev: bool,
    pub fsverity_options: bool,
    pub fsverity_root_hash: bool,
    pub fsverity_enabled: bool,
    pub object_type: bool,
    pub casefold: bool,
    pub wrapping_key_id: bool,
    pub selinux_context: bool,
    pub pending_access_time_update: bool,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_node_attr_zxio_node_attr_has_t"]
        [::std::mem::size_of::<zxio_node_attr_zxio_node_attr_has_t>() - 22usize];
    ["Alignment of zxio_node_attr_zxio_node_attr_has_t"]
        [::std::mem::align_of::<zxio_node_attr_zxio_node_attr_has_t>() - 1usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::protocols"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, protocols) - 0usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::abilities"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, abilities) - 1usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::id"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, id) - 2usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::content_size"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, content_size) - 3usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::storage_size"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, storage_size) - 4usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::link_count"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, link_count) - 5usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::creation_time"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, creation_time) - 6usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::modification_time"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, modification_time) - 7usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::change_time"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, change_time) - 8usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::access_time"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, access_time) - 9usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::mode"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, mode) - 10usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::uid"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, uid) - 11usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::gid"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, gid) - 12usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::rdev"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, rdev) - 13usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::fsverity_options"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, fsverity_options) - 14usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::fsverity_root_hash"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, fsverity_root_hash) - 15usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::fsverity_enabled"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, fsverity_enabled) - 16usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::object_type"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, object_type) - 17usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::casefold"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, casefold) - 18usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::wrapping_key_id"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, wrapping_key_id) - 19usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::selinux_context"]
        [::std::mem::offset_of!(zxio_node_attr_zxio_node_attr_has_t, selinux_context) - 20usize];
    ["Offset of field: zxio_node_attr_zxio_node_attr_has_t::pending_access_time_update"][::std::mem::offset_of!(
        zxio_node_attr_zxio_node_attr_has_t,
        pending_access_time_update
    )
        - 21usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_node_attr"][::std::mem::size_of::<zxio_node_attr>() - 216usize];
    ["Alignment of zxio_node_attr"][::std::mem::align_of::<zxio_node_attr>() - 8usize];
    ["Offset of field: zxio_node_attr::protocols"]
        [::std::mem::offset_of!(zxio_node_attr, protocols) - 0usize];
    ["Offset of field: zxio_node_attr::abilities"]
        [::std::mem::offset_of!(zxio_node_attr, abilities) - 8usize];
    ["Offset of field: zxio_node_attr::id"][::std::mem::offset_of!(zxio_node_attr, id) - 16usize];
    ["Offset of field: zxio_node_attr::content_size"]
        [::std::mem::offset_of!(zxio_node_attr, content_size) - 24usize];
    ["Offset of field: zxio_node_attr::storage_size"]
        [::std::mem::offset_of!(zxio_node_attr, storage_size) - 32usize];
    ["Offset of field: zxio_node_attr::link_count"]
        [::std::mem::offset_of!(zxio_node_attr, link_count) - 40usize];
    ["Offset of field: zxio_node_attr::creation_time"]
        [::std::mem::offset_of!(zxio_node_attr, creation_time) - 48usize];
    ["Offset of field: zxio_node_attr::modification_time"]
        [::std::mem::offset_of!(zxio_node_attr, modification_time) - 56usize];
    ["Offset of field: zxio_node_attr::change_time"]
        [::std::mem::offset_of!(zxio_node_attr, change_time) - 64usize];
    ["Offset of field: zxio_node_attr::access_time"]
        [::std::mem::offset_of!(zxio_node_attr, access_time) - 72usize];
    ["Offset of field: zxio_node_attr::selinux_context"]
        [::std::mem::offset_of!(zxio_node_attr, selinux_context) - 80usize];
    ["Offset of field: zxio_node_attr::selinux_context_length"]
        [::std::mem::offset_of!(zxio_node_attr, selinux_context_length) - 88usize];
    ["Offset of field: zxio_node_attr::selinux_context_state"]
        [::std::mem::offset_of!(zxio_node_attr, selinux_context_state) - 90usize];
    ["Offset of field: zxio_node_attr::mode"]
        [::std::mem::offset_of!(zxio_node_attr, mode) - 92usize];
    ["Offset of field: zxio_node_attr::uid"][::std::mem::offset_of!(zxio_node_attr, uid) - 96usize];
    ["Offset of field: zxio_node_attr::gid"]
        [::std::mem::offset_of!(zxio_node_attr, gid) - 100usize];
    ["Offset of field: zxio_node_attr::rdev"]
        [::std::mem::offset_of!(zxio_node_attr, rdev) - 104usize];
    ["Offset of field: zxio_node_attr::fsverity_options"]
        [::std::mem::offset_of!(zxio_node_attr, fsverity_options) - 112usize];
    ["Offset of field: zxio_node_attr::fsverity_root_hash"]
        [::std::mem::offset_of!(zxio_node_attr, fsverity_root_hash) - 160usize];
    ["Offset of field: zxio_node_attr::fsverity_enabled"]
        [::std::mem::offset_of!(zxio_node_attr, fsverity_enabled) - 168usize];
    ["Offset of field: zxio_node_attr::casefold"]
        [::std::mem::offset_of!(zxio_node_attr, casefold) - 169usize];
    ["Offset of field: zxio_node_attr::object_type"]
        [::std::mem::offset_of!(zxio_node_attr, object_type) - 172usize];
    ["Offset of field: zxio_node_attr::wrapping_key_id"]
        [::std::mem::offset_of!(zxio_node_attr, wrapping_key_id) - 176usize];
    ["Offset of field: zxio_node_attr::has"]
        [::std::mem::offset_of!(zxio_node_attr, has) - 192usize];
};
impl Default for zxio_node_attr {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type zxio_node_attributes_t = zxio_node_attr;
pub type zxio_seek_origin_t = u32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct zxio_dirent_iterator {
    pub io: *mut zxio_t,
    pub opaque: [u8; 65584usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_dirent_iterator"][::std::mem::size_of::<zxio_dirent_iterator>() - 65592usize];
    ["Alignment of zxio_dirent_iterator"][::std::mem::align_of::<zxio_dirent_iterator>() - 8usize];
    ["Offset of field: zxio_dirent_iterator::io"]
        [::std::mem::offset_of!(zxio_dirent_iterator, io) - 0usize];
    ["Offset of field: zxio_dirent_iterator::opaque"]
        [::std::mem::offset_of!(zxio_dirent_iterator, opaque) - 8usize];
};
impl Default for zxio_dirent_iterator {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type zxio_dirent_iterator_t = zxio_dirent_iterator;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct zxio_dirent {
    pub protocols: zxio_node_protocols_t,
    pub abilities: zxio_abilities_t,
    pub id: zxio_id_t,
    pub has: zxio_dirent_zxio_dirent_has_t,
    pub name_length: u8,
    pub name: *mut ::std::os::raw::c_char,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zxio_dirent_zxio_dirent_has_t {
    pub protocols: bool,
    pub abilities: bool,
    pub id: bool,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_dirent_zxio_dirent_has_t"]
        [::std::mem::size_of::<zxio_dirent_zxio_dirent_has_t>() - 3usize];
    ["Alignment of zxio_dirent_zxio_dirent_has_t"]
        [::std::mem::align_of::<zxio_dirent_zxio_dirent_has_t>() - 1usize];
    ["Offset of field: zxio_dirent_zxio_dirent_has_t::protocols"]
        [::std::mem::offset_of!(zxio_dirent_zxio_dirent_has_t, protocols) - 0usize];
    ["Offset of field: zxio_dirent_zxio_dirent_has_t::abilities"]
        [::std::mem::offset_of!(zxio_dirent_zxio_dirent_has_t, abilities) - 1usize];
    ["Offset of field: zxio_dirent_zxio_dirent_has_t::id"]
        [::std::mem::offset_of!(zxio_dirent_zxio_dirent_has_t, id) - 2usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_dirent"][::std::mem::size_of::<zxio_dirent>() - 40usize];
    ["Alignment of zxio_dirent"][::std::mem::align_of::<zxio_dirent>() - 8usize];
    ["Offset of field: zxio_dirent::protocols"]
        [::std::mem::offset_of!(zxio_dirent, protocols) - 0usize];
    ["Offset of field: zxio_dirent::abilities"]
        [::std::mem::offset_of!(zxio_dirent, abilities) - 8usize];
    ["Offset of field: zxio_dirent::id"][::std::mem::offset_of!(zxio_dirent, id) - 16usize];
    ["Offset of field: zxio_dirent::has"][::std::mem::offset_of!(zxio_dirent, has) - 24usize];
    ["Offset of field: zxio_dirent::name_length"]
        [::std::mem::offset_of!(zxio_dirent, name_length) - 27usize];
    ["Offset of field: zxio_dirent::name"][::std::mem::offset_of!(zxio_dirent, name) - 32usize];
};
impl Default for zxio_dirent {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type zxio_dirent_t = zxio_dirent;
pub type zxio_shutdown_options_t = u32;
pub const advisory_lock_type_ADVISORY_LOCK_SHARED: advisory_lock_type = 1;
pub const advisory_lock_type_ADVISORY_LOCK_EXCLUSIVE: advisory_lock_type = 2;
pub const advisory_lock_type_ADVISORY_LOCK_UNLOCK: advisory_lock_type = 4;
pub type advisory_lock_type = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct advisory_lock_req {
    pub type_: advisory_lock_type,
    pub wait: bool,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of advisory_lock_req"][::std::mem::size_of::<advisory_lock_req>() - 8usize];
    ["Alignment of advisory_lock_req"][::std::mem::align_of::<advisory_lock_req>() - 4usize];
    ["Offset of field: advisory_lock_req::type_"]
        [::std::mem::offset_of!(advisory_lock_req, type_) - 0usize];
    ["Offset of field: advisory_lock_req::wait"]
        [::std::mem::offset_of!(advisory_lock_req, wait) - 4usize];
};
impl Default for advisory_lock_req {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type zxio_advisory_lock_req_t = advisory_lock_req;
pub type zxio_watch_directory_event_t = u32;
pub type zxio_watch_directory_cb = ::std::option::Option<
    unsafe extern "C" fn(
        event: zxio_watch_directory_event_t,
        name: *const ::std::os::raw::c_char,
        context: *mut ::std::os::raw::c_void,
    ) -> zx_status_t,
>;
pub type zxio_xattr_set_mode_t = u32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct zxio_xattr_data {
    pub data: *mut ::std::os::raw::c_void,
    pub vmo: zx_handle_t,
    pub len: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_xattr_data"][::std::mem::size_of::<zxio_xattr_data>() - 24usize];
    ["Alignment of zxio_xattr_data"][::std::mem::align_of::<zxio_xattr_data>() - 8usize];
    ["Offset of field: zxio_xattr_data::data"]
        [::std::mem::offset_of!(zxio_xattr_data, data) - 0usize];
    ["Offset of field: zxio_xattr_data::vmo"]
        [::std::mem::offset_of!(zxio_xattr_data, vmo) - 8usize];
    ["Offset of field: zxio_xattr_data::len"]
        [::std::mem::offset_of!(zxio_xattr_data, len) - 16usize];
};
impl Default for zxio_xattr_data {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type zxio_xattr_data_t = zxio_xattr_data;
pub type zxio_allocate_mode_t = u32;
pub type zxio_open_flags_t = u64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct zxio_open_options {
    pub inout_attr: *mut zxio_node_attributes_t,
    pub create_attr: *const zxio_node_attributes_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_open_options"][::std::mem::size_of::<zxio_open_options>() - 16usize];
    ["Alignment of zxio_open_options"][::std::mem::align_of::<zxio_open_options>() - 8usize];
    ["Offset of field: zxio_open_options::inout_attr"]
        [::std::mem::offset_of!(zxio_open_options, inout_attr) - 0usize];
    ["Offset of field: zxio_open_options::create_attr"]
        [::std::mem::offset_of!(zxio_open_options, create_attr) - 8usize];
};
impl Default for zxio_open_options {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type zxio_open_options_t = zxio_open_options;
pub type va_list = __builtin_va_list;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zx_info_handle_basic {
    pub koid: zx_koid_t,
    pub rights: zx_rights_t,
    pub type_: zx_obj_type_t,
    pub related_koid: zx_koid_t,
    pub reserved: u32,
    pub padding1: [u8; 4usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zx_info_handle_basic"][::std::mem::size_of::<zx_info_handle_basic>() - 32usize];
    ["Alignment of zx_info_handle_basic"][::std::mem::align_of::<zx_info_handle_basic>() - 8usize];
    ["Offset of field: zx_info_handle_basic::koid"]
        [::std::mem::offset_of!(zx_info_handle_basic, koid) - 0usize];
    ["Offset of field: zx_info_handle_basic::rights"]
        [::std::mem::offset_of!(zx_info_handle_basic, rights) - 8usize];
    ["Offset of field: zx_info_handle_basic::type_"]
        [::std::mem::offset_of!(zx_info_handle_basic, type_) - 12usize];
    ["Offset of field: zx_info_handle_basic::related_koid"]
        [::std::mem::offset_of!(zx_info_handle_basic, related_koid) - 16usize];
    ["Offset of field: zx_info_handle_basic::reserved"]
        [::std::mem::offset_of!(zx_info_handle_basic, reserved) - 24usize];
    ["Offset of field: zx_info_handle_basic::padding1"]
        [::std::mem::offset_of!(zx_info_handle_basic, padding1) - 28usize];
};
pub type zx_info_handle_basic_t = zx_info_handle_basic;
unsafe extern "C" {
    pub fn zxio_create(handle: zx_handle_t, storage: *mut zxio_storage_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_create_with_on_representation(
        handle: zx_handle_t,
        inout_attr: *mut zxio_node_attributes_t,
        storage: *mut zxio_storage_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_create_with_info(
        handle: zx_handle_t,
        handle_info: *const zx_info_handle_basic_t,
        storage: *mut zxio_storage_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_create_with_type(
        storage: *mut zxio_storage_t,
        type_: zxio_object_type_t,
        ...
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_destroy(io: *mut zxio_t);
}
unsafe extern "C" {
    pub fn zxio_close(io: *mut zxio_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_release(io: *mut zxio_t, out_handle: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_borrow(io: *mut zxio_t, out_handle: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_clone(io: *mut zxio_t, out_handle: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_wait_one(
        io: *mut zxio_t,
        signals: zxio_signals_t,
        deadline: zx_time_t,
        out_observed: *mut zxio_signals_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_wait_begin(
        io: *mut zxio_t,
        zxio_signals: zxio_signals_t,
        out_handle: *mut zx_handle_t,
        out_zx_signals: *mut zx_signals_t,
    );
}
unsafe extern "C" {
    pub fn zxio_wait_end(
        io: *mut zxio_t,
        zx_signals: zx_signals_t,
        out_zxio_signals: *mut zxio_signals_t,
    );
}
unsafe extern "C" {
    pub fn zxio_sync(io: *mut zxio_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_attr_get(io: *mut zxio_t, inout_attr: *mut zxio_node_attributes_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_attr_set(io: *mut zxio_t, attr: *const zxio_node_attributes_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_read(
        io: *mut zxio_t,
        buffer: *mut ::std::os::raw::c_void,
        capacity: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_read_at(
        io: *mut zxio_t,
        offset: zx_off_t,
        buffer: *mut ::std::os::raw::c_void,
        capacity: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_write(
        io: *mut zxio_t,
        buffer: *const ::std::os::raw::c_void,
        capacity: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_write_at(
        io: *mut zxio_t,
        offset: zx_off_t,
        buffer: *const ::std::os::raw::c_void,
        capacity: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_readv(
        io: *mut zxio_t,
        vector: *const zx_iovec_t,
        vector_count: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_readv_at(
        io: *mut zxio_t,
        offset: zx_off_t,
        vector: *const zx_iovec_t,
        vector_count: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_writev(
        io: *mut zxio_t,
        vector: *const zx_iovec_t,
        vector_count: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_writev_at(
        io: *mut zxio_t,
        offset: zx_off_t,
        vector: *const zx_iovec_t,
        vector_count: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_seek(
        io: *mut zxio_t,
        start: zxio_seek_origin_t,
        offset: i64,
        out_offset: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_truncate(io: *mut zxio_t, length: u64) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_deprecated_flags_get(io: *mut zxio_t, out_flags: *mut u32) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_deprecated_flags_set(io: *mut zxio_t, flags: u32) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_flags_get(io: *mut zxio_t, out_flags: *mut u64) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_flags_set(io: *mut zxio_t, flags: u64) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_token_get(io: *mut zxio_t, out_token: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_vmo_get(
        io: *mut zxio_t,
        flags: zxio_vmo_flags_t,
        out_vmo: *mut zx_handle_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_on_mapped(io: *mut zxio_t, ptr: *mut ::std::os::raw::c_void) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_vmo_get_copy(io: *mut zxio_t, out_vmo: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_vmo_get_clone(io: *mut zxio_t, out_vmo: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_vmo_get_exact(io: *mut zxio_t, out_vmo: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_vmo_get_exec(io: *mut zxio_t, out_vmo: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_get_read_buffer_available(
        io: *mut zxio_t,
        out_available: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_shutdown(
        io: *mut zxio_t,
        options: zxio_shutdown_options_t,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_open(
        directory: *mut zxio_t,
        path: *const ::std::os::raw::c_char,
        path_len: usize,
        flags: zxio_open_flags_t,
        options: *const zxio_open_options_t,
        storage: *mut zxio_storage_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_unlink(
        directory: *mut zxio_t,
        name: *const ::std::os::raw::c_char,
        name_len: usize,
        flags: ::std::os::raw::c_int,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_rename(
        old_directory: *mut zxio_t,
        old_path: *const ::std::os::raw::c_char,
        old_path_len: usize,
        new_directory_token: zx_handle_t,
        new_path: *const ::std::os::raw::c_char,
        new_path_len: usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_link(
        src_directory: *mut zxio_t,
        src_path: *const ::std::os::raw::c_char,
        src_path_len: usize,
        dst_directory_token: zx_handle_t,
        dst_path: *const ::std::os::raw::c_char,
        dst_path_len: usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_link_into(
        object: *mut zxio_t,
        dst_directory_token: zx_handle_t,
        dst_path: *const ::std::os::raw::c_char,
        dst_path_len: usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_dirent_iterator_init(
        iterator: *mut zxio_dirent_iterator_t,
        directory: *mut zxio_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_dirent_iterator_next(
        iterator: *mut zxio_dirent_iterator_t,
        inout_entry: *mut zxio_dirent_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_dirent_iterator_rewind(iterator: *mut zxio_dirent_iterator_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_dirent_iterator_destroy(iterator: *mut zxio_dirent_iterator_t);
}
unsafe extern "C" {
    pub fn zxio_isatty(io: *mut zxio_t, tty: *mut bool) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_get_window_size(io: *mut zxio_t, width: *mut u32, height: *mut u32) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_set_window_size(io: *mut zxio_t, width: u32, height: u32) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_ioctl(
        io: *mut zxio_t,
        request: ::std::os::raw::c_int,
        out_code: *mut i16,
        va: *mut __va_list_tag,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_read_link(
        io: *mut zxio_t,
        out_target: *mut *const u8,
        out_target_len: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_create_symlink(
        io: *mut zxio_t,
        name: *const ::std::os::raw::c_char,
        name_len: usize,
        target: *const u8,
        target_len: usize,
        storage: *mut zxio_storage_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_xattr_list(
        io: *mut zxio_t,
        callback: ::std::option::Option<
            unsafe extern "C" fn(
                context: *mut ::std::os::raw::c_void,
                name: *const u8,
                name_len: usize,
            ),
        >,
        context: *mut ::std::os::raw::c_void,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_xattr_get(
        io: *mut zxio_t,
        name: *const u8,
        name_len: usize,
        callback: ::std::option::Option<
            unsafe extern "C" fn(
                context: *mut ::std::os::raw::c_void,
                data: zxio_xattr_data_t,
            ) -> zx_status_t,
        >,
        context: *mut ::std::os::raw::c_void,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_xattr_set(
        io: *mut zxio_t,
        name: *const u8,
        name_len: usize,
        value: *const u8,
        value_len: usize,
        mode: zxio_xattr_set_mode_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_xattr_remove(io: *mut zxio_t, name: *const u8, name_len: usize) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_allocate(
        io: *mut zxio_t,
        offset: u64,
        len: u64,
        mode: zxio_allocate_mode_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_enable_verity(
        io: *mut zxio_t,
        descriptor: *const zxio_fsverity_descriptor_t,
    ) -> zx_status_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct iovec {
    pub iov_base: *mut ::std::os::raw::c_void,
    pub iov_len: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of iovec"][::std::mem::size_of::<iovec>() - 16usize];
    ["Alignment of iovec"][::std::mem::align_of::<iovec>() - 8usize];
    ["Offset of field: iovec::iov_base"][::std::mem::offset_of!(iovec, iov_base) - 0usize];
    ["Offset of field: iovec::iov_len"][::std::mem::offset_of!(iovec, iov_len) - 8usize];
};
impl Default for iovec {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type socklen_t = __socklen_t;
pub type sa_family_t = ::std::os::raw::c_ushort;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct sockaddr {
    pub sa_family: sa_family_t,
    pub sa_data: [::std::os::raw::c_char; 14usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of sockaddr"][::std::mem::size_of::<sockaddr>() - 16usize];
    ["Alignment of sockaddr"][::std::mem::align_of::<sockaddr>() - 2usize];
    ["Offset of field: sockaddr::sa_family"][::std::mem::offset_of!(sockaddr, sa_family) - 0usize];
    ["Offset of field: sockaddr::sa_data"][::std::mem::offset_of!(sockaddr, sa_data) - 2usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct msghdr {
    pub msg_name: *mut ::std::os::raw::c_void,
    pub msg_namelen: socklen_t,
    pub msg_iov: *mut iovec,
    pub msg_iovlen: usize,
    pub msg_control: *mut ::std::os::raw::c_void,
    pub msg_controllen: usize,
    pub msg_flags: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of msghdr"][::std::mem::size_of::<msghdr>() - 56usize];
    ["Alignment of msghdr"][::std::mem::align_of::<msghdr>() - 8usize];
    ["Offset of field: msghdr::msg_name"][::std::mem::offset_of!(msghdr, msg_name) - 0usize];
    ["Offset of field: msghdr::msg_namelen"][::std::mem::offset_of!(msghdr, msg_namelen) - 8usize];
    ["Offset of field: msghdr::msg_iov"][::std::mem::offset_of!(msghdr, msg_iov) - 16usize];
    ["Offset of field: msghdr::msg_iovlen"][::std::mem::offset_of!(msghdr, msg_iovlen) - 24usize];
    ["Offset of field: msghdr::msg_control"][::std::mem::offset_of!(msghdr, msg_control) - 32usize];
    ["Offset of field: msghdr::msg_controllen"]
        [::std::mem::offset_of!(msghdr, msg_controllen) - 40usize];
    ["Offset of field: msghdr::msg_flags"][::std::mem::offset_of!(msghdr, msg_flags) - 48usize];
};
impl Default for msghdr {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct zxio_ops {
    pub destroy: ::std::option::Option<unsafe extern "C" fn(io: *mut zxio_t)>,
    pub close: ::std::option::Option<unsafe extern "C" fn(io: *mut zxio_t) -> zx_status_t>,
    pub release: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, out_handle: *mut zx_handle_t) -> zx_status_t,
    >,
    pub borrow: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, out_handle: *mut zx_handle_t) -> zx_status_t,
    >,
    pub clone: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, out_handle: *mut zx_handle_t) -> zx_status_t,
    >,
    pub wait_begin: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            zxio_signals: zxio_signals_t,
            out_handle: *mut zx_handle_t,
            out_zx_signals: *mut zx_signals_t,
        ),
    >,
    pub wait_end: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            zx_signals: zx_signals_t,
            out_zxio_signals: *mut zxio_signals_t,
        ),
    >,
    pub sync: ::std::option::Option<unsafe extern "C" fn(io: *mut zxio_t) -> zx_status_t>,
    pub attr_get: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            inout_attr: *mut zxio_node_attributes_t,
        ) -> zx_status_t,
    >,
    pub attr_set: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, attr: *const zxio_node_attributes_t) -> zx_status_t,
    >,
    pub readv: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            vector: *const zx_iovec_t,
            vector_count: usize,
            flags: zxio_flags_t,
            out_actual: *mut usize,
        ) -> zx_status_t,
    >,
    pub readv_at: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            offset: zx_off_t,
            vector: *const zx_iovec_t,
            vector_count: usize,
            flags: zxio_flags_t,
            out_actual: *mut usize,
        ) -> zx_status_t,
    >,
    pub writev: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            vector: *const zx_iovec_t,
            vector_count: usize,
            flags: zxio_flags_t,
            out_actual: *mut usize,
        ) -> zx_status_t,
    >,
    pub writev_at: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            offset: zx_off_t,
            vector: *const zx_iovec_t,
            vector_count: usize,
            flags: zxio_flags_t,
            out_actual: *mut usize,
        ) -> zx_status_t,
    >,
    pub seek: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            start: zxio_seek_origin_t,
            offset: i64,
            out_offset: *mut usize,
        ) -> zx_status_t,
    >,
    pub truncate:
        ::std::option::Option<unsafe extern "C" fn(io: *mut zxio_t, length: u64) -> zx_status_t>,
    pub flags_get_deprecated: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, out_flags: *mut u32) -> zx_status_t,
    >,
    pub flags_set_deprecated:
        ::std::option::Option<unsafe extern "C" fn(io: *mut zxio_t, flags: u32) -> zx_status_t>,
    pub flags_get: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, out_flags: *mut u64) -> zx_status_t,
    >,
    pub flags_set:
        ::std::option::Option<unsafe extern "C" fn(io: *mut zxio_t, flags: u64) -> zx_status_t>,
    pub vmo_get: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            flags: zxio_vmo_flags_t,
            out_vmo: *mut zx_handle_t,
        ) -> zx_status_t,
    >,
    pub on_mapped: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, ptr: *mut ::std::os::raw::c_void) -> zx_status_t,
    >,
    pub get_read_buffer_available: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, out_available: *mut usize) -> zx_status_t,
    >,
    pub shutdown: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            options: zxio_shutdown_options_t,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub unlink: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            name: *const ::std::os::raw::c_char,
            name_len: usize,
            flags: ::std::os::raw::c_int,
        ) -> zx_status_t,
    >,
    pub token_get: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, out_token: *mut zx_handle_t) -> zx_status_t,
    >,
    pub rename: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            old_path: *const ::std::os::raw::c_char,
            old_path_len: usize,
            dst_token: zx_handle_t,
            new_path: *const ::std::os::raw::c_char,
            new_path_len: usize,
        ) -> zx_status_t,
    >,
    pub link: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            src_path: *const ::std::os::raw::c_char,
            src_path_len: usize,
            dst_token: zx_handle_t,
            dst_path: *const ::std::os::raw::c_char,
            dst_path_len: usize,
        ) -> zx_status_t,
    >,
    pub link_into: ::std::option::Option<
        unsafe extern "C" fn(
            object: *mut zxio_t,
            dst_directory_token: zx_handle_t,
            dst_path: *const ::std::os::raw::c_char,
            dst_path_len: usize,
        ) -> zx_status_t,
    >,
    pub dirent_iterator_init: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, iterator: *mut zxio_dirent_iterator_t) -> zx_status_t,
    >,
    pub dirent_iterator_next: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            iterator: *mut zxio_dirent_iterator_t,
            inout_entry: *mut zxio_dirent_t,
        ) -> zx_status_t,
    >,
    pub dirent_iterator_rewind: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, iterator: *mut zxio_dirent_iterator_t) -> zx_status_t,
    >,
    pub dirent_iterator_destroy: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, iterator: *mut zxio_dirent_iterator_t),
    >,
    pub isatty:
        ::std::option::Option<unsafe extern "C" fn(io: *mut zxio_t, tty: *mut bool) -> zx_status_t>,
    pub get_window_size: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, width: *mut u32, height: *mut u32) -> zx_status_t,
    >,
    pub set_window_size: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, width: u32, height: u32) -> zx_status_t,
    >,
    pub advisory_lock: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, req: *mut advisory_lock_req) -> zx_status_t,
    >,
    pub watch_directory: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            cb: zxio_watch_directory_cb,
            deadline: zx_time_t,
            context: *mut ::std::os::raw::c_void,
        ) -> zx_status_t,
    >,
    pub bind: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            addr: *const sockaddr,
            addrlen: socklen_t,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub connect: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            addr: *const sockaddr,
            addrlen: socklen_t,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub listen: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            backlog: ::std::os::raw::c_int,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub accept: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            addr: *mut sockaddr,
            addrlen: *mut socklen_t,
            out_storage: *mut zxio_storage_t,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub getsockname: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            addr: *mut sockaddr,
            addrlen: *mut socklen_t,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub getpeername: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            addr: *mut sockaddr,
            addrlen: *mut socklen_t,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub getsockopt: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            level: ::std::os::raw::c_int,
            optname: ::std::os::raw::c_int,
            optval: *mut ::std::os::raw::c_void,
            optlen: *mut socklen_t,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub setsockopt: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            level: ::std::os::raw::c_int,
            optname: ::std::os::raw::c_int,
            optval: *const ::std::os::raw::c_void,
            optlen: socklen_t,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub recvmsg: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            msg: *mut msghdr,
            flags: ::std::os::raw::c_int,
            out_actual: *mut usize,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub sendmsg: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            msg: *const msghdr,
            flags: ::std::os::raw::c_int,
            out_actual: *mut usize,
            out_code: *mut i16,
        ) -> zx_status_t,
    >,
    pub ioctl: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            request: ::std::os::raw::c_int,
            out_code: *mut i16,
            va: *mut __va_list_tag,
        ) -> zx_status_t,
    >,
    pub read_link: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            out_target: *mut *const u8,
            out_target_len: *mut usize,
        ) -> zx_status_t,
    >,
    pub create_symlink: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            name: *const ::std::os::raw::c_char,
            name_len: usize,
            target: *const u8,
            target_len: usize,
            storage: *mut zxio_storage_t,
        ) -> zx_status_t,
    >,
    pub xattr_list: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            callback: ::std::option::Option<
                unsafe extern "C" fn(
                    context: *mut ::std::os::raw::c_void,
                    name: *const u8,
                    name_len: usize,
                ),
            >,
            context: *mut ::std::os::raw::c_void,
        ) -> zx_status_t,
    >,
    pub xattr_get: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            name: *const u8,
            name_len: usize,
            callback: ::std::option::Option<
                unsafe extern "C" fn(
                    context: *mut ::std::os::raw::c_void,
                    data: zxio_xattr_data_t,
                ) -> zx_status_t,
            >,
            context: *mut ::std::os::raw::c_void,
        ) -> zx_status_t,
    >,
    pub xattr_set: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            name: *const u8,
            name_len: usize,
            value: *const u8,
            value_len: usize,
            mode: zxio_xattr_set_mode_t,
        ) -> zx_status_t,
    >,
    pub xattr_remove: ::std::option::Option<
        unsafe extern "C" fn(io: *mut zxio_t, name: *const u8, name_len: usize) -> zx_status_t,
    >,
    pub open: ::std::option::Option<
        unsafe extern "C" fn(
            directory: *mut zxio_t,
            path: *const ::std::os::raw::c_char,
            path_len: usize,
            flags: zxio_open_flags_t,
            options: *const zxio_open_options_t,
            storage: *mut zxio_storage_t,
        ) -> zx_status_t,
    >,
    pub allocate: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            offset: u64,
            len: u64,
            mode: zxio_allocate_mode_t,
        ) -> zx_status_t,
    >,
    pub enable_verity: ::std::option::Option<
        unsafe extern "C" fn(
            io: *mut zxio_t,
            descriptor: *const zxio_fsverity_descriptor_t,
        ) -> zx_status_t,
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zxio_ops"][::std::mem::size_of::<zxio_ops>() - 464usize];
    ["Alignment of zxio_ops"][::std::mem::align_of::<zxio_ops>() - 8usize];
    ["Offset of field: zxio_ops::destroy"][::std::mem::offset_of!(zxio_ops, destroy) - 0usize];
    ["Offset of field: zxio_ops::close"][::std::mem::offset_of!(zxio_ops, close) - 8usize];
    ["Offset of field: zxio_ops::release"][::std::mem::offset_of!(zxio_ops, release) - 16usize];
    ["Offset of field: zxio_ops::borrow"][::std::mem::offset_of!(zxio_ops, borrow) - 24usize];
    ["Offset of field: zxio_ops::clone"][::std::mem::offset_of!(zxio_ops, clone) - 32usize];
    ["Offset of field: zxio_ops::wait_begin"]
        [::std::mem::offset_of!(zxio_ops, wait_begin) - 40usize];
    ["Offset of field: zxio_ops::wait_end"][::std::mem::offset_of!(zxio_ops, wait_end) - 48usize];
    ["Offset of field: zxio_ops::sync"][::std::mem::offset_of!(zxio_ops, sync) - 56usize];
    ["Offset of field: zxio_ops::attr_get"][::std::mem::offset_of!(zxio_ops, attr_get) - 64usize];
    ["Offset of field: zxio_ops::attr_set"][::std::mem::offset_of!(zxio_ops, attr_set) - 72usize];
    ["Offset of field: zxio_ops::readv"][::std::mem::offset_of!(zxio_ops, readv) - 80usize];
    ["Offset of field: zxio_ops::readv_at"][::std::mem::offset_of!(zxio_ops, readv_at) - 88usize];
    ["Offset of field: zxio_ops::writev"][::std::mem::offset_of!(zxio_ops, writev) - 96usize];
    ["Offset of field: zxio_ops::writev_at"]
        [::std::mem::offset_of!(zxio_ops, writev_at) - 104usize];
    ["Offset of field: zxio_ops::seek"][::std::mem::offset_of!(zxio_ops, seek) - 112usize];
    ["Offset of field: zxio_ops::truncate"][::std::mem::offset_of!(zxio_ops, truncate) - 120usize];
    ["Offset of field: zxio_ops::flags_get_deprecated"]
        [::std::mem::offset_of!(zxio_ops, flags_get_deprecated) - 128usize];
    ["Offset of field: zxio_ops::flags_set_deprecated"]
        [::std::mem::offset_of!(zxio_ops, flags_set_deprecated) - 136usize];
    ["Offset of field: zxio_ops::flags_get"]
        [::std::mem::offset_of!(zxio_ops, flags_get) - 144usize];
    ["Offset of field: zxio_ops::flags_set"]
        [::std::mem::offset_of!(zxio_ops, flags_set) - 152usize];
    ["Offset of field: zxio_ops::vmo_get"][::std::mem::offset_of!(zxio_ops, vmo_get) - 160usize];
    ["Offset of field: zxio_ops::on_mapped"]
        [::std::mem::offset_of!(zxio_ops, on_mapped) - 168usize];
    ["Offset of field: zxio_ops::get_read_buffer_available"]
        [::std::mem::offset_of!(zxio_ops, get_read_buffer_available) - 176usize];
    ["Offset of field: zxio_ops::shutdown"][::std::mem::offset_of!(zxio_ops, shutdown) - 184usize];
    ["Offset of field: zxio_ops::unlink"][::std::mem::offset_of!(zxio_ops, unlink) - 192usize];
    ["Offset of field: zxio_ops::token_get"]
        [::std::mem::offset_of!(zxio_ops, token_get) - 200usize];
    ["Offset of field: zxio_ops::rename"][::std::mem::offset_of!(zxio_ops, rename) - 208usize];
    ["Offset of field: zxio_ops::link"][::std::mem::offset_of!(zxio_ops, link) - 216usize];
    ["Offset of field: zxio_ops::link_into"]
        [::std::mem::offset_of!(zxio_ops, link_into) - 224usize];
    ["Offset of field: zxio_ops::dirent_iterator_init"]
        [::std::mem::offset_of!(zxio_ops, dirent_iterator_init) - 232usize];
    ["Offset of field: zxio_ops::dirent_iterator_next"]
        [::std::mem::offset_of!(zxio_ops, dirent_iterator_next) - 240usize];
    ["Offset of field: zxio_ops::dirent_iterator_rewind"]
        [::std::mem::offset_of!(zxio_ops, dirent_iterator_rewind) - 248usize];
    ["Offset of field: zxio_ops::dirent_iterator_destroy"]
        [::std::mem::offset_of!(zxio_ops, dirent_iterator_destroy) - 256usize];
    ["Offset of field: zxio_ops::isatty"][::std::mem::offset_of!(zxio_ops, isatty) - 264usize];
    ["Offset of field: zxio_ops::get_window_size"]
        [::std::mem::offset_of!(zxio_ops, get_window_size) - 272usize];
    ["Offset of field: zxio_ops::set_window_size"]
        [::std::mem::offset_of!(zxio_ops, set_window_size) - 280usize];
    ["Offset of field: zxio_ops::advisory_lock"]
        [::std::mem::offset_of!(zxio_ops, advisory_lock) - 288usize];
    ["Offset of field: zxio_ops::watch_directory"]
        [::std::mem::offset_of!(zxio_ops, watch_directory) - 296usize];
    ["Offset of field: zxio_ops::bind"][::std::mem::offset_of!(zxio_ops, bind) - 304usize];
    ["Offset of field: zxio_ops::connect"][::std::mem::offset_of!(zxio_ops, connect) - 312usize];
    ["Offset of field: zxio_ops::listen"][::std::mem::offset_of!(zxio_ops, listen) - 320usize];
    ["Offset of field: zxio_ops::accept"][::std::mem::offset_of!(zxio_ops, accept) - 328usize];
    ["Offset of field: zxio_ops::getsockname"]
        [::std::mem::offset_of!(zxio_ops, getsockname) - 336usize];
    ["Offset of field: zxio_ops::getpeername"]
        [::std::mem::offset_of!(zxio_ops, getpeername) - 344usize];
    ["Offset of field: zxio_ops::getsockopt"]
        [::std::mem::offset_of!(zxio_ops, getsockopt) - 352usize];
    ["Offset of field: zxio_ops::setsockopt"]
        [::std::mem::offset_of!(zxio_ops, setsockopt) - 360usize];
    ["Offset of field: zxio_ops::recvmsg"][::std::mem::offset_of!(zxio_ops, recvmsg) - 368usize];
    ["Offset of field: zxio_ops::sendmsg"][::std::mem::offset_of!(zxio_ops, sendmsg) - 376usize];
    ["Offset of field: zxio_ops::ioctl"][::std::mem::offset_of!(zxio_ops, ioctl) - 384usize];
    ["Offset of field: zxio_ops::read_link"]
        [::std::mem::offset_of!(zxio_ops, read_link) - 392usize];
    ["Offset of field: zxio_ops::create_symlink"]
        [::std::mem::offset_of!(zxio_ops, create_symlink) - 400usize];
    ["Offset of field: zxio_ops::xattr_list"]
        [::std::mem::offset_of!(zxio_ops, xattr_list) - 408usize];
    ["Offset of field: zxio_ops::xattr_get"]
        [::std::mem::offset_of!(zxio_ops, xattr_get) - 416usize];
    ["Offset of field: zxio_ops::xattr_set"]
        [::std::mem::offset_of!(zxio_ops, xattr_set) - 424usize];
    ["Offset of field: zxio_ops::xattr_remove"]
        [::std::mem::offset_of!(zxio_ops, xattr_remove) - 432usize];
    ["Offset of field: zxio_ops::open"][::std::mem::offset_of!(zxio_ops, open) - 440usize];
    ["Offset of field: zxio_ops::allocate"][::std::mem::offset_of!(zxio_ops, allocate) - 448usize];
    ["Offset of field: zxio_ops::enable_verity"]
        [::std::mem::offset_of!(zxio_ops, enable_verity) - 456usize];
};
pub type zxio_ops_t = zxio_ops;
unsafe extern "C" {
    pub fn zxio_init(io: *mut zxio_t, ops: *const zxio_ops_t);
}
unsafe extern "C" {
    pub fn zxio_get_ops(io: *mut zxio_t) -> *const zxio_ops_t;
}
unsafe extern "C" {
    pub fn zxio_default_release(io: *mut zxio_t, out_handle: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_borrow(io: *mut zxio_t, out_handle: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_destroy(io: *mut zxio_t);
}
unsafe extern "C" {
    pub fn zxio_default_clone(io: *mut zxio_t, out_handle: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_close(io: *mut zxio_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_wait_begin(
        io: *mut zxio_t,
        zxio_signals: zxio_signals_t,
        out_handle: *mut zx_handle_t,
        out_zx_signals: *mut zx_signals_t,
    );
}
unsafe extern "C" {
    pub fn zxio_default_wait_end(
        io: *mut zxio_t,
        zx_signals: zx_signals_t,
        out_zxio_signals: *mut zxio_signals_t,
    );
}
unsafe extern "C" {
    pub fn zxio_default_sync(io: *mut zxio_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_attr_get(
        io: *mut zxio_t,
        inout_attr: *mut zxio_node_attributes_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_attr_set(
        io: *mut zxio_t,
        attr: *const zxio_node_attributes_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_readv(
        io: *mut zxio_t,
        vector: *const zx_iovec_t,
        vector_count: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_readv_at(
        io: *mut zxio_t,
        offset: zx_off_t,
        vector: *const zx_iovec_t,
        vector_count: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_writev(
        io: *mut zxio_t,
        vector: *const zx_iovec_t,
        vector_count: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_writev_at(
        io: *mut zxio_t,
        offset: zx_off_t,
        vector: *const zx_iovec_t,
        vector_count: usize,
        flags: zxio_flags_t,
        out_actual: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_seek(
        io: *mut zxio_t,
        start: zxio_seek_origin_t,
        offset: i64,
        out_offset: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_truncate(io: *mut zxio_t, length: u64) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_flags_get_deprecated(io: *mut zxio_t, out_flags: *mut u32) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_flags_set_deprecated(io: *mut zxio_t, flags: u32) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_flags_get(io: *mut zxio_t, out_flags: *mut u64) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_flags_set(io: *mut zxio_t, flags: u64) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_vmo_get(
        io: *mut zxio_t,
        flags: zxio_vmo_flags_t,
        out_vmo: *mut zx_handle_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_on_mapped(io: *mut zxio_t, ptr: *mut ::std::os::raw::c_void)
        -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_get_read_buffer_available(
        io: *mut zxio_t,
        out_available: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_shutdown(
        io: *mut zxio_t,
        options: zxio_shutdown_options_t,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_unlink(
        io: *mut zxio_t,
        name: *const ::std::os::raw::c_char,
        name_len: usize,
        flags: ::std::os::raw::c_int,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_token_get(io: *mut zxio_t, out_token: *mut zx_handle_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_rename(
        io: *mut zxio_t,
        old_path: *const ::std::os::raw::c_char,
        old_path_len: usize,
        dst_token: zx_handle_t,
        new_path: *const ::std::os::raw::c_char,
        new_path_len: usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_link(
        io: *mut zxio_t,
        src_path: *const ::std::os::raw::c_char,
        src_path_len: usize,
        dst_token: zx_handle_t,
        dst_path: *const ::std::os::raw::c_char,
        dst_path_len: usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_link_into(
        object: *mut zxio_t,
        dst_directory_token: zx_handle_t,
        dst_path: *const ::std::os::raw::c_char,
        dst_path_len: usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_dirent_iterator_init(
        directory: *mut zxio_t,
        iterator: *mut zxio_dirent_iterator_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_dirent_iterator_next(
        io: *mut zxio_t,
        iterator: *mut zxio_dirent_iterator_t,
        inout_entry: *mut zxio_dirent_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_dirent_iterator_rewind(
        io: *mut zxio_t,
        iterator: *mut zxio_dirent_iterator_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_dirent_iterator_destroy(
        io: *mut zxio_t,
        iterator: *mut zxio_dirent_iterator_t,
    );
}
unsafe extern "C" {
    pub fn zxio_default_isatty(io: *mut zxio_t, tty: *mut bool) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_get_window_size(
        io: *mut zxio_t,
        width: *mut u32,
        height: *mut u32,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_set_window_size(io: *mut zxio_t, width: u32, height: u32) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_advisory_lock(io: *mut zxio_t, req: *mut advisory_lock_req) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_watch_directory(
        io: *mut zxio_t,
        cb: zxio_watch_directory_cb,
        deadline: zx_time_t,
        context: *mut ::std::os::raw::c_void,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_bind(
        io: *mut zxio_t,
        addr: *const sockaddr,
        addrlen: socklen_t,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_connect(
        io: *mut zxio_t,
        addr: *const sockaddr,
        addrlen: socklen_t,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_listen(
        io: *mut zxio_t,
        backlog: ::std::os::raw::c_int,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_accept(
        io: *mut zxio_t,
        addr: *mut sockaddr,
        addrlen: *mut socklen_t,
        out_storage: *mut zxio_storage_t,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_getsockname(
        io: *mut zxio_t,
        addr: *mut sockaddr,
        addrlen: *mut socklen_t,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_getpeername(
        io: *mut zxio_t,
        addr: *mut sockaddr,
        addrlen: *mut socklen_t,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_getsockopt(
        io: *mut zxio_t,
        level: ::std::os::raw::c_int,
        optname: ::std::os::raw::c_int,
        optval: *mut ::std::os::raw::c_void,
        optlen: *mut socklen_t,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_setsockopt(
        io: *mut zxio_t,
        level: ::std::os::raw::c_int,
        optname: ::std::os::raw::c_int,
        optval: *const ::std::os::raw::c_void,
        optlen: socklen_t,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_recvmsg(
        io: *mut zxio_t,
        msg: *mut msghdr,
        flags: ::std::os::raw::c_int,
        out_actual: *mut usize,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_sendmsg(
        io: *mut zxio_t,
        msg: *const msghdr,
        flags: ::std::os::raw::c_int,
        out_actual: *mut usize,
        out_code: *mut i16,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_ioctl(
        io: *mut zxio_t,
        request: ::std::os::raw::c_int,
        out_code: *mut i16,
        va: *mut __va_list_tag,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_read_link(
        io: *mut zxio_t,
        out_target: *mut *const u8,
        out_target_len: *mut usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_create_symlink(
        io: *mut zxio_t,
        name: *const ::std::os::raw::c_char,
        name_len: usize,
        target: *const u8,
        target_len: usize,
        storage: *mut zxio_storage_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_xattr_list(
        io: *mut zxio_t,
        callback: ::std::option::Option<
            unsafe extern "C" fn(
                context: *mut ::std::os::raw::c_void,
                name: *const u8,
                name_len: usize,
            ),
        >,
        context: *mut ::std::os::raw::c_void,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_xattr_get(
        io: *mut zxio_t,
        name: *const u8,
        name_len: usize,
        callback: ::std::option::Option<
            unsafe extern "C" fn(
                context: *mut ::std::os::raw::c_void,
                data: zxio_xattr_data_t,
            ) -> zx_status_t,
        >,
        context: *mut ::std::os::raw::c_void,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_xattr_set(
        io: *mut zxio_t,
        name: *const u8,
        name_len: usize,
        value: *const u8,
        value_len: usize,
        mode: zxio_xattr_set_mode_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_xattr_remove(
        io: *mut zxio_t,
        name: *const u8,
        name_len: usize,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_allocate(
        io: *mut zxio_t,
        offset: u64,
        len: u64,
        mode: zxio_allocate_mode_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_enable_verity(
        io: *mut zxio_t,
        descriptor: *const zxio_fsverity_descriptor_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_open(
        directory: *mut zxio_t,
        path: *const ::std::os::raw::c_char,
        path_len: usize,
        flags: zxio_open_flags_t,
        options: *const zxio_open_options_t,
        storage: *mut zxio_storage_t,
    ) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_default_init(io: *mut zxio_t) -> zx_status_t;
}
unsafe extern "C" {
    pub fn zxio_null_init(io: *mut zxio_t) -> zx_status_t;
}
pub type __builtin_va_list = [__va_list_tag; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __va_list_tag {
    pub gp_offset: ::std::os::raw::c_uint,
    pub fp_offset: ::std::os::raw::c_uint,
    pub overflow_arg_area: *mut ::std::os::raw::c_void,
    pub reg_save_area: *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __va_list_tag"][::std::mem::size_of::<__va_list_tag>() - 24usize];
    ["Alignment of __va_list_tag"][::std::mem::align_of::<__va_list_tag>() - 8usize];
    ["Offset of field: __va_list_tag::gp_offset"]
        [::std::mem::offset_of!(__va_list_tag, gp_offset) - 0usize];
    ["Offset of field: __va_list_tag::fp_offset"]
        [::std::mem::offset_of!(__va_list_tag, fp_offset) - 4usize];
    ["Offset of field: __va_list_tag::overflow_arg_area"]
        [::std::mem::offset_of!(__va_list_tag, overflow_arg_area) - 8usize];
    ["Offset of field: __va_list_tag::reg_save_area"]
        [::std::mem::offset_of!(__va_list_tag, reg_save_area) - 16usize];
};
impl Default for __va_list_tag {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
