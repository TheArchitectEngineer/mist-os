# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")

fuchsia_test_component("fuchsia-hyper-lib-test") {
  manifest = "meta/fuchsia_hyper_lib_test.cml"
  deps = [ ":fuchsia-hyper_test" ]
  test_type = "system"
}

fuchsia_test_package("fuchsia-hyper-tests") {
  test_components = [ ":fuchsia-hyper-lib-test" ]
  deps = [ "//src/connectivity/network:netstack-for-tests" ]
}

group("tests") {
  testonly = true
  deps = [
    ":fuchsia-hyper-tests",
    ":fuchsia-hyper_test($host_toolchain)",
  ]
}

## BAZEL2GN SENTINEL - DO NOT EDIT BELOW THIS LINE ##
#
#  ________  _________  ________  ________
# |\   ____\|\___   ___\\   __  \|\   __  \
# \ \  \___|\|___ \  \_\ \  \|\  \ \  \|\  \
#  \ \_____  \   \ \  \ \ \  \\\  \ \   ____\
#   \|____|\  \   \ \  \ \ \  \\\  \ \  \___|
#     ____\_\  \   \ \__\ \ \_______\ \__\
#    |\_________\   \|__|  \|_______|\|__|
#    \|_________|
#
#
# AUTO-GENERATED - DO NOT EDIT
#
# The targets below are auto-generated based on the targets defined in the
# BUILD.bazel file from the same directory. If you made changes to targets in
# Bazel, instead of editing this file manually, run:
#
#   > fx bazel2gn
#
# Please do NOT edit this file directly. Instead, edit the BUILD.bazel file and
# rerun bazel2gn.

import("//build/tools/bazel2gn/bazel_migration.gni")

# A self-verification target for generated content in this file.
if (is_host) {
  verify_bazel2gn("verify_bazel2gn") {
  }
}

rustc_library("fuchsia-hyper") {
  sources = []
  sources += [ "src/lib.rs" ]
  if (is_fuchsia) {
    sources += [
      "src/fuchsia.rs",
      "src/happy_eyeballs.rs",
    ]
  } else {
    sources += [ "src/not_fuchsia.rs" ]
  }
  edition = "2021"
  test_deps = []
  test_deps += [ "//third_party/rust_crates:assert_matches" ]
  if (is_fuchsia) {
    test_deps += [
      "//src/lib/fidl/rust/fidl",
      "//src/lib/fuchsia-sync",
      "//third_party/rust_crates:test-case",
    ]
  } else {
    test_deps += [ "//third_party/rust_crates:anyhow" ]
  }
  version = "0.1.0"
  with_unit_tests = true
  deps = []
  deps += [
    "//src/lib/fuchsia-async",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:http",
    "//third_party/rust_crates:hyper",
    "//third_party/rust_crates:hyper-rustls",
    "//third_party/rust_crates:rustls",
    "//third_party/rust_crates:socket2",
    "//third_party/rust_crates:tokio",
  ]
  if (is_fuchsia) {
    deps += [
      "//sdk/fidl/fuchsia.net.name:fuchsia.net.name_rust",
      "//sdk/fidl/fuchsia.posix.socket:fuchsia.posix.socket_rust",
      "//sdk/rust/zx",
      "//src/lib/network/fidl_fuchsia_net_ext",
      "//src/lib/webpki-roots-fuchsia",
      "//src/sys/lib/fidl-connector",
      "//third_party/rust_crates:itertools",
      "//third_party/rust_crates:pin-project",
    ]
  } else {
    deps += [
      "//src/developer/ffx/lib/netext:lib",
      "//third_party/rust_crates:log",
      "//third_party/rust_crates:rustls-native-certs",
    ]
  }
}
