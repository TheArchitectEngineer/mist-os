// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "inspect/client.shard.cml",
        "syslog/client.shard.cml",
    ],
    program: {
        runner: "elf",
        binary: "bin/system_update_committer",
        lifecycle: { stop_event: "notify" },
    },
    capabilities: [
        {
            protocol: "fuchsia.update.CommitStatusProvider",
            delivery: "on_readable",
        },
    ],
    use: [
        {
            protocol: [
                "fuchsia.hardware.power.statecontrol.Admin",
                "fuchsia.paver.Paver",
                "fuchsia.update.verify.HealthVerification",
            ],
        },
        {
            protocol: "fuchsia.component.sandbox.CapabilityStore",
            from: "framework",
        },
        {
            protocol: "fuchsia.update.CommitStatusProvider",
            from: "self",
            path: "/escrow/fuchsia.update.CommitStatusProvider",
        },
        {
            config: "fuchsia.system-update-committer.StopOnIdleTimeoutMillis",
            key: "stop_on_idle_timeout_millis",

            // Negative value indicates an infinite timeout, i.e. the component will never stop.
            type: "int64",
        },
        {
            config: "fuchsia.system-update-committer.CommitTimeoutSeconds",
            key: "commit_timeout_seconds",

            // Negative value indicates an infinite timeout, i.e. the commit will never timeout.
            type: "int64",
        },
        {
            directory: "config-data",
            rights: [ "r*" ],
            path: "/config/data",
        },
    ],
    expose: [
        {
            protocol: "fuchsia.update.CommitStatusProvider",
            from: "self",
        },
    ],
}
