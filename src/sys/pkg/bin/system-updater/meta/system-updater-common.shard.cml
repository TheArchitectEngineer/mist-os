// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "inspect/client.shard.cml",
        "syslog/client.shard.cml",
    ],
    program: {
        runner: "elf",
        binary: "bin/system_updater",
    },
    capabilities: [
        { protocol: "fuchsia.update.installer.Installer" },
    ],
    use: [
        {
            protocol: [
                "fuchsia.fxfs.BlobReader",
                "fuchsia.hardware.power.statecontrol.Admin",
                "fuchsia.metrics.MetricEventLoggerFactory",
                "fuchsia.net.http.Loader",
                "fuchsia.paver.Paver",
                "fuchsia.pkg.internal.OtaDownloader",
                "fuchsia.pkg.PackageCache",
                "fuchsia.pkg.PackageResolver",
                "fuchsia.pkg.RetainedBlobs",
                "fuchsia.pkg.RetainedPackages",
                "fuchsia.space.Manager",
            ],
        },
        {
            directory: "system",
            rights: [ "r*" ],
            path: "/system",
        },
        {
            directory: "build-info",
            rights: [ "r*" ],
            path: "/config/build-info",
        },
        {
            directory: "blob",
            rights: [ "r*" ],
            path: "/blob",
        },
    ],
    expose: [
        {
            protocol: "fuchsia.update.installer.Installer",
            from: "self",
        },
    ],
    config: {
        // The maximum number of outstanding package resolution requests.
        concurrent_package_resolves: { type: "uint16" },

        // The maximum number of outstanding blob fetch requests.
        concurrent_blob_fetches: { type: "uint16" },

        // Whether to allow the new package-less update attempt flow.
        enable_attempt_v2: { type: "bool" },
    },
}
