// Copyright 2020 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
@available(added=HEAD)
library fuchsia.update.verify;

using zx;

type HealthStatus = strict enum {
    HEALTHY = 1;
    UNHEALTHY = 2;
};

/// Protocol for reading health check statuses.
@discoverable
closed protocol HealthVerification {
    /// Queries the suite of health checks.
    ///
    /// Returns `ZX_OK` if every required check is healthy.
    strict QueryHealthChecks() -> (struct {
        status zx.Status;
    });
};

/// Protocol for getting the health status of a component.
/// It is up to the component authors to decide what a component should do after marking
/// the partition as unhealthy.
@discoverable
closed protocol ComponentOtaHealthCheck {
    strict GetHealthStatus() -> (struct {
        health_status HealthStatus;
    });
};
