# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/assembled_system.gni")
import("//build/assembly/board_configuration.gni")
import("//build/assembly/bootfs_files_for_assembly.gni")
import("//build/assembly/product_assembly_configuration.gni")
import("//build/component/config.gni")
import("//build/components/fuchsia_package.gni")
import("//build/rust/rustc_binary.gni")
import("//build/testing/host_test_data.gni")
import("//build/testing/perf/test.gni")
import("//build/zircon/tools.gni")

rustc_binary("bootfs_launching_benchmark") {
  name = "bootfs-launching-benchmark"
  edition = "2021"

  source_root = "src/main.rs"
  testonly = true

  deps = [
    "//examples/components/routing/fidl:echo_rust",
    "//sdk/fidl/fuchsia.component:fuchsia.component_rust",
    "//sdk/fidl/fuchsia.component.sandbox:fuchsia.component.sandbox_rust",
    "//sdk/fidl/fuchsia.process:fuchsia.process_rust",
    "//sdk/rust/zx",
    "//src/developer/fuchsia-criterion",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-component-test",
    "//src/lib/fuchsia-runtime",
    "//third_party/rust_crates:futures",
  ]

  sources = [ "src/main.rs" ]
}

if (current_toolchain == default_toolchain) {
  number_of_components_list = [
    1,
    5,
    10,
    15,
    20,
    25,
  ]

  foreach(i, number_of_components_list) {
    fuchsia_component("root_component_${i}") {
      component_name = "root_component_${i}"
      manifest = "meta/root_component_${i}.cml"
      testonly = true
    }

    fuchsia_component("component-manager-cmp-${i}") {
      testonly = true
      component_name = "component_manager_${i}"
      manifest = "meta/component_manager_${i}.cml"
      deps = [ "//src/sys/component_manager:bin_with_tracing" ]
    }
  }

  fuchsia_package("root_package") {
    deps = []
    foreach(i, number_of_components_list) {
      deps += [ ":root_component_${i}" ]
    }
    testonly = true
  }

  component_config("config") {
    testonly = true
    sources = [ "config.json5" ]
    dest = "data/component_manager_config"
  }

  bootfs_files_for_assembly("bootfs") {
    testonly = true
    deps = [ ":config" ]
  }

  board_configuration("board_config") {
    name = "test"
    version = "fake_version"
  }

  img_name = "bootfs_launching_benchmark_test_zbi"

  product_assembly_configuration("product_config") {
    testonly = true
    platform = {
      build_type = "user"
      feature_set_level = "empty"
      storage = {
        filesystems = {
          image_name = img_name
          image_mode = "no_image"
        }
      }
    }
    bootfs_packages = [
      ":root_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_01:test_component_01_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_02:test_component_02_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_03:test_component_03_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_04:test_component_04_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_05:test_component_05_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_06:test_component_06_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_07:test_component_07_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_08:test_component_08_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_09:test_component_09_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_10:test_component_10_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_11:test_component_11_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_12:test_component_12_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_13:test_component_13_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_14:test_component_14_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_15:test_component_15_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_16:test_component_16_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_17:test_component_17_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_18:test_component_18_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_19:test_component_19_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_20:test_component_20_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_21:test_component_21_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_22:test_component_22_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_23:test_component_23_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_24:test_component_24_package",
      "//src/sys/component_manager/tests/bootfs_launching_benchmark/test_data/components/test_component_25:test_component_25_package",
    ]
    bootfs_files_labels = [ ":bootfs" ]
  }

  # `assembled_system` builds a zbi for consumption by the test.
  assembled_system("test_zbi") {
    testonly = true
    image_name = img_name
    product_assembly_config_label = ":product_config"
    board_config_label = ":board_config"
    use_bringup_platform_bundles_only = true
  }

  output_file = "$target_out_dir/uncompressed_bootfs"

  action("test_assembly") {
    testonly = true
    script = "//src/sys/component_manager/tests/bootfs_launching_benchmark/scripts/extract_bootfs_from_zbi.py"

    deps = [
      ":test_zbi",
      zbi_tool_target,
    ]

    inputs = [
      target_out_dir + "/${img_name}/${img_name}.zbi",
      zbi_tool_path,
    ]
    outputs = [ output_file ]

    args = [
      "--zbi",
      rebase_path(zbi_tool_path, root_build_dir),
      "--zbi-image",
      rebase_path(target_out_dir + "/${img_name}/${img_name}.zbi",
                  root_build_dir),
      "--output",
      rebase_path(outputs[0], root_build_dir),
    ]
  }

  resource("bootfs_resource") {
    testonly = true
    sources = [ output_file ]
    outputs = [ "data/tests/uncompressed_bootfs" ]
    deps = [ ":test_assembly" ]
  }

  fuchsia_component("bootfs_launching_benchmark_component") {
    component_name = "bootfs_launching_benchmark"
    manifest = "meta/bootfs_launching_benchmark.cml"
    deps = [
      ":bootfs_launching_benchmark",
      ":bootfs_resource",
    ]
    testonly = true
  }

  fuchsia_package("bootfs-launching-benchmark-pkg") {
    deps = [
      ":bootfs_launching_benchmark_component",
      ":bootfs_resource",
    ]
    foreach(i, number_of_components_list) {
      deps += [ ":component-manager-cmp-${i}" ]
    }
    testonly = true

    # We don't want to include the product bundle in build outputs.
    metadata = {
      product_bundles_barrier = []
      images_barrier = []
    }
  }
}

fuchsia_component_perf_test("bootfs-launching-benchmark") {
  package = ":bootfs-launching-benchmark-pkg"
  component_name = "bootfs_launching_benchmark"
  expected_metric_names_filepath = "//src/tests/end_to_end/perf/expected_metric_names/fuchsia.bootfs.launching.txt"

  # Need system test type for Vmex resource.
  test_type = "system"
}

group("benchmark") {
  testonly = true
  deps = [ ":bootfs-launching-benchmark" ]
}
