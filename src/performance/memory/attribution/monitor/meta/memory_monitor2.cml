// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "inspect/client.shard.cml",
        "syslog/client.shard.cml",
        "trace/client.shard.cml",
    ],
    program: {
        runner: "elf",
        binary: "bin/memory-monitor2",
    },
    capabilities: [
        {
            protocol: [ "fuchsia.memory.attribution.plugin.MemoryMonitor" ],
        },
    ],
    use: [
        {
            protocol: [
                // Provides the moniker name of components based on a moniker token.
                "fuchsia.component.Introspector.root",

                // Provides access to the hierarchy of jobs and processes. It also allows to gather
                // VMO usage of Fuchsia processes, and memory utilization statistics for each VMO.
                "fuchsia.kernel.RootJobForInspect",

                // Provides access to memory stall (thrashing) information.
                "fuchsia.kernel.StallResource",

                // Provides access to whole-system memory statistics information.
                "fuchsia.kernel.Stats",

                // Provides access to memory attribution information. This Provider should be the
                // root memory attribution provider of the system (typically, ELF runner).
                "fuchsia.memory.attribution.Provider",

                // Provides access to memory pressure level change notifications.
                "fuchsia.memorypressure.Provider",

                // Provides access to metric event logging.
                "fuchsia.metrics.MetricEventLoggerFactory",
            ],
        },
        {
            directory: "config-data",
            rights: [ "r*" ],
            path: "/config/data",
        },
        {
            config: "fuchsia.memory.CaptureOnPressureChange",
            key: "capture_on_pressure_change",
            availability: "optional",
            type: "bool",
        },
        {
            config: "fuchsia.memory.ImminentOomCaptureDelay",
            key: "imminent_oom_capture_delay_s",
            availability: "optional",
            type: "uint32",
        },
        {
            config: "fuchsia.memory.CriticalCaptureDelay",
            key: "critical_capture_delay_s",
            availability: "optional",
            type: "uint32",
        },
        {
            config: "fuchsia.memory.WarningCaptureDelay",
            key: "warning_capture_delay_s",
            availability: "optional",
            type: "uint32",
        },
        {
            config: "fuchsia.memory.NormalCaptureDelay",
            key: "normal_capture_delay_s",
            availability: "optional",
            type: "uint32",
        },
    ],
    expose: [
        {
            protocol: [ "fuchsia.memory.attribution.plugin.MemoryMonitor" ],
            from: "self",
        },
    ],
    config: {
        capture_on_pressure_change: { type: "bool" },
        imminent_oom_capture_delay_s: { type: "uint32" },
        critical_capture_delay_s: { type: "uint32" },
        warning_capture_delay_s: { type: "uint32" },
        normal_capture_delay_s: { type: "uint32" },
    },
}
