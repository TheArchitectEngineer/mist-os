// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "//src/diagnostics/archivist/meta/common.shard.cml",
        "//src/diagnostics/archivist/meta/config_capabilities.shard.cml",
    ],
    program: {
        binary: "bin/archivist",
        main_process_critical: "true",
        forward_stdout_to: "none",
        forward_stderr_to: "none",
        environ: [
            // TODO(https://fxbug.dev/382623426): revisit this.
            "SCUDO_OPTIONS=release_to_os_interval_ms=0",
        ],
    },
    children: [
        {
            name: "archivist-pipelines",
            url: "fuchsia-boot:///archivist-pipelines#meta/archivist-pipelines.cm",
        },
    ],
    use: [
        // TODO(https://fxbug.dev/324494668): remove this when Netstack2 is gone.
        {
            directory: "netstack-diagnostics",
            from: "parent",
            rights: [ "r*" ],
            path: "/netstack-diagnostics",
            availability: "optional",
        },
        {
            protocol: [
                "fuchsia.boot.ReadOnlyLog",
                "fuchsia.boot.WriteOnlyLog",
                "fuchsia.component.PersistenceBinder",
                "fuchsia.component.SamplerBinder",
            ],
        },
        {
            protocol: [
                "fuchsia.component.DetectBinder",
                "fuchsia.component.KernelDebugBrokerBinder",
            ],
            availability: "optional",
        },
        {
            directory: "config",
            from: "#archivist-pipelines",
            rights: [ "r*" ],
            path: "/config/data",
        },
    ],
    expose: [
        {
            // Note: this route can go away once all support SDK tools for which
            // we gurantee forward compatibility are defaulting to use /toolbox
            // instead of /core/toolbox.
            protocol: "fuchsia.diagnostics.host.ArchiveAccessor",
            from: "self/diagnostics-accessors",
        },
        {
            dictionary: "diagnostics-accessors",
            from: "self",
        },
    ],
}
