// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "inspect/client.shard.cml",
        "syslog/client.shard.cml",
    ],
    program: {
        runner: "elf",
        binary: "bin/launcher",
        args: [ "sampler" ],
        environ: [
            // TODO(https://fxbug.dev/382623426): revisit this.
            "SCUDO_OPTIONS=release_to_os_interval_ms=0",
        ],
    },
    use: [
        {
            config: "fuchsia.diagnostics.sampler.ProjectConfigs",
            key: "project_configs",
            availability: "optional",
            type: "vector",
            max_count: 1024,
            element: {
                type: "string",
                max_size: 100000,
            },
        },
        {
            protocol: [
                "fuchsia.diagnostics.ArchiveAccessor",
                "fuchsia.hardware.power.statecontrol.RebootMethodsWatcherRegister",
                "fuchsia.metrics.MetricEventLoggerFactory",
            ],
        },
    ],
    expose: [
        {
            protocol: "fuchsia.component.Binder",
            from: "framework",
        },
    ],
    config: {
        minimum_sample_rate_sec: { type: "int64" },

        // Sampler project configurations in JSON. See:
        // [`ProjectConfig`](https://cs.opensource.google/fuchsia/fuchsia/+/main:src/diagnostics/lib/sampler-config/src/runtime/mod.rs)
        // for the schema.
        // LINT.IfChange
        project_configs: {
            type: "vector",
            max_count: 1024,
            element: {
                type: "string",
                max_size: 100000,
            },
        },

        // LINT.ThenChange(//src/lib/assembly/platform_configuration/src/subsystems/diagnostics.rs)
    },
}
