/* automatically generated by rust-bindgen 0.70.1 */

// Copyright 2024 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#![allow(dead_code)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]

//! WARNING - This file was auto generated by //src/paravirtualization/lib/vsock/vsock_sys/generate.py.
//! Do not modify this file. To re-generate, run the following command from the root of
//! your Fuchsia checkout:
//!
//!    ./src/paravirtualization/lib/vsock/vsock_sys/generate.py

pub type zx_status_t = i32;
extern "C" {
    pub fn create_virtio_stream_socket(out_fd: *mut ::std::os::raw::c_int) -> zx_status_t;
    pub fn get_local_cid(out_local_cid: *mut u32) -> zx_status_t;
}
pub type sa_family_t = ::std::os::raw::c_ushort;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct sockaddr_vm {
    pub svm_family: sa_family_t,
    pub svm_reserved1: ::std::os::raw::c_ushort,
    pub svm_port: ::std::os::raw::c_uint,
    pub svm_cid: ::std::os::raw::c_uint,
    pub svm_zero: [::std::os::raw::c_uchar; 4usize],
}
