// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [ "syslog/client.shard.cml" ],
    program: {
        runner: "elf",
        binary: "bin/vsock_service",
    },
    capabilities: [
        {
            protocol: [ "fuchsia.vsock.Connector" ],
        },
    ],
    use: [
        {
            // If set to true, vsock service will wait to discover a device in devfs
            // before attempting to service incoming requests to fuchsia.vsock/Connector.
            // Should only be set to true when fuchsia is running inside of a VM as a guest.
            // Requests to connect to or listen to a socket with VMADDR_CID_HOST will be
            // directed to the enumerated vsock device.
            config: "fuchsia.vsock.GuestToHostSupported",
            key: "guest_to_host_supported",
            type: "bool",
            availability: "optional",
            default: true,
        },
        {
            // If set to true, vsock service will attempt to use the vsock-loopback component.
            // Primarily meant for scenarios where fuchsia is not running in a VM or hermetic
            // testing of code which makes use of vsock based sockets.
            // Requests to connect to or listen to a socket with VMADDR_CID_LOCAL will be
            // directed to the the virtio-loopback component.
            // If set to true and fuchsia.vsock.GuestToHostSupported is set to false, requests
            // to connect to or listen to a socket with VMADDR_CID_HOST will also be directed
            // to the enumerated vsock device.
            config: "fuchsia.vsock.LoopbackSupported",
            key: "loopback_supported",
            type: "bool",
            availability: "optional",
            default: false,
        },
        {
            service: [ "fuchsia.hardware.vsock.Service" ],
        },
        {
            protocol: [ "fuchsia.hardware.vsock.Device-Loopback" ],
            availability: "optional",
        },
    ],
    expose: [
        {
            protocol: [ "fuchsia.vsock.Connector" ],
            from: "self",
        },
    ],
}
