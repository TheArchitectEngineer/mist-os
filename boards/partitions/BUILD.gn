# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/generated_partitions_config.gni")

assert(current_toolchain == default_toolchain,
       "//boards/paritions/* is only valid in the Fuchsia toolchain")

group("partitions") {
  testonly = true
  public_deps = [ ":${target_cpu}_configs" ]
}

_standard_names = {
  zbi_a = "zircon_a"
  zbi_b = "zircon_b"
  zbi_r = "zircon_r"
  vbmeta_a = "vbmeta_a"
  vbmeta_b = "vbmeta_b"
  vbmeta_r = "vbmeta_r"
  fvm = "fvm"
}

# Gigaboot bootloader that is put to legacy `fuchsia-esp` partition
# TODO(b/399522436): This should be moved to platform specific build files.
_gigaboot = {
  testonly = true
  bootloader_partitions = [
    {
      image = "$root_build_dir/fuchsia.esp.blk"
      type = ""
      name = "fuchsia-esp"
    },
  ]
  deps = [ "//build/images/flash:esp" ]
}

# Gigaboot bootloader that is put to `bootloader` partition.
# TODO(b/399522436): This should be moved to platform specific build files.
_gigaboot_bootloader = {
  testonly = true
  bootloader_partitions = [
    {
      image = "$root_build_dir/fuchsia.esp.blk"
      type = ""
      name = "bootloader"
    },
  ]
  deps = [ "//build/images/flash:esp" ]
}

generated_partitions_config("default") {
  hw_revision = ""
  forward_variables_from(_standard_names, "*")
}

if (target_cpu == "x64") {
  group("x64_configs") {
    testonly = true
    public_deps = [ ":x64" ]
  }

  generated_partitions_config("x64") {
    forward_variables_from(_gigaboot_bootloader, "*")
    forward_variables_from(_standard_names, "*")
    hw_revision = "x64"

    # At most one of either a fvm or fxfs will be generated, but the board
    # supports either configuration.
    fvm = "fvm"
    fxfs = "fvm"
  }
}

if (target_cpu == "arm64") {
  group("arm64_configs") {
    testonly = true
    public_deps = [
      ":arm64",
      "vim3",
    ]
  }

  generated_partitions_config("arm64") {
    forward_variables_from(_gigaboot, "*")
    forward_variables_from(_standard_names, "*")
    hw_revision = "arm64"
  }
}

if (target_cpu == "riscv64") {
  group("riscv64_configs") {
    testonly = true
    public_deps = [ ":riscv64" ]
  }

  generated_partitions_config("riscv64") {
    hw_revision = "riscv64"
  }
}

not_needed([
             "_gigaboot",
             "_gigaboot_bootloader",
             "_standard_names",
           ])
