# Copyright 2025 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/toolchain/rbe.gni")

# Use a bigger remote worker machine type than the default one
# in build/rbe/fuchsia-rewrapper.cfg.
# There are generally far fewer of these bigger machines available.
# Reserve use of this for only the largest jobs that need it.
# Note: this does not impact the machine type used for C++ compilation.
# See also :compile_big_rbe_machine.
config("big_rbe_machine") {
  _remote_flag = "--remote-flag=--platform=gceMachineType=n2-standard-8"

  if (link_rbe_enable) {
    ldflags = [ _remote_flag ]
  }
  if (rust_rbe_enable) {
    rustflags = [ _remote_flag ]
  }
  not_needed([ "_remote_flag" ])
}

# Use a bigger remote worker to compile C++ translation units.
# Note: this does not automatically apply to downstream link jobs.
config("compile_big_rbe_machine") {
  _remote_flag = "--remote-flag=--platform=gceMachineType=n2-standard-8"
  if (cxx_rbe_enable) {
    cflags = [ _remote_flag ]
  }
  not_needed([ "_remote_flag" ])
}

config("download_outputs") {
  # Override global settings that may disable downloading of outputs.
  # This is useful for targets that are known to be needed for local actions.
  if (rust_rbe_enable) {
    rustflags = [ "--remote-flag=--download_regex=.*" ]
  }
  if (cxx_rbe_enable) {
    cflags = [ "--remote-flag=--download_regex=.*" ]
  }
  if (link_rbe_enable) {
    ldflags = [ "--remote-flag=--download_regex=.*" ]
  }
}

# Disable remote linking for C++ executables.
# This can be useful on large targets that OOM remotely.
# Alternatively, try a bigger worker, following the instructions
# in build/toolchain/concurrent_jobs.gni for "link_highmem".
config("no_remote_link") {
  if (link_rbe_enable) {
    ldflags = [ "--remote-flag=--local" ]
  }
}

# This option enables a workaround that finds linker inputs
# where reclient fails to do so.  See b/346439263, b/349448459.
config("remote_link_scandeps_workaround") {
  if (link_rbe_enable) {
    ldflags = [ "--remote-flag=--scandeps" ]
  }
}
