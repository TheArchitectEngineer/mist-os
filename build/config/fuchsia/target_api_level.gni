# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

declare_args() {
  # The target API level of the current build.
  #
  # For the default platform build, the API level is "PLATFORM".
  #
  # If this is _not_ set to "PLATFORM", then it must be set to a positive
  # integer corresponding to a currently Supported (not Sunset) API level. In
  # that case, the build will target the given API level.
  #
  # This is intended for use with code that is included in IDK sub-builds. Not
  # all targets support the non-default value, and other uses are unsupported.
  current_build_target_api_level = "PLATFORM"

  # Deprecated name for the variable above that is still used by obsolete bots.
  # TODO(https://fxbug.dev/330709069): Remove after turning down the
  # core.x64-sdk_source_sets_and_shlibs-api*-build_only bots.
  override_target_api_level = false
}

if (override_target_api_level != false) {
  print(
      "Obsolete GN arg `override_target_api_level` specified. Replace with `current_build_target_api_level`.")
  assert(current_build_target_api_level == "PLATFORM")
  current_build_target_api_level = override_target_api_level
}

# Numerical values associated with special API levels, as defined in
# https://fuchsia.dev/fuchsia-src/contribute/governance/rfcs/0246_api_levels_are_32_bits#special_api_levels.
_FIRST_RESERVED_API_LEVEL = 2147483648  # 0x80000000
_API_LEVEL_NEXT_AS_INTEGER = 4291821568
_API_LEVEL_HEAD_AS_INTEGER = 4292870144
_API_LEVEL_PLATFORM_AS_INTEGER = 4293918720

if (current_build_target_api_level == "NEXT") {
  # The numerical value for `current_build_target_api_level`, which may be a
  # string. Use when API level comparisons are necessary or for tools, such as Clang, that do not
  # support string API levels. Prefer using `current_build_target_api_level` when possible.
  current_build_target_api_level_as_integer = _API_LEVEL_NEXT_AS_INTEGER
} else if (current_build_target_api_level == "HEAD") {
  current_build_target_api_level_as_integer = _API_LEVEL_HEAD_AS_INTEGER
} else if (current_build_target_api_level == "PLATFORM") {
  current_build_target_api_level_as_integer = _API_LEVEL_PLATFORM_AS_INTEGER
} else {
  assert(current_build_target_api_level != "$current_build_target_api_level",
         "Unrecognized API level string ${current_build_target_api_level}")

  # `current_build_target_api_level` must be an integer. Ensure it adheres to
  # https://fuchsia.dev/fuchsia-src/contribute/governance/rfcs/0246_api_levels_are_32_bits#design.
  assert(
      current_build_target_api_level < _FIRST_RESERVED_API_LEVEL,
      "Special API levels should be given by name, not number: ${current_build_target_api_level}")
  assert(
      0 < current_build_target_api_level,
      "Non-special API levels must be a positive integer, not: ${current_build_target_api_level}")

  current_build_target_api_level_as_integer = current_build_target_api_level
}

if (current_build_target_api_level == "PLATFORM") {
  # Directory name to use for target API level.
  target_cpu_dir_name_for_target_api_level = target_cpu

  # Base path for library binaries in SDKs.
  sdk_prebuilt_base_for_target_api_level =
      "arch/${target_cpu_dir_name_for_target_api_level}"
} else {
  # Directory name to use for target API level.
  target_cpu_dir_name_for_target_api_level =
      "${target_cpu}-api-${current_build_target_api_level}"

  # Base path for library binaries in SDKs.
  sdk_prebuilt_base_for_target_api_level =
      "obj/${target_cpu_dir_name_for_target_api_level}"
}
