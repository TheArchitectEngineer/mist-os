# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/assembled_system.gni")
import("//build/assembly/legacy_image_metadata_overrides.gni")
import("//build/assembly/product_assembly_configuration.gni")
import("//build/board.gni")
import("//build/images/args.gni")
import("//build/images/custom_signing.gni")
import("//build/images/vboot/vboot.gni")
import("//build/product.gni")
import("//build/sdk/product_bundle.gni")
import("//build/security.gni")
import("//zircon/kernel/phys/qemu.gni")

assert(current_toolchain == default_toolchain,
       "//build/images/* are only valid in the Fuchsia toolchain")

files = {
  # Outputs of assembly.
  outdir = target_out_dir + "/bringup"

  # Outputs of recovery.
  recovery_name = get_label_info(recovery_label, "name")
  recovery_outdir =
      get_label_info(recovery_label, "target_out_dir") + "/" + recovery_name
}

assert(fuchsia_product_assembly_config_label != false,
       "fuchsia_product_assembly_config_label must be defined to use bringup")

bringup_base = {
  testonly = true
  output_dir = root_build_dir
  generate_vbmeta = use_vbmeta

  if (custom_signing_script != "") {
    inputs = custom_signing_script_inputs
    deps = [ "//build/images/custom_signing:deps" ]
    generate_signed_zbi = true
  } else if (use_vboot) {
    inputs = vboot_action.inputs
    generate_signed_zbi = true
  }

  product_assembly_config_label = fuchsia_product_assembly_config_label
  board_config_label = board_configuration_label
  use_bringup_platform_bundles_only = true
}

assembled_system("bringup_assembly") {
  forward_variables_from(bringup_base, "*")
  image_name = "bringup"
  image_metadata_overrides = legacy_bringup_image_metadata_overrides
}

product_bundle("product_bundle") {
  testonly = true
  deps = [
    ":bringup_assembly",
    recovery_label,
  ]

  name = main_product_bundle_name
  system_a = files.outdir
  system_r = files.recovery_outdir
}

group("bringup") {
  testonly = true
  public_deps = [ ":product_bundle" ]
}
