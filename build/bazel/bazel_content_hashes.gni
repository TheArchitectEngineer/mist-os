# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bazel/bazel_workspace.gni")
import("//build/config/clang/clang_prefix.gni")
import("//build/icu/build_config.gni")

# The following lists which content hash files need to be generated
# for the Bazel workspace. Each entry contains the argument to a call
# to generate_content_hash_file(), except for the "repo_name" key which
# identifies the name (and target) corresponding to the repository.
#
bazel_content_hash_definitions = [
  {
    repo_name = "boringssl"
    source_paths = [
      "//third_party/boringssl/src",
      "//third_party/boringssl/BUILD.generated.bzl",
      "//third_party/boringssl/BUILD.generated_tests.bzl",
      "//build/bazel/repository_rules/boringssl_BUILD.bazel",
    ]
  },
  {
    repo_name = "fuchsia_clang"
    source_paths = [
      # clang_prefix points to bin under clang root.
      get_path_info(clang_prefix, "dir"),

      # changes to the following files should trigger repository rules.
      "//build/bazel_sdk/bazel_rules_fuchsia/common/toolchains/clang",
      "//build/bazel_sdk/bazel_rules_fuchsia/fuchsia/workspace/clang_templates/defs.bzl",
      "//build/bazel_sdk/bazel_rules_fuchsia/fuchsia/workspace/clang_templates/cc_toolchain_config_template.bzl",
      "//build/bazel_sdk/bazel_rules_fuchsia/fuchsia/workspace/clang_templates/crosstool.BUILD.template",
    ]
    cipd_name = "clang"
  },
  {
    repo_name = "com_google_googletest"
    source_paths = [
      "//third_party/googletest/src",
      "//build/bazel/patches/googletest/fuchsia-support.bundle",
    ]
  },
  {
    repo_name = "fuchsia_icu_config"
    source_paths = [
      icu_root,
      string_replace(icu_root, "/default", "/latest"),
    ]
  },
  {
    repo_name = "prebuilt_clang"
    source_paths = [
      # clang_prefix points to bin under clang root.
      get_path_info(clang_prefix, "dir"),

      # changes to the following files should trigger repository rules.
      "//build/bazel_sdk/bazel_rules_fuchsia/common/toolchains/clang",
      "//build/bazel/toolchains/clang",
    ]
    cipd_name = "clang"
  },
  {
    repo_name = "prebuilt_python"
    source_paths = [ "//prebuilt/third_party/python3/${host_os}-${host_cpu}" ]
    cipd_name = "cpython3"
    exclude_suffixes = [ ".pyc" ]
  },
  {
    repo_name = "rules_fuchsia"
    source_paths = [ "//build/bazel_sdk/bazel_rules_fuchsia" ]
  },
]
