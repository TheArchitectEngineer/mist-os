# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bazel/bazel_workspace.gni")
import("//build/python/python_action.gni")

# Compares a board configuration file with a golden json.
#
# Parameters
#
#  golden_json (required)
#    The golden JSON file to be compare against.
#    Type: string (path)
#
#  bazel_board_config_file (required)
#    The JSON file generated by Bazel to be compared against the golden.
#    Type: string (path)
#
#  deps
#  visibility
#
template("verify_board_configuration") {
  assert(defined(invoker.bazel_board_config_file),
         "bazel_board_config_file is required")
  assert(defined(invoker.golden_json), "golden_json is required")

  python_action(target_name) {
    forward_variables_from(invoker,
                           [
                             "visibility",
                             "deps",
                           ])
    testonly = true

    depfile = "${target_gen_dir}/${target_name}.d"

    inputs = [
      invoker.bazel_board_config_file,
      invoker.golden_json,
    ]
    outputs = [ "${target_out_dir}/${target_name}/diff" ]

    binary_label =
        "//build/bazel/assembly/board_configurations:verify_board_configuration"
    args = [
      "--generated_board_config",
      rebase_path(inputs[0], root_build_dir),
      "--generated_root_dir",
      bazel_top_dir_rebased + "/workspace",
      "--golden_json5",
      rebase_path(inputs[1], root_build_dir),
      "--golden_root_dir",
      ".",
      "--depfile",
      rebase_path(depfile, root_build_dir),
      "--output",
      rebase_path(outputs[0], root_build_dir),
    ]
  }
}
