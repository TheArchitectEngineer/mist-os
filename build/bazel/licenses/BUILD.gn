# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# These rules aggregate license information for all the GN-built bazel input resources
# into a licenses SPDX file to be used in bazel build too.
#
# The SPDX file is a bazel input file as well.

import("//build/bazel/bazel_inputs.gni")
import("//build/licenses/generated_licenses_spdx.gni")
import("//build/security.gni")
import("//tools/check-licenses/build/license_data.gni")

_excluded_bazel_inputs = [
  # Remove a potential circular dependency on the spdx bazel_input_file
  # itself. This is added in by some extra_gn_labels_for_bazel_inputs configs.
  "//build/bazel/licenses:legacy_ninja_build_outputs_licenses_spdx",
]

group("all_bazel_inputs") {
  deps = [
    "//build/images/flash:esp.bazel_input",
    "//sdk:fuchsia_collection",
    "//src/fonts/asset_providers:bazel_inputs",
  ]
  deps += _excluded_bazel_inputs
  deps -= _excluded_bazel_inputs

  metadata = {
    # Prevent packages from leaking into the universe packages list in
    # //build/images/updates:universe_packages.list which uses
    # generate_package_metadata()
    package_names_barrier = []
  }
}

generated_licenses_spdx("all_bazel_inputs_licenses_spdx") {
  target = ":all_bazel_inputs"
  spdx_root_package_name = "Fuchsia"
  output = "${target_out_dir}/all_bazel_inputs_licenses.spdx.json"

  debug_hints = true

  # Current Bazel inputs customers don't need host tool licenses.
  # TODO(132725): Revisit once each individual input has its own SPDX.
  # We can then derive value based on the input target's toolchain.
  include_host_tools = false

  # TODO(132725): Remove once all remaining errors are sorted out.
  ignore_collection_errors = false
}

bazel_input_file("legacy_ninja_build_outputs_licenses_spdx") {
  generator = ":all_bazel_inputs_licenses_spdx"
}
