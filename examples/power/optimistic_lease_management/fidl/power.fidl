// Copyright 2025 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
@available(added=HEAD)
library fuchsia.example.power;
using zx;

type LeaseBaton = resource table {
    1: lease zx.Handle:<EVENTPAIR>;
    2: msg_index uint64;
};

// Protocol used between client and server
@discoverable
closed protocol MessageSource {
    strict ReceiveMessages(resource struct {
        socket zx.Handle:<SOCKET>;
    }) -> ();
    strict ReceiveBaton() -> (LeaseBaton);
};

// Protocol the server exposes to allow it to be controlled
@discoverable
closed protocol FrameControl {
    // `time` is the offset in the frame when the server will drop
    // its lease and see if we can suspend
    strict StartFrame(struct {
        duration_ms uint16;
        rate_change_offset_ms uint16;
    }) -> ();
};

// Ask for the value of the counter
@discoverable
closed protocol Counter {
    strict Get() -> (struct {
        count uint64;
    });
};
