#!/bin/bash
# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

### Test expected behavior of fx klog


BT_FILE_DEPS=(
  "scripts/fx"
  "tools/devshell/lib/fx-cmd-locator.sh"
  "tools/devshell/lib/fx-optional-features.sh"
  "tools/devshell/lib/generate-ssh-config.sh"
  "tools/devshell/lib/updates.sh"
  "tools/devshell/lib/vars.sh"
  "tools/devshell/lib/platform.sh"
  "tools/devshell/symbolize"
  "tools/devshell/klog"
)


declare fx ffx

BT_SET_UP() {
  source "${BT_TEMP_DIR}/tools/devshell/lib/vars.sh"
  source "${BT_TEMP_DIR}/tools/devshell/tests/lib/fuchsia-mock.sh"
  fx="$(btf::setup_fx)"
  fx-config-read
  ffx="$(btf::make_installed_hosttools_mock ffx)"
  _loglistener="$(btf::make_installed_hosttools_mock loglistener)"
}

TEST_klog_raw() {
  echo "testing" > "${ffx}.mock_stdout"
  BT_EXPECT ${fx} -d "testing" klog --raw
  btf::expect-mock-args "${ffx}.mock_state.1" "target" "default" "get"
  btf::expect-mock-args "${ffx}.mock_state.2" --config fuchsia.analytics.ffx_invoker=fx target default get

  BT_EXPECT_FILE_DOES_NOT_EXIST "${ffx}.mock_state.4" \
    "ffx should not have been called 3 times fx klog --raw"
}

TEST_klog() {
  echo "testing" > "${ffx}.mock_stdout"
  BT_EXPECT ${fx} -d "testing" klog
  btf::expect-mock-args "${ffx}.mock_state.3" debug symbolize
}

BT_RUN_TESTS "$@"
