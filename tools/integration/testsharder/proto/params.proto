// Copyright 2024 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package testsharder;

option go_package = "go.fuchsia.dev/fuchsia/tools/integration/testsharder/proto";

import "google/protobuf/duration.proto";

// Params contains the parameters necessary for determining how to shard the
// tests, which should be consistent per builder.
message Params {
  // Environment tags on which to filter; only the tests that match all tags
  // will be sharded.
  repeated string environment_tags = 1;

  // The approximate duration that each shard should run in.
  google.protobuf.Duration target_duration = 2;

  // Maximum shards allowed per environment. If 0 (default), testsharder will
  // use a hardcoded default of 8 max shards per environment. If < 0, no max
  // will be set.
  int32 max_shards_per_env = 3;

  // Target max number of tests per shard. It will only have effect if used with
  // target_duration_secs to further limit the number of tests per shard if the
  // calculated average tests per shard would exceed max_shard_size after
  // sharding by duration. This is only a soft maximum and is used to make the
  // average shard size not exceed the max size, but ultimately the shards will
  // be sharded by duration, so some shards may have more than the max number of
  // tests while others will have less. However, if max_shards_per_env is set,
  // that will take precedence over max_shard_size, which may result in all
  // shards exceeding the max size in order to fit within the max number of
  // shards per environment.
  int32 max_shard_size = 4;

  // Default per-test timeout, applied to all tests. If <= 0, no timeout will be
  // set.
  google.protobuf.Duration per_test_timeout = 5;

  // Target number of tests per shard. If <= 0, will be ignored. Otherwise,
  // tests will be split into more, smaller shards. Either this or
  // target_shard_duration_secs should be set, not both.
  int32 target_test_count = 6;

  // If there are <= this many tests in -affected-tests, they may be multiplied
  // (modified to run many times in a separate shard), but only be multiplied if
  // allowed by certain constraints designed to minimize false rejections and
  // bot demand.
  int32 affected_tests_multiply_threshold = 7;

  // Whether to add all the images and blobs used by the shard as dependencies.
  bool hermetic_deps = 8;

  // Whether to add all the images used by the shard as dependencies.
  bool image_deps = 9;

  // Whether the shards generated should pave or netboot fuchsia. (Ignored if
  // device_type == QEMU)
  bool pave = 10;

  // Whether to construct a local package repo for each shard.
  bool per_shard_package_repos = 11;

  // Whether the test packages should be cached on disk in the local package
  // repo.
  bool cache_test_packages = 12;

  // The name of the default product bundle to run tests against.
  string product_bundle_name = 13;

  // How long to wait until timing out on tests. If set, testsharder will
  // override its computed shard timeout with this value.
  google.protobuf.Duration shard_timeout = 14;

  // A list of device types to NOT run tests on.
  // This should only be used to avoid running on physical devices where
  // there are capacity concerns.
  repeated string disabled_device_types = 15;
}
