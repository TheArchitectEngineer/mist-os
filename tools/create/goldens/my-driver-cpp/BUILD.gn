# Copyright 2025 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# TODO: You only need one BUILD file. Chose between this one or the bazel one and then
# delete the other one. Use bazel for vendor repo drivers. Use gn for in-tree drivers.

import("//build/components.gni")
import("//build/drivers.gni")
import("//build/testing/cc_test_executable.gni")

group("my-driver-cpp") {
  testonly = true
  deps = [
    ":pkg",
    ":tests",
  ]
}

# TODO: Remember to link this to ../BUILD.gn tests group so that the tests are included.
# Then delete this comment.
group("tests") {
  testonly = true
  deps = [ ":test_pkg_gn" ]
}

driver_bind_rules("bind_rules") {
  rules = "meta/my_driver_cpp.bind"
  bind_output = "my_driver_cpp.bindbc"
}

source_set("my_driver_cpp_common") {
  sources = [
    "my_driver_cpp.cc",
    "my_driver_cpp.h",
  ]
  public_deps = [
    "//sdk/lib/driver/component/cpp",
    "//src/devices/lib/driver:driver_runtime",
  ]
}

fuchsia_cc_driver("driver") {
  output_name = "my_driver_cpp"
  deps = [ ":my_driver_cpp_common" ]
}

fuchsia_driver_component("component") {
  component_name = "my_driver_cpp"
  manifest = "meta/my_driver_cpp.cml"
  deps = [
    ":bind_rules",
    ":driver",
  ]
  info = "meta/my_driver_cpp_info.json"
}

fuchsia_driver_package("pkg") {
  package_name = "my_driver_cpp_gn"  # TODO remove the _gn
  driver_components = [ ":component" ]
}

cc_test_executable("my_driver_cpp_test") {
  testonly = true
  sources = [ "tests/my_driver_cpp_test.cc" ]
  deps = [
    ":my_driver_cpp_common",
    "//sdk/lib/driver/testing/cpp",
    "//src/lib/fxl/test:gtest_main",
  ]
}

fuchsia_unittest_package("test_pkg_gn") {  # TODO remove the _gn
  deps = [ ":my_driver_cpp_test" ]
  package_name = "my_driver_cpp_test_gn"  # TODO remove the _gn
  component_name = "my_driver_cpp_test"
}
