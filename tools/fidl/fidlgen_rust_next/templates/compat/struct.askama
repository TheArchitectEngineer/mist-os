{% if !strct.is_empty_success_struct %}

{{ denylist }}
impl ::fidl_next::CompatFrom<crate::{{ name }}> for ::{{ compat.crate_name }}::{{ compat_name }} {
    #[inline]
    fn compat_from(value: crate::{{ name }}) -> Self {
        Self {
            {% for member in strct.members %}
                {{ member.name|compat_snake }}: ::fidl_next::CompatFrom::compat_from(value.{{ member.name|snake }}),
            {% endfor %}
        }
    }
}

{{ denylist }}
impl ::fidl_next::CompatFrom<::{{ compat.crate_name }}::{{ compat_name }}> for crate::{{ name }} {
    #[inline]
    fn compat_from(value: ::{{ compat.crate_name }}::{{ compat_name }}) -> Self {
        Self {
            {% for member in strct.members %}
                {{ member.name|snake }}: ::fidl_next::CompatFrom::compat_from(value.{{ member.name|compat_snake }}),
            {% endfor %}
        }
    }
}

{% endif %}
