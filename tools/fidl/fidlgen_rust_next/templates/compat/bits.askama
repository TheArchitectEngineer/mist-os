{{ denylist }}
impl ::fidl_next::CompatFrom<crate::{{ name }}> for ::{{ compat.crate_name }}::{{ compat_name }} {
    fn compat_from(value: crate::{{ name }}) -> Self {
        Self::from_bits_retain(value.bits())
    }
}

{{ denylist }}
impl ::fidl_next::CompatFrom<::{{ compat.crate_name }}::{{ compat_name }}> for crate::{{ name }} {
    fn compat_from(value: ::{{ compat.crate_name }}::{{ compat_name }}) -> Self {
        Self::from_bits_retain(value.bits())
    }
}
