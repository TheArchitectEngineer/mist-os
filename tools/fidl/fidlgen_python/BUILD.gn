# Copyright 2025 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/go/go_binary.gni")
import("//tools/fidl/fidlc/testdata/info.gni")

go_library("codegen") {
  source_dir = "codegen"
  deps = [ "//tools/fidl/lib/fidlgen" ]
  sources = [
    "bits.tmpl",
    "codegen.go",
    "enum.tmpl",
    "ir.go",
    "protocol.tmpl",
    "sourcefile.tmpl",
    "struct.tmpl",
    "table.tmpl",
    "union.tmpl",
  ]
}

go_binary("fidlgen_python") {
  sources = [ "main.go" ]
  deps = [
    ":codegen",
    "//tools/fidl/lib/fidlgen",
  ]
  sdk_category = "partner"
}

install_host_tools("host") {
  deps = [ ":fidlgen_python" ]
  outputs = [ "fidlgen_python" ]
}

# TODO(https://fxbug.dev/308723467): In other fidlgen_* implementations, there is an associated
# "goldens" target that depends on each library of bindings generated. However, fidlgen_python
# relies on host test data that includes an IR for each FIDL library stored in a shared IR root
# path. Because many golden libraries have duplicate names, there is a conflict to write
# IRs with the same library name to the same IR root path.
golden_files("fidlgen_python_golden_tests") {
  testonly = true

  formatter = {
    script = "//prebuilt/third_party/black/linux-x64/black"
    args = [
      "--quiet",
      "-",
    ]
    inputs = [
      "//.gitignore",
      "//pyproject.toml",
    ]
  }

  deps = []
  comparisons = []
  foreach(info, fidl_testdata_info) {
    if (info.denylist + [ "fidlgen_python" ] - [ "fidlgen_python" ] ==
        info.denylist) {
      deps += [ "${info.target}_python_generate($fidl_toolchain)" ]
      _library_underscore = string_replace(info.library, ".", "_")
      comparisons += [
        {
          golden = "goldens/${info.name}.py.golden"
          candidate =
              "${info.fidl_gen_dir}/${info.target_name}/python/__init__.py"
        },
      ]
    }
  }

  # Add dynsuite as a golden since we can't otherwise test with it.
  dynsuite_label = "//src/tests/fidl/dynsuite/client_suite/fidl:fidl.clientsuite_python_generate($fidl_toolchain)"
  deps += [ dynsuite_label ]
  comparisons += [
    {
      golden = "goldens/clientsuite.py.golden"
      candidate = get_label_info("${dynsuite_label}", "target_gen_dir") +
                  "/fidl.clientsuite/python/__init__.py"
    },
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":fidlgen_python_golden_tests($host_toolchain)",
    "tests:fidlgen_python_client_test($host_toolchain)",
    "tests:fidlgen_python_const_test($host_toolchain)",
    "tests:fidlgen_python_construct_test($host_toolchain)",
    "tests:fidlgen_python_external_library_test($host_toolchain)",
    "tests:fidlgen_python_method_response_types_test($host_toolchain)",
    "tests:fidlgen_python_protocol_compile_test($host_toolchain)",
    "tests:fidlgen_python_reserved_names_test($host_toolchain)",
    "tests:fidlgen_python_server_and_event_handler_test($host_toolchain)",
    "tests:fidlgen_python_union_test($host_toolchain)",
  ]
}
