# WARNING: This file is machine generated by fidlgen.

from __future__ import annotations

from dataclasses import dataclass

# TODO(https://fxbug.dev/346628306): Enable type checking here once fidl_codec has stubs
from fidl_codec import add_ir_path, encode_fidl_object  # type: ignore
import sys
import typing
import enum

import fidl

_ir_path = fidl._library.get_fidl_ir_map()["test.consts"]
add_ir_path(_ir_path)


EnumType = enum.IntEnum(
    "EnumType",
    {
        "__fidl_kind__": "enum",
        "__fidl_type__": "EnumType",
        "__fidl_raw_type__": "test.consts/EnumType",
        "__strict__": True,
        "VALUE": 1,
        "TRUE": 2,
        "EMPTY__": 0,
        "make_default": classmethod(lambda cls: cls(0)),
    },
)


BitsType = enum.IntFlag(
    "BitsType",
    {
        "__fidl_kind__": "bits",
        "__fidl_type__": "BitsType",
        "__fidl_raw_type__": "test.consts/BitsType",
        "__strict__": True,
        "VALUE": 1,
        "TRUE": 2,
        "make_default": classmethod(lambda cls: cls(value=0)),
    },
)


# Generated constants
ANSWER: int = 42
ANSWER_IN_BINARY: int = 42
ANSWER_NARROWED: int = 42
CONVERSION_FACTOR: float = 1.41421
DIAMOND: int = 1746410393481133080
ENABLED_FLAG: bool = True
FUCHSIA: int = 4054509061583223046
MIN_TEMP: float = -273.15
OFFSET: int = -33
POPULATION_USA_2018: int = 330000000
USERNAME: str = """\"squeenze\""""
ZX_CONST: int = 65536
ZX_OBJ_VAL: int = 4
ZX_RIGHTS_VAL: int = 4
BITS_PRIMITIVE_TRUE: int = 2
BITS_PRIMITIVE_VAL: int = 1
BITS_PRIMITIVE_VAL_NARROWED: int = 1
BITS_TRUE: int = 2
BITS_VAL: int = 1
ENUM_PRIMITIVE_TRUE: int = 2
ENUM_PRIMITIVE_VAL: int = 1
ENUM_PRIMITIVE_VAL_NARROWED: int = 1
ENUM_TRUE: int = 2
ENUM_VAL: int = 1
