# WARNING: This file is machine generated by fidlgen.

from __future__ import annotations

from dataclasses import dataclass

# TODO(https://fxbug.dev/346628306): Enable type checking here once fidl_codec has stubs
from fidl_codec import add_ir_path, encode_fidl_object  # type: ignore
import sys
import typing
import enum

import fidl

_ir_path = fidl._library.get_fidl_ir_map()["test.enum"]
add_ir_path(_ir_path)


MyEmptyFlexibleEnum = enum.IntEnum(
    "MyEmptyFlexibleEnum",
    {
        "__fidl_kind__": "enum",
        "__fidl_type__": "MyEmptyFlexibleEnum",
        "__fidl_raw_type__": "test.enum/MyEmptyFlexibleEnum",
        "__strict__": False,
        "EMPTY__": 0,
        "make_default": classmethod(lambda cls: cls(0)),
    },
)


MyFlexibleEnum = enum.IntEnum(
    "MyFlexibleEnum",
    {
        "__fidl_kind__": "enum",
        "__fidl_type__": "MyFlexibleEnum",
        "__fidl_raw_type__": "test.enum/MyFlexibleEnum",
        "__strict__": False,
        "FOO": 1,
        "BAR": 2,
        "EMPTY__": 0,
        "make_default": classmethod(lambda cls: cls(0)),
    },
)


MyFlexibleEnumWithCustomUnknown = enum.IntEnum(
    "MyFlexibleEnumWithCustomUnknown",
    {
        "__fidl_kind__": "enum",
        "__fidl_type__": "MyFlexibleEnumWithCustomUnknown",
        "__fidl_raw_type__": "test.enum/MyFlexibleEnumWithCustomUnknown",
        "__strict__": False,
        "FOO": 1,
        "BAR": 2,
        "CUSTOM_UNKNOWN": 3,
        "EMPTY__": 0,
        "make_default": classmethod(lambda cls: cls(0)),
    },
)


MyStrictEnum = enum.IntEnum(
    "MyStrictEnum",
    {
        "__fidl_kind__": "enum",
        "__fidl_type__": "MyStrictEnum",
        "__fidl_raw_type__": "test.enum/MyStrictEnum",
        "__strict__": True,
        "FOO": 1,
        "BAR": 2,
        "EMPTY__": 0,
        "make_default": classmethod(lambda cls: cls(0)),
    },
)
