# WARNING: This file is machine generated by fidlgen.

from __future__ import annotations

from dataclasses import dataclass

# TODO(https://fxbug.dev/346628306): Enable type checking here once fidl_codec has stubs
from fidl_codec import add_ir_path, encode_fidl_object  # type: ignore
import sys
import typing
import enum

import fidl
from fidl._ir import get_fidl_ir_map

_ir_path = get_fidl_ir_map()["test.bits"]
add_ir_path(_ir_path)


EmptyBits = enum.IntFlag(
    "EmptyBits",
    {
        "__fidl_kind__": "bits",
        "__fidl_type__": "EmptyBits",
        "__fidl_raw_type__": "test.bits/EmptyBits",
        "__strict__": False,
        "EMPTY__": 0,
        "make_default": classmethod(lambda cls: cls(value=0)),
    },
)


FlexibleBits = enum.IntFlag(
    "FlexibleBits",
    {
        "__fidl_kind__": "bits",
        "__fidl_type__": "FlexibleBits",
        "__fidl_raw_type__": "test.bits/FlexibleBits",
        "__strict__": False,
        "SMALLEST": 1,
        "BIGGEST": 9223372036854775808,
        "make_default": classmethod(lambda cls: cls(value=0)),
    },
)


MyBits = enum.IntFlag(
    "MyBits",
    {
        "__fidl_kind__": "bits",
        "__fidl_type__": "MyBits",
        "__fidl_raw_type__": "test.bits/MyBits",
        "__strict__": True,
        "MY_FIRST_BIT": 1,
        "MY_OTHER_BIT": 2,
        "MASK": 4,
        "make_default": classmethod(lambda cls: cls(value=0)),
    },
)


StrictBits = enum.IntFlag(
    "StrictBits",
    {
        "__fidl_kind__": "bits",
        "__fidl_type__": "StrictBits",
        "__fidl_raw_type__": "test.bits/StrictBits",
        "__strict__": True,
        "SMALLEST": 1,
        "BIGGEST": 9223372036854775808,
        "make_default": classmethod(lambda cls: cls(value=0)),
    },
)
