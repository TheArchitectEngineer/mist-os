// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.requestflexibleenvelope/cpp/natural_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::ProtocolRequestStrictResponseFlexibleRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::ProtocolRequestStrictResponseFlexibleRequest(::test_requestflexibleenvelope::StrictFoo s) noexcept
    : storage_({.s = std::move(s)}) {}

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::ProtocolRequestStrictResponseFlexibleRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ProtocolRequestStrictResponseFlexibleRequest(Storage_{
                                                                                                                                                                                             .s = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                                                         }) {}
::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::ProtocolRequestStrictResponseFlexibleRequest(const ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest& other) noexcept : ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest(other.CloneStorage_()) {}

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest& test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::operator=(const ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::operator==(const ProtocolRequestStrictResponseFlexibleRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest, 16>::Equal(this, &other);
}

bool test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::operator!=(const ProtocolRequestStrictResponseFlexibleRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest, 16>::Equal(this, &other);
}

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::Storage_ test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.s)};
}
const ::test_requestflexibleenvelope::StrictFoo&
test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::s() const {
  return storage_.s;
}

::test_requestflexibleenvelope::StrictFoo& ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::s() {
  return storage_.s;
}

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest& ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleRequest::s(::test_requestflexibleenvelope::StrictFoo value) {
  storage_.s = std::move(value);
  return *this;
}

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::ProtocolRequestStrictResponseFlexibleResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::ProtocolRequestStrictResponseFlexibleResponse(::test_requestflexibleenvelope::FlexibleFoo f) noexcept
    : storage_({.f = std::move(f)}) {}

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::ProtocolRequestStrictResponseFlexibleResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ProtocolRequestStrictResponseFlexibleResponse(Storage_{
                                                                                                                                                                                               .f = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                                                           }) {}
::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::ProtocolRequestStrictResponseFlexibleResponse(const ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse& other) noexcept : ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse(other.CloneStorage_()) {}

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse& test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::operator=(const ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::operator==(const ProtocolRequestStrictResponseFlexibleResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse, 16>::Equal(this, &other);
}

bool test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::operator!=(const ProtocolRequestStrictResponseFlexibleResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse, 16>::Equal(this, &other);
}

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::Storage_ test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.f)};
}
const ::test_requestflexibleenvelope::FlexibleFoo&
test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::f() const {
  return storage_.f;
}

::test_requestflexibleenvelope::FlexibleFoo& ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::f() {
  return storage_.f;
}

::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse& ::test_requestflexibleenvelope::ProtocolRequestStrictResponseFlexibleResponse::f(::test_requestflexibleenvelope::FlexibleFoo value) {
  storage_.f = std::move(value);
  return *this;
}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::ProtocolRequestFlexibleResponseStrictRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::ProtocolRequestFlexibleResponseStrictRequest(::test_requestflexibleenvelope::FlexibleFoo s) noexcept
    : storage_({.s = std::move(s)}) {}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::ProtocolRequestFlexibleResponseStrictRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ProtocolRequestFlexibleResponseStrictRequest(Storage_{
                                                                                                                                                                                             .s = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                                                         }) {}
::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::ProtocolRequestFlexibleResponseStrictRequest(const ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest& other) noexcept : ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest(other.CloneStorage_()) {}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest& test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::operator=(const ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::operator==(const ProtocolRequestFlexibleResponseStrictRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest, 16>::Equal(this, &other);
}

bool test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::operator!=(const ProtocolRequestFlexibleResponseStrictRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest, 16>::Equal(this, &other);
}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::Storage_ test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.s)};
}
const ::test_requestflexibleenvelope::FlexibleFoo&
test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::s() const {
  return storage_.s;
}

::test_requestflexibleenvelope::FlexibleFoo& ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::s() {
  return storage_.s;
}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest& ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictRequest::s(::test_requestflexibleenvelope::FlexibleFoo value) {
  storage_.s = std::move(value);
  return *this;
}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::ProtocolRequestFlexibleResponseStrictResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::ProtocolRequestFlexibleResponseStrictResponse(::test_requestflexibleenvelope::StrictFoo f) noexcept
    : storage_({.f = std::move(f)}) {}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::ProtocolRequestFlexibleResponseStrictResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ProtocolRequestFlexibleResponseStrictResponse(Storage_{
                                                                                                                                                                                               .f = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                                                           }) {}
::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::ProtocolRequestFlexibleResponseStrictResponse(const ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse& other) noexcept : ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse(other.CloneStorage_()) {}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse& test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::operator=(const ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::operator==(const ProtocolRequestFlexibleResponseStrictResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse, 16>::Equal(this, &other);
}

bool test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::operator!=(const ProtocolRequestFlexibleResponseStrictResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse, 16>::Equal(this, &other);
}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::Storage_ test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.f)};
}
const ::test_requestflexibleenvelope::StrictFoo&
test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::f() const {
  return storage_.f;
}

::test_requestflexibleenvelope::StrictFoo& ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::f() {
  return storage_.f;
}

::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse& ::test_requestflexibleenvelope::ProtocolRequestFlexibleResponseStrictResponse::f(::test_requestflexibleenvelope::StrictFoo value) {
  storage_.f = std::move(value);
  return *this;
}

::test_requestflexibleenvelope::FlexibleFoo::FlexibleFoo(FlexibleFoo&& other) noexcept : FlexibleFoo(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_requestflexibleenvelope::FlexibleFoo& ::test_requestflexibleenvelope::FlexibleFoo::operator=(FlexibleFoo&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_requestflexibleenvelope::FlexibleFoo::FlexibleFoo(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_requestflexibleenvelope::FlexibleFoo::FlexibleFoo(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_requestflexibleenvelope::FlexibleFoo::Tag test_requestflexibleenvelope::FlexibleFoo::Which() const {
  return FlexibleFoo::IndexToTag(storage_->index()).value();
}

size_t test_requestflexibleenvelope::FlexibleFoo::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_requestflexibleenvelope::FlexibleFoo::Tag tag) {
  switch (tag) {
    case ::test_requestflexibleenvelope::FlexibleFoo::Tag::kS:
      return 1;
    case ::test_requestflexibleenvelope::FlexibleFoo::Tag::kI:
      return 2;
    default: {
      return 0;
    }
  }
}

std::optional<::test_requestflexibleenvelope::FlexibleFoo::Tag> test_requestflexibleenvelope::FlexibleFoo::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_requestflexibleenvelope::FlexibleFoo::Tag::kS;
    case 2:
      return ::test_requestflexibleenvelope::FlexibleFoo::Tag::kI;
    default:
      return ::test_requestflexibleenvelope::FlexibleFoo::Tag::_do_not_handle_this__write_a_default_case_instead;
  }
}

::test_requestflexibleenvelope::FlexibleFoo::FlexibleFoo(const FlexibleFoo& other) noexcept : FlexibleFoo(other.CloneStorage_()) {}

::test_requestflexibleenvelope::FlexibleFoo& test_requestflexibleenvelope::FlexibleFoo::operator=(const FlexibleFoo& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_requestflexibleenvelope::FlexibleFoo::operator==(const FlexibleFoo& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_requestflexibleenvelope::FlexibleFoo::operator!=(const FlexibleFoo& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_requestflexibleenvelope::FlexibleFoo::Storage_> test_requestflexibleenvelope::FlexibleFoo::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
bool test_requestflexibleenvelope::FlexibleFoo::IsUnknown() const {
  return Which() == ::test_requestflexibleenvelope::FlexibleFoo::Tag::_do_not_handle_this__write_a_default_case_instead;
}
::test_requestflexibleenvelope::FlexibleFoo test_requestflexibleenvelope::FlexibleFoo::WithS(::std::string val) {
  return FlexibleFoo(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_requestflexibleenvelope::FlexibleFoo::Storage_> test_requestflexibleenvelope::FlexibleFoo::s() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_requestflexibleenvelope::FlexibleFoo::Storage_> test_requestflexibleenvelope::FlexibleFoo::s() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_requestflexibleenvelope::FlexibleFoo& test_requestflexibleenvelope::FlexibleFoo::s(::std::string value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_requestflexibleenvelope::FlexibleFoo test_requestflexibleenvelope::FlexibleFoo::WithI(int32_t val) {
  return FlexibleFoo(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_requestflexibleenvelope::FlexibleFoo::Storage_> test_requestflexibleenvelope::FlexibleFoo::i() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_requestflexibleenvelope::FlexibleFoo::Storage_> test_requestflexibleenvelope::FlexibleFoo::i() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_requestflexibleenvelope::FlexibleFoo& test_requestflexibleenvelope::FlexibleFoo::i(int32_t value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}

::test_requestflexibleenvelope::StrictFoo::StrictFoo(StrictFoo&& other) noexcept : StrictFoo(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_requestflexibleenvelope::StrictFoo& ::test_requestflexibleenvelope::StrictFoo::operator=(StrictFoo&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_requestflexibleenvelope::StrictFoo::StrictFoo(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_requestflexibleenvelope::StrictFoo::StrictFoo(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_requestflexibleenvelope::StrictFoo::Tag test_requestflexibleenvelope::StrictFoo::Which() const {
  return StrictFoo::IndexToTag(storage_->index()).value();
}

size_t test_requestflexibleenvelope::StrictFoo::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_requestflexibleenvelope::StrictFoo::Tag tag) {
  switch (tag) {
    case ::test_requestflexibleenvelope::StrictFoo::Tag::kS:
      return 1;
    case ::test_requestflexibleenvelope::StrictFoo::Tag::kI:
      return 2;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_requestflexibleenvelope::StrictFoo::Tag> test_requestflexibleenvelope::StrictFoo::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_requestflexibleenvelope::StrictFoo::Tag::kS;
    case 2:
      return ::test_requestflexibleenvelope::StrictFoo::Tag::kI;
    default:
      return std::nullopt;
  }
}

::test_requestflexibleenvelope::StrictFoo::StrictFoo(const StrictFoo& other) noexcept : StrictFoo(other.CloneStorage_()) {}

::test_requestflexibleenvelope::StrictFoo& test_requestflexibleenvelope::StrictFoo::operator=(const StrictFoo& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_requestflexibleenvelope::StrictFoo::operator==(const StrictFoo& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_requestflexibleenvelope::StrictFoo::operator!=(const StrictFoo& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_requestflexibleenvelope::StrictFoo::Storage_> test_requestflexibleenvelope::StrictFoo::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_requestflexibleenvelope::StrictFoo test_requestflexibleenvelope::StrictFoo::WithS(::std::string val) {
  return StrictFoo(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_requestflexibleenvelope::StrictFoo::Storage_> test_requestflexibleenvelope::StrictFoo::s() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_requestflexibleenvelope::StrictFoo::Storage_> test_requestflexibleenvelope::StrictFoo::s() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_requestflexibleenvelope::StrictFoo& test_requestflexibleenvelope::StrictFoo::s(::std::string value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_requestflexibleenvelope::StrictFoo test_requestflexibleenvelope::StrictFoo::WithI(int32_t val) {
  return StrictFoo(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_requestflexibleenvelope::StrictFoo::Storage_> test_requestflexibleenvelope::StrictFoo::i() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_requestflexibleenvelope::StrictFoo::Storage_> test_requestflexibleenvelope::StrictFoo::i() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_requestflexibleenvelope::StrictFoo& test_requestflexibleenvelope::StrictFoo::i(int32_t value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}

#pragma clang diagnostic pop
