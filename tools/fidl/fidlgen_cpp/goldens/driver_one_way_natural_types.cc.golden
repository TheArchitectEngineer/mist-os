// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.driveroneway/cpp/natural_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

::test_driveroneway::Payload::Payload(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_driveroneway::Payload::Payload(uint32_t value) noexcept
    : storage_({.value = std::move(value)}) {}

::test_driveroneway::Payload::Payload(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : Payload(Storage_{
                                                                                                        .value = {},
                                                                                                    }) {}
::test_driveroneway::Payload::Payload(const ::test_driveroneway::Payload& other) noexcept : ::test_driveroneway::Payload(other.CloneStorage_()) {}

::test_driveroneway::Payload& test_driveroneway::Payload::operator=(const ::test_driveroneway::Payload& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_driveroneway::Payload::operator==(const Payload& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_driveroneway::Payload, 4>::Equal(this, &other);
}

bool test_driveroneway::Payload::operator!=(const Payload& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_driveroneway::Payload, 4>::Equal(this, &other);
}

::test_driveroneway::Payload::Storage_ test_driveroneway::Payload::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.value)};
}
uint32_t
test_driveroneway::Payload::value() const {
  return storage_.value;
}

uint32_t& ::test_driveroneway::Payload::value() {
  return storage_.value;
}

::test_driveroneway::Payload& ::test_driveroneway::Payload::value(uint32_t value) {
  storage_.value = std::move(value);
  return *this;
}

::test_driveroneway::OneWaySendRequest::OneWaySendRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_driveroneway::OneWaySendRequest::OneWaySendRequest(::test_driveroneway::Payload payload) noexcept
    : storage_({.payload = std::move(payload)}) {}

::test_driveroneway::OneWaySendRequest::OneWaySendRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : OneWaySendRequest(Storage_{
                                                                                                                            .payload = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                        }) {}
::test_driveroneway::OneWaySendRequest::OneWaySendRequest(const ::test_driveroneway::OneWaySendRequest& other) noexcept : ::test_driveroneway::OneWaySendRequest(other.CloneStorage_()) {}

::test_driveroneway::OneWaySendRequest& test_driveroneway::OneWaySendRequest::operator=(const ::test_driveroneway::OneWaySendRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_driveroneway::OneWaySendRequest::operator==(const OneWaySendRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_driveroneway::OneWaySendRequest, 4>::Equal(this, &other);
}

bool test_driveroneway::OneWaySendRequest::operator!=(const OneWaySendRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_driveroneway::OneWaySendRequest, 4>::Equal(this, &other);
}

::test_driveroneway::OneWaySendRequest::Storage_ test_driveroneway::OneWaySendRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.payload)};
}
const ::test_driveroneway::Payload&
test_driveroneway::OneWaySendRequest::payload() const {
  return storage_.payload;
}

::test_driveroneway::Payload& ::test_driveroneway::OneWaySendRequest::payload() {
  return storage_.payload;
}

::test_driveroneway::OneWaySendRequest& ::test_driveroneway::OneWaySendRequest::payload(::test_driveroneway::Payload value) {
  storage_.payload = std::move(value);
  return *this;
}

#pragma clang diagnostic pop
