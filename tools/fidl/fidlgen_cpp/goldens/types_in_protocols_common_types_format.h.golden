// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#pragma once

#include <fidl/test.typesinprotocols/cpp/common_types.h>

#if defined(__cpp_lib_format) && __cplusplus >= 202002L && defined(__Fuchsia__)
#include <format>

template <>
struct std::formatter<::test_typesinprotocols::Bits> {
  constexpr auto parse(auto& ctx) { return ctx.begin(); }
  auto format(const ::test_typesinprotocols::Bits& value, std::format_context& ctx) const {
    auto out = ctx.out();
    out = std::format_to(out, "test_typesinprotocols::Bits(");
    bool first = true;
    if (value & ::test_typesinprotocols::Bits::kVal) {
      if (!first) *out++ = '|';
      first = false;
      out = std::format_to(out, "kVal");
    }
    if (value.has_unknown_bits()) {
      if (!first) *out++ = '|';
      out = std::format_to(out, "{}", static_cast<uint32_t>(value.unknown_bits()));
    }
    *out++ = ')';
    return out;
  }
};
template <>
struct std::formatter<::test_typesinprotocols::Enum> {
  constexpr auto parse(auto& ctx) { return ctx.begin(); }
  auto format(const ::test_typesinprotocols::Enum& value, std::format_context& ctx) const {
    std::string_view output;
    switch (value) {
      case ::test_typesinprotocols::Enum::kVal:
        output = "kVal";
        break;
      default:
        output = "UNKNOWN";
    }
    return std::format_to(ctx.out(), "test_typesinprotocols::Enum::{}", output);
  }
};

#endif
