// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#pragma once

#include <cinttypes>
#include <string>

#include <lib/fidl/cpp/natural_types.h>
#include <lib/fidl/cpp/natural_coding_traits.h>

#include <fidl/test.unknowninteractions/cpp/markers.h>
#include <fidl/test.unknowninteractions/cpp/common_types.h>

#ifdef __Fuchsia__

  #include <lib/zx/channel.h>
  #include <lib/fidl_driver/cpp/natural_types.h>

#endif  // __Fuchsia__

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

namespace test_unknowninteractions {

class UnknownInteractionsProtocolStrictTwoWayFieldsResponse;

class UnknownInteractionsProtocolStrictTwoWayErrResponse;

class UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse;

class UnknownInteractionsProtocolFlexibleTwoWayResponse;

class UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse;

class UnknownInteractionsProtocolFlexibleTwoWayErrResponse;

class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse;

class UnknownInteractionsProtocolStrictEventFieldsRequest;

class UnknownInteractionsProtocolFlexibleEventFieldsRequest;

class UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse;

class UnknownInteractionsAjarProtocolStrictTwoWayErrResponse;

class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse;

class UnknownInteractionsAjarProtocolStrictEventFieldsRequest;

class UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest;

class UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse;

class UnknownInteractionsClosedProtocolStrictTwoWayErrResponse;

class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse;

class UnknownInteractionsClosedProtocolStrictEventFieldsRequest;

class UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse;

class UnknownInteractionsDriverProtocolStrictTwoWayErrResponse;

class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse;

class UnknownInteractionsDriverProtocolFlexibleTwoWayResponse;

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse;

class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse;

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse;

class UnknownInteractionsProtocolStrictTwoWayTableResponse;

class UnknownInteractionsProtocolStrictTwoWayTableErrResponse;

class UnknownInteractionsProtocolFlexibleTwoWayTableResponse;

class UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse;

class UnknownInteractionsProtocolStrictEventTableRequest;

class UnknownInteractionsProtocolFlexibleEventTableRequest;

class UnknownInteractionsAjarProtocolStrictTwoWayTableResponse;

class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse;

class UnknownInteractionsAjarProtocolStrictEventTableRequest;

class UnknownInteractionsAjarProtocolFlexibleEventTableRequest;

class UnknownInteractionsClosedProtocolStrictTwoWayTableResponse;

class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse;

class UnknownInteractionsClosedProtocolStrictEventTableRequest;

class UnknownInteractionsDriverProtocolStrictTwoWayTableResponse;

class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse;

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse;

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse;

class UnknownInteractionsProtocolStrictTwoWayUnionResponse;

class UnknownInteractionsProtocolStrictTwoWayErrResult;

class UnknownInteractionsProtocolStrictTwoWayFieldsErrResult;

class UnknownInteractionsProtocolStrictTwoWayUnionErrResponse;

class UnknownInteractionsProtocolStrictTwoWayUnionErrResult;

class UnknownInteractionsProtocolStrictTwoWayTableErrResult;

class UnknownInteractionsProtocolFlexibleTwoWayResult;

class UnknownInteractionsProtocolFlexibleTwoWayFieldsResult;

class UnknownInteractionsProtocolFlexibleTwoWayUnionResponse;

class UnknownInteractionsProtocolFlexibleTwoWayUnionResult;

class UnknownInteractionsProtocolFlexibleTwoWayTableResult;

class UnknownInteractionsProtocolFlexibleTwoWayErrResult;

class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult;

class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse;

class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult;

class UnknownInteractionsProtocolFlexibleTwoWayTableErrResult;

class UnknownInteractionsProtocolStrictEventUnionRequest;

class UnknownInteractionsProtocolFlexibleEventUnionRequest;

class UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse;

class UnknownInteractionsAjarProtocolStrictTwoWayErrResult;

class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult;

class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse;

class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult;

class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult;

class UnknownInteractionsAjarProtocolStrictEventUnionRequest;

class UnknownInteractionsAjarProtocolFlexibleEventUnionRequest;

class UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse;

class UnknownInteractionsClosedProtocolStrictTwoWayErrResult;

class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult;

class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse;

class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult;

class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult;

class UnknownInteractionsClosedProtocolStrictEventUnionRequest;

class UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse;

class UnknownInteractionsDriverProtocolStrictTwoWayErrResult;

class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult;

class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse;

class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult;

class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult;

class UnknownInteractionsDriverProtocolFlexibleTwoWayResult;

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult;

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse;

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult;

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult;

class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult;

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult;

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse;

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult;

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult;

class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult;

class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult;

class UnknownInteractionsProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayFieldsResponse(UnknownInteractionsProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictTwoWayUnionResponse(UnknownInteractionsProtocolStrictTwoWayUnionResponse&& other) noexcept;
  UnknownInteractionsProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsProtocolStrictTwoWayUnionResponse&& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayUnionResponse(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag Which() const;
    static UnknownInteractionsProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsProtocolStrictTwoWayUnionResponse& some_field(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableResponse(UnknownInteractionsProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayTableResponse(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayErrResponse(UnknownInteractionsProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayErrResponse(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayErrResult(UnknownInteractionsProtocolStrictTwoWayErrResult&& other) noexcept;
  UnknownInteractionsProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayErrResult&& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayErrResult(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag Which() const;
    static UnknownInteractionsProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse value);
    static UnknownInteractionsProtocolStrictTwoWayErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsProtocolStrictTwoWayErrResult& err(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag Which() const;
    static UnknownInteractionsProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse value);
    static UnknownInteractionsProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& err(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag Which() const;
    static UnknownInteractionsProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayUnionErrResult(UnknownInteractionsProtocolStrictTwoWayUnionErrResult&& other) noexcept;
  UnknownInteractionsProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayUnionErrResult&& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag Which() const;
    static UnknownInteractionsProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse value);
    static UnknownInteractionsProtocolStrictTwoWayUnionErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsProtocolStrictTwoWayUnionErrResult& err(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse(UnknownInteractionsProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayTableErrResult(UnknownInteractionsProtocolStrictTwoWayTableErrResult&& other) noexcept;
  UnknownInteractionsProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayTableErrResult&& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayTableErrResult(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag Which() const;
    static UnknownInteractionsProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse value);
    static UnknownInteractionsProtocolStrictTwoWayTableErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsProtocolStrictTwoWayTableErrResult& err(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayResponse(UnknownInteractionsProtocolFlexibleTwoWayResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayResponse(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsProtocolFlexibleTwoWayResponse& __reserved(uint8_t value);

  UnknownInteractionsProtocolFlexibleTwoWayResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsProtocolFlexibleTwoWayResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayResult(UnknownInteractionsProtocolFlexibleTwoWayResult&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayResult&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayResult(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse value);
    static UnknownInteractionsProtocolFlexibleTwoWayResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsProtocolFlexibleTwoWayFieldsResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(UnknownInteractionsProtocolFlexibleTwoWayFieldsResult&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsResult&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse value);
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(UnknownInteractionsProtocolFlexibleTwoWayUnionResponse&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionResponse&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayUnionResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayUnionResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionResult(UnknownInteractionsProtocolFlexibleTwoWayUnionResult&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayUnionResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionResult&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayUnionResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayUnionResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse value);
    static UnknownInteractionsProtocolFlexibleTwoWayUnionResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayUnionResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse() noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse(UnknownInteractionsProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayTableResponse(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayTableResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolFlexibleTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolFlexibleTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsProtocolFlexibleTwoWayTableResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayTableResult(UnknownInteractionsProtocolFlexibleTwoWayTableResult&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayTableResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableResult&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayTableResult(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayTableResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayTableResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayTableResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse value);
    static UnknownInteractionsProtocolFlexibleTwoWayTableResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayTableResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayTableResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayErrResponse(UnknownInteractionsProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsProtocolFlexibleTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsProtocolFlexibleTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsProtocolFlexibleTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayErrResult(UnknownInteractionsProtocolFlexibleTwoWayErrResult&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayErrResult&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayErrResult(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse value);
    static UnknownInteractionsProtocolFlexibleTwoWayErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayErrResult& err(int32_t value);
    static UnknownInteractionsProtocolFlexibleTwoWayErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<3, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayErrResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse value);
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& err(int32_t value);
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<3, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse value);
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& err(int32_t value);
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<3, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsProtocolFlexibleTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(UnknownInteractionsProtocolFlexibleTwoWayTableErrResult&& other) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableErrResult&& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse value);
    static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& err(int32_t value);
    static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<3, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolStrictEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventFieldsRequest(UnknownInteractionsProtocolStrictEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventFieldsRequest& operator=(UnknownInteractionsProtocolStrictEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventFieldsRequest(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) noexcept;
    UnknownInteractionsProtocolStrictEventFieldsRequest& operator=(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolStrictEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsProtocolStrictEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictEventUnionRequest(UnknownInteractionsProtocolStrictEventUnionRequest&& other) noexcept;
  UnknownInteractionsProtocolStrictEventUnionRequest& operator=(UnknownInteractionsProtocolStrictEventUnionRequest&& other) noexcept;
    UnknownInteractionsProtocolStrictEventUnionRequest(const UnknownInteractionsProtocolStrictEventUnionRequest& other) noexcept;
    UnknownInteractionsProtocolStrictEventUnionRequest& operator=(const UnknownInteractionsProtocolStrictEventUnionRequest& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictEventUnionRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictEventUnionRequest& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag Which() const;
    static UnknownInteractionsProtocolStrictEventUnionRequest WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsProtocolStrictEventUnionRequest& some_field(int32_t value);

  UnknownInteractionsProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventUnionRequest(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolStrictEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsProtocolStrictEventTableRequest() noexcept = default;
  UnknownInteractionsProtocolStrictEventTableRequest(UnknownInteractionsProtocolStrictEventTableRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventTableRequest& operator=(UnknownInteractionsProtocolStrictEventTableRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventTableRequest(const UnknownInteractionsProtocolStrictEventTableRequest& other) noexcept;
    UnknownInteractionsProtocolStrictEventTableRequest& operator=(const UnknownInteractionsProtocolStrictEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictEventTableRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolStrictEventTableRequest& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolStrictEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsProtocolFlexibleEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventFieldsRequest(UnknownInteractionsProtocolFlexibleEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventFieldsRequest& operator=(UnknownInteractionsProtocolFlexibleEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventFieldsRequest(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) noexcept;
    UnknownInteractionsProtocolFlexibleEventFieldsRequest& operator=(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolFlexibleEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsProtocolFlexibleEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleEventUnionRequest(UnknownInteractionsProtocolFlexibleEventUnionRequest&& other) noexcept;
  UnknownInteractionsProtocolFlexibleEventUnionRequest& operator=(UnknownInteractionsProtocolFlexibleEventUnionRequest&& other) noexcept;
    UnknownInteractionsProtocolFlexibleEventUnionRequest(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) noexcept;
    UnknownInteractionsProtocolFlexibleEventUnionRequest& operator=(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag Which() const;
    static UnknownInteractionsProtocolFlexibleEventUnionRequest WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsProtocolFlexibleEventUnionRequest& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventUnionRequest(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsProtocolFlexibleEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsProtocolFlexibleEventTableRequest() noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableRequest(UnknownInteractionsProtocolFlexibleEventTableRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableRequest& operator=(UnknownInteractionsProtocolFlexibleEventTableRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventTableRequest(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) noexcept;
    UnknownInteractionsProtocolFlexibleEventTableRequest& operator=(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsProtocolFlexibleEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolFlexibleEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse&& other) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse&& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag Which() const;
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(UnknownInteractionsAjarProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsAjarProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsAjarProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayErrResult(UnknownInteractionsAjarProtocolStrictTwoWayErrResult&& other) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayErrResult&& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag Which() const;
    static UnknownInteractionsAjarProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse value);
    static UnknownInteractionsAjarProtocolStrictTwoWayErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayErrResult& err(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag Which() const;
    static UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse value);
    static UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& err(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag Which() const;
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult&& other) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult&& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag Which() const;
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse value);
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& err(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult&& other) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult&& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag Which() const;
    static UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse value);
    static UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& err(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarProtocolStrictEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventFieldsRequest(UnknownInteractionsAjarProtocolStrictEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventFieldsRequest& operator=(UnknownInteractionsAjarProtocolStrictEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) noexcept;
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarProtocolStrictEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsAjarProtocolStrictEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictEventUnionRequest(UnknownInteractionsAjarProtocolStrictEventUnionRequest&& other) noexcept;
  UnknownInteractionsAjarProtocolStrictEventUnionRequest& operator=(UnknownInteractionsAjarProtocolStrictEventUnionRequest&& other) noexcept;
    UnknownInteractionsAjarProtocolStrictEventUnionRequest(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) noexcept;
    UnknownInteractionsAjarProtocolStrictEventUnionRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag Which() const;
    static UnknownInteractionsAjarProtocolStrictEventUnionRequest WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsAjarProtocolStrictEventUnionRequest& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventUnionRequest(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarProtocolStrictEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolStrictEventTableRequest() noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableRequest(UnknownInteractionsAjarProtocolStrictEventTableRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableRequest& operator=(UnknownInteractionsAjarProtocolStrictEventTableRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventTableRequest(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) noexcept;
    UnknownInteractionsAjarProtocolStrictEventTableRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarProtocolStrictEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsAjarProtocolFlexibleEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(UnknownInteractionsAjarProtocolFlexibleEventUnionRequest&& other) noexcept;
  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventUnionRequest&& other) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag Which() const;
    static UnknownInteractionsAjarProtocolFlexibleEventUnionRequest WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& some_field(int32_t value);

  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarProtocolFlexibleEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest() noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest(UnknownInteractionsAjarProtocolFlexibleEventTableRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventTableRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventTableRequest(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventTableRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarProtocolFlexibleEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolFlexibleEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse&& other) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse&& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag Which() const;
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(UnknownInteractionsClosedProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsClosedProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsClosedProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayErrResult(UnknownInteractionsClosedProtocolStrictTwoWayErrResult&& other) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayErrResult&& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag Which() const;
    static UnknownInteractionsClosedProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse value);
    static UnknownInteractionsClosedProtocolStrictTwoWayErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayErrResult& err(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag Which() const;
    static UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse value);
    static UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& err(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag Which() const;
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult&& other) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult&& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag Which() const;
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse value);
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& err(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult&& other) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult&& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag Which() const;
    static UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse value);
    static UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& err(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedProtocolStrictEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventFieldsRequest(UnknownInteractionsClosedProtocolStrictEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventFieldsRequest& operator=(UnknownInteractionsClosedProtocolStrictEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) noexcept;
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedProtocolStrictEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsClosedProtocolStrictEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictEventUnionRequest(UnknownInteractionsClosedProtocolStrictEventUnionRequest&& other) noexcept;
  UnknownInteractionsClosedProtocolStrictEventUnionRequest& operator=(UnknownInteractionsClosedProtocolStrictEventUnionRequest&& other) noexcept;
    UnknownInteractionsClosedProtocolStrictEventUnionRequest(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) noexcept;
    UnknownInteractionsClosedProtocolStrictEventUnionRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag Which() const;
    static UnknownInteractionsClosedProtocolStrictEventUnionRequest WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsClosedProtocolStrictEventUnionRequest& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventUnionRequest(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedProtocolStrictEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsClosedProtocolStrictEventTableRequest() noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableRequest(UnknownInteractionsClosedProtocolStrictEventTableRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableRequest& operator=(UnknownInteractionsClosedProtocolStrictEventTableRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventTableRequest(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) noexcept;
    UnknownInteractionsClosedProtocolStrictEventTableRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedProtocolStrictEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse&& other) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse&& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag Which() const;
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(UnknownInteractionsDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsDriverProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsDriverProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayErrResult(UnknownInteractionsDriverProtocolStrictTwoWayErrResult&& other) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayErrResult&& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse value);
    static UnknownInteractionsDriverProtocolStrictTwoWayErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayErrResult& err(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse value);
    static UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& err(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag Which() const;
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse value);
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& err(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult&& other) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult&& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse value);
    static UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& err(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& __reserved(uint8_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayResult(UnknownInteractionsDriverProtocolFlexibleTwoWayResult&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayResult&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse() noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& err(int32_t value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<3, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& err(int32_t value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<3, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& err(int32_t value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<3, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult&& other) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult&& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag Which() const;
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& err(int32_t value);
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val);
    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const;
    ::fidl::internal::UnionMemberView<3, Storage_> framework_err();

    // Sets the union to hold the framework_err member.
    //

    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& framework_err(::fidl::internal::FrameworkErr value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse&& other) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse&& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag Which() const;
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& some_field(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult&& other) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult&& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag Which() const;
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse value);
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& err(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag Which() const;
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse value);
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& err(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag Which() const;
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag Which() const;
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse value);
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& err(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult&& other) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult&& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag Which() const;
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse value);
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& err(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse&& other) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse&& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag Which() const;
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& some_field(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) const noexcept;

      uint8_t
    __reserved() const;

    uint8_t& __reserved();

    // Setter for __reserved.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult&& other) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult&& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag Which() const;
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse value);
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& err(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept;

      int32_t
    some_field() const;

    int32_t& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag Which() const;
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse value);
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& err(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept;
  bool IsUnknown() const;

  ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag Which() const;
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val);
    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const;
    ::fidl::internal::UnionMemberView<1, Storage_> some_field();

    // Sets the union to hold the some_field member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag Which() const;
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse value);
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& err(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index);

};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept;

  bool IsEmpty() const;

    const std::optional<int32_t>& some_field() const;
    ::std::optional<int32_t>& some_field();

    // Setter for some_field.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/42172795): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult&& other) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult&& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) const noexcept;
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) const noexcept;

  ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag Which() const;
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse val);
    const ::fidl::internal::UnionMemberView<1, Storage_> response() const;
    ::fidl::internal::UnionMemberView<1, Storage_> response();

    // Sets the union to hold the response member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse value);
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult WithErr(int32_t val);
    const ::fidl::internal::UnionMemberView<2, Storage_> err() const;
    ::fidl::internal::UnionMemberView<2, Storage_> err();

    // Sets the union to hold the err member.
    //

    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& err(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage);

  static size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag tag);
  static std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index);

};

}  // namespace test_unknowninteractions
namespace fidl {

  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4> {};

  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> {};

  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> {};
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> {};

#pragma clang diagnostic pop

}  // namespace fidl

