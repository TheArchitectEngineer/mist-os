// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#pragma once

#include <fidl/test.bindingsdenylist/cpp/markers.h>
#include <fidl/test.bindingsdenylist/cpp/natural_types.h>
#include <fidl/test.bindingsdenylist/cpp/wire_types.h>
#ifdef __Fuchsia__
#include <fidl/test.bindingsdenylist/cpp/natural_messaging.h>
#include <fidl/test.bindingsdenylist/cpp/wire_messaging.h>

#endif  // __Fuchsia__
#include <fidl/test.dependent/cpp/type_conversions.h>
#include <lib/fidl/cpp/wire_natural_conversions.h>
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

namespace fidl {
namespace internal {

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartRequest, ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartRequest> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartRequest ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartRequest src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartRequest ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartRequest src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartRequest> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartRequest;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyDartRequest> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartRequest;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResponse, ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResponse> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResponse ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResponse src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResponse ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResponse src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResponse> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResponse;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResponse> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResponse;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoRequest, ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoRequest> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoRequest ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoRequest src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoRequest ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoRequest src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoRequest> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoRequest;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyGoRequest> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoRequest;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResponse, ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResponse> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResponse ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResponse src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResponse ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResponse src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResponse> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResponse;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResponse> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResponse;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonRequest, ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonRequest> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonRequest ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonRequest src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonRequest ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonRequest src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonRequest> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonRequest;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonRequest> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonRequest;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResponse, ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResponse> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResponse ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResponse src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResponse ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResponse src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResponse> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResponse;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResponse> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResponse;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustRequest, ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustRequest> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustRequest ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustRequest src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustRequest ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustRequest src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustRequest> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustRequest;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyRustRequest> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustRequest;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResponse, ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResponse> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResponse ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResponse src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResponse ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResponse src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResponse> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResponse;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResponse> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResponse;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerRequest, ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerRequest> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerRequest ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerRequest src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerRequest ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerRequest src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerRequest> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerRequest;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerRequest> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerRequest;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResponse, ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResponse> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResponse ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResponse src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResponse ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResponse src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResponse> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResponse;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResponse> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResponse;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::MemberOnlyAppearsInImportingLibrary, ::test_bindingsdenylist::MemberOnlyAppearsInImportingLibrary> {
  static ::test_bindingsdenylist::MemberOnlyAppearsInImportingLibrary ToNatural(::test_bindingsdenylist::wire::MemberOnlyAppearsInImportingLibrary src);
  static ::test_bindingsdenylist::wire::MemberOnlyAppearsInImportingLibrary ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::MemberOnlyAppearsInImportingLibrary src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::MemberOnlyAppearsInImportingLibrary> {
  using type = ::test_bindingsdenylist::MemberOnlyAppearsInImportingLibrary;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::MemberOnlyAppearsInImportingLibrary> {
  using type = ::test_bindingsdenylist::wire::MemberOnlyAppearsInImportingLibrary;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::OnlyAppearsInImportingLibrary, ::test_bindingsdenylist::OnlyAppearsInImportingLibrary> {
  static ::test_bindingsdenylist::OnlyAppearsInImportingLibrary ToNatural(::test_bindingsdenylist::wire::OnlyAppearsInImportingLibrary src);
  static ::test_bindingsdenylist::wire::OnlyAppearsInImportingLibrary ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::OnlyAppearsInImportingLibrary src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::OnlyAppearsInImportingLibrary> {
  using type = ::test_bindingsdenylist::OnlyAppearsInImportingLibrary;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::OnlyAppearsInImportingLibrary> {
  using type = ::test_bindingsdenylist::wire::OnlyAppearsInImportingLibrary;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::OnlyLlcpp, ::test_bindingsdenylist::OnlyLlcpp> {
  static ::test_bindingsdenylist::OnlyLlcpp ToNatural(::test_bindingsdenylist::wire::OnlyLlcpp src);
  static ::test_bindingsdenylist::wire::OnlyLlcpp ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::OnlyLlcpp src);
};

template <>
struct WireNaturalConversionTraits<::fidl::WireOptional<::test_bindingsdenylist::wire::OnlyLlcpp>, std::unique_ptr<::test_bindingsdenylist::OnlyLlcpp>> {
  static std::unique_ptr<::test_bindingsdenylist::OnlyLlcpp> ToNatural(::fidl::WireOptional<::test_bindingsdenylist::wire::OnlyLlcpp> src);
  static ::fidl::WireOptional<::test_bindingsdenylist::wire::OnlyLlcpp> ToWire(fidl::AnyArena& arena, std::unique_ptr<::test_bindingsdenylist::OnlyLlcpp> src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::OnlyLlcpp> {
  using type = ::test_bindingsdenylist::OnlyLlcpp;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::OnlyLlcpp> {
  using type = ::test_bindingsdenylist::wire::OnlyLlcpp;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResult, ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResult> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResult ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResult src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResult ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResult src);
};

template <>
struct WireNaturalConversionTraits<::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResult>, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResult>> {
  static std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResult> ToNatural(::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResult> src);
  static ::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResult> ToWire(fidl::AnyArena& arena, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResult> src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResult> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResult;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyDartResult> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyDartResult;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResult, ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResult> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResult ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResult src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResult ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResult src);
};

template <>
struct WireNaturalConversionTraits<::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResult>, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResult>> {
  static std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResult> ToNatural(::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResult> src);
  static ::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResult> ToWire(fidl::AnyArena& arena, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResult> src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResult> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResult;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyGoResult> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyGoResult;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResult, ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResult> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResult ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResult src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResult ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResult src);
};

template <>
struct WireNaturalConversionTraits<::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResult>, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResult>> {
  static std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResult> ToNatural(::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResult> src);
  static ::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResult> ToWire(fidl::AnyArena& arena, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResult> src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResult> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResult;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyPythonResult> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyPythonResult;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResult, ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResult> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResult ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResult src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResult ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResult src);
};

template <>
struct WireNaturalConversionTraits<::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResult>, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResult>> {
  static std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResult> ToNatural(::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResult> src);
  static ::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResult> ToWire(fidl::AnyArena& arena, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResult> src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResult> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResult;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenyRustResult> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenyRustResult;
};

template <>
struct WireNaturalConversionTraits<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResult, ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResult> {
  static ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResult ToNatural(::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResult src);
  static ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResult ToWire(fidl::AnyArena& arena, ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResult src);
};

template <>
struct WireNaturalConversionTraits<::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResult>, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResult>> {
  static std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResult> ToNatural(::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResult> src);
  static ::fidl::WireOptional<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResult> ToWire(fidl::AnyArena& arena, std::unique_ptr<::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResult> src);
};

template <>
struct NaturalTypeForWireType<::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResult> {
  using type = ::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResult;
};
template <>
struct WireTypeForNaturalType<::test_bindingsdenylist::DenyEachBindingOnlyDenySyzkallerResult> {
  using type = ::test_bindingsdenylist::wire::DenyEachBindingOnlyDenySyzkallerResult;
};

#ifdef __Fuchsia__

template <>
struct WireNaturalConversionTraits<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart>, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart>> {
  static ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart> ToNatural(::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart> src);
  static ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart> ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart> src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart>> {
  using type = ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart>;
};
template <>
struct WireTypeForNaturalType<::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart>> {
  using type = ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyDart>;
};

template <>
struct WireNaturalConversionTraits<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo>, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo>> {
  static ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo> ToNatural(::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo> src);
  static ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo> ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo> src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo>> {
  using type = ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo>;
};
template <>
struct WireTypeForNaturalType<::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo>> {
  using type = ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyGo>;
};

template <>
struct WireNaturalConversionTraits<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython>, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython>> {
  static ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython> ToNatural(::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython> src);
  static ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython> ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython> src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython>> {
  using type = ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython>;
};
template <>
struct WireTypeForNaturalType<::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython>> {
  using type = ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyPython>;
};

template <>
struct WireNaturalConversionTraits<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust>, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust>> {
  static ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust> ToNatural(::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust> src);
  static ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust> ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust> src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust>> {
  using type = ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust>;
};
template <>
struct WireTypeForNaturalType<::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust>> {
  using type = ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenyRust>;
};

template <>
struct WireNaturalConversionTraits<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller>, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller>> {
  static ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller> ToNatural(::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller> src);
  static ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller> ToWire(fidl::AnyArena& arena, ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller> src);
};

template <>
struct NaturalTypeForWireType<::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller>> {
  using type = ::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller>;
};
template <>
struct WireTypeForNaturalType<::fidl::Response<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller>> {
  using type = ::fidl::WireResponse<::test_bindingsdenylist::DenyEachBinding::OnlyDenySyzkaller>;
};

#endif  // __Fuchsia__
#pragma clang diagnostic pop

}  // namespace internal
}  // namespace fidl
