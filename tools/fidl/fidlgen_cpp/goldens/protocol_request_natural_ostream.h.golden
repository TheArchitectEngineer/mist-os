// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#pragma once

#include <fidl/test.protocolrequest/cpp/natural_types.h>
#include <lib/fidl/cpp/natural_ostream.h>

#include <iostream>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

#ifdef __Fuchsia__

template <>
struct fidl::ostream::Formatter<::test_protocolrequest::ParentGetChildResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocolrequest::ParentGetChildResponse& value);
};

template <>
struct fidl::ostream::Formatter<::test_protocolrequest::ParentGetChildRequestResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_protocolrequest::ParentGetChildRequestResponse& value);
};

template <>
struct fidl::ostream::Formatter<::test_protocolrequest::ParentTakeChildRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocolrequest::ParentTakeChildRequest& value);
};

template <>
struct fidl::ostream::Formatter<::test_protocolrequest::ParentTakeChildRequestRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_protocolrequest::ParentTakeChildRequestRequest& value);
};

#endif  // __Fuchsia__

namespace test_protocolrequest {

#ifdef __Fuchsia__

std::ostream& operator<<(std::ostream& os, const ::test_protocolrequest::ParentGetChildResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocolrequest::ParentGetChildRequestResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocolrequest::ParentTakeChildRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_protocolrequest::ParentTakeChildRequestRequest& value);

#endif  // __Fuchsia__

}  // namespace test_protocolrequest

#ifdef __Fuchsia__

template <>
struct fidl::ostream::Formatter<::fidl::ClientEnd<::test_protocolrequest::Child>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ClientEnd<::test_protocolrequest::Child>& value);
};

template <>
struct fidl::ostream::Formatter<::fidl::ServerEnd<::test_protocolrequest::Child>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ServerEnd<::test_protocolrequest::Child>& value);
};
template <>
struct fidl::ostream::Formatter<::fidl::ClientEnd<::test_protocolrequest::Parent>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ClientEnd<::test_protocolrequest::Parent>& value);
};

template <>
struct fidl::ostream::Formatter<::fidl::ServerEnd<::test_protocolrequest::Parent>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ServerEnd<::test_protocolrequest::Parent>& value);
};

std::ostream& operator<<(std::ostream& os, const ::fidl::ClientEnd<::test_protocolrequest::Child>& value);

std::ostream& operator<<(std::ostream& os, const ::fidl::ServerEnd<::test_protocolrequest::Child>& value);
std::ostream& operator<<(std::ostream& os, const ::fidl::ClientEnd<::test_protocolrequest::Parent>& value);

std::ostream& operator<<(std::ostream& os, const ::fidl::ServerEnd<::test_protocolrequest::Parent>& value);

#endif  // __Fuchsia__

#pragma clang diagnostic pop
