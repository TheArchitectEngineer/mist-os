// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.protocollayoutssamelibrary/cpp/natural_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

::test_protocollayoutssamelibrary::TablePayload::TablePayload(::test_protocollayoutssamelibrary::TablePayload::Storage_ storage) noexcept : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::TablePayload::TablePayload(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : TablePayload(Storage_{}) {}

::test_protocollayoutssamelibrary::TablePayload::TablePayload(const ::test_protocollayoutssamelibrary::TablePayload& other) noexcept : TablePayload(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::TablePayload& ::test_protocollayoutssamelibrary::TablePayload::operator=(const ::test_protocollayoutssamelibrary::TablePayload& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocollayoutssamelibrary::TablePayload::operator==(const TablePayload& other) const noexcept {
  return ::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::TablePayload>::Equal(this, &other);
}
bool test_protocollayoutssamelibrary::TablePayload::operator!=(const TablePayload& other) const noexcept {
  return !::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::TablePayload>::Equal(this, &other);
}

::test_protocollayoutssamelibrary::TablePayload::Storage_ test_protocollayoutssamelibrary::TablePayload::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a)};
}

bool test_protocollayoutssamelibrary::TablePayload::IsEmpty() const {
  return !(storage_.a.has_value());
}
const std::optional<uint16_t>& test_protocollayoutssamelibrary::TablePayload::a() const {
  return storage_.a;
}

::std::optional<uint16_t>& test_protocollayoutssamelibrary::TablePayload::a() {
  return storage_.a;
}

::test_protocollayoutssamelibrary::TablePayload& test_protocollayoutssamelibrary::TablePayload::a(std::optional<uint16_t> value) {
  storage_.a = std::move(value);
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::ComposedProtocolOneWayAnonComposedRequest(::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::Storage_ storage) noexcept : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::ComposedProtocolOneWayAnonComposedRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ComposedProtocolOneWayAnonComposedRequest(Storage_{}) {}

::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::ComposedProtocolOneWayAnonComposedRequest(const ::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest& other) noexcept : ComposedProtocolOneWayAnonComposedRequest(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest& ::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::operator=(const ::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::operator==(const ComposedProtocolOneWayAnonComposedRequest& other) const noexcept {
  return ::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest>::Equal(this, &other);
}
bool test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::operator!=(const ComposedProtocolOneWayAnonComposedRequest& other) const noexcept {
  return !::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest>::Equal(this, &other);
}

::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::Storage_ test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a)};
}

bool test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::IsEmpty() const {
  return !(storage_.a.has_value());
}
const std::optional<uint16_t>& test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::a() const {
  return storage_.a;
}

::std::optional<uint16_t>& test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::a() {
  return storage_.a;
}

::test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest& test_protocollayoutssamelibrary::ComposedProtocolOneWayAnonComposedRequest::a(std::optional<uint16_t> value) {
  storage_.a = std::move(value);
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::ComposedProtocolTwoWayAnonComposedResponse(::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::Storage_ storage) noexcept : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::ComposedProtocolTwoWayAnonComposedResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ComposedProtocolTwoWayAnonComposedResponse(Storage_{}) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::ComposedProtocolTwoWayAnonComposedResponse(const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse& other) noexcept : ComposedProtocolTwoWayAnonComposedResponse(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse& ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::operator=(const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::operator==(const ComposedProtocolTwoWayAnonComposedResponse& other) const noexcept {
  return ::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse>::Equal(this, &other);
}
bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::operator!=(const ComposedProtocolTwoWayAnonComposedResponse& other) const noexcept {
  return !::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse>::Equal(this, &other);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::Storage_ test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a)};
}

bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::IsEmpty() const {
  return !(storage_.a.has_value());
}
const std::optional<uint16_t>& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::a() const {
  return storage_.a;
}

::std::optional<uint16_t>& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::a() {
  return storage_.a;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedResponse::a(std::optional<uint16_t> value) {
  storage_.a = std::move(value);
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::ComposedProtocolTwoWayAnonComposedWithErrorRequest(::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::Storage_ storage) noexcept : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::ComposedProtocolTwoWayAnonComposedWithErrorRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ComposedProtocolTwoWayAnonComposedWithErrorRequest(Storage_{}) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::ComposedProtocolTwoWayAnonComposedWithErrorRequest(const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest& other) noexcept : ComposedProtocolTwoWayAnonComposedWithErrorRequest(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest& ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::operator=(const ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::operator==(const ComposedProtocolTwoWayAnonComposedWithErrorRequest& other) const noexcept {
  return ::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest>::Equal(this, &other);
}
bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::operator!=(const ComposedProtocolTwoWayAnonComposedWithErrorRequest& other) const noexcept {
  return !::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest>::Equal(this, &other);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::Storage_ test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a)};
}

bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::IsEmpty() const {
  return !(storage_.a.has_value());
}
const std::optional<uint16_t>& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::a() const {
  return storage_.a;
}

::std::optional<uint16_t>& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::a() {
  return storage_.a;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorRequest::a(std::optional<uint16_t> value) {
  storage_.a = std::move(value);
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::MainProtocolOneWayAnonRequest(::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::Storage_ storage) noexcept : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::MainProtocolOneWayAnonRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : MainProtocolOneWayAnonRequest(Storage_{}) {}

::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::MainProtocolOneWayAnonRequest(const ::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest& other) noexcept : MainProtocolOneWayAnonRequest(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest& ::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::operator=(const ::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::operator==(const MainProtocolOneWayAnonRequest& other) const noexcept {
  return ::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest>::Equal(this, &other);
}
bool test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::operator!=(const MainProtocolOneWayAnonRequest& other) const noexcept {
  return !::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest>::Equal(this, &other);
}

::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::Storage_ test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a)};
}

bool test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::IsEmpty() const {
  return !(storage_.a.has_value());
}
const std::optional<uint16_t>& test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::a() const {
  return storage_.a;
}

::std::optional<uint16_t>& test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::a() {
  return storage_.a;
}

::test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest& test_protocollayoutssamelibrary::MainProtocolOneWayAnonRequest::a(std::optional<uint16_t> value) {
  storage_.a = std::move(value);
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::MainProtocolTwoWayAnonResponse(::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::Storage_ storage) noexcept : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::MainProtocolTwoWayAnonResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : MainProtocolTwoWayAnonResponse(Storage_{}) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::MainProtocolTwoWayAnonResponse(const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse& other) noexcept : MainProtocolTwoWayAnonResponse(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse& ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::operator=(const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::operator==(const MainProtocolTwoWayAnonResponse& other) const noexcept {
  return ::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse>::Equal(this, &other);
}
bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::operator!=(const MainProtocolTwoWayAnonResponse& other) const noexcept {
  return !::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse>::Equal(this, &other);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::Storage_ test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a)};
}

bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::IsEmpty() const {
  return !(storage_.a.has_value());
}
const std::optional<uint16_t>& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::a() const {
  return storage_.a;
}

::std::optional<uint16_t>& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::a() {
  return storage_.a;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonResponse::a(std::optional<uint16_t> value) {
  storage_.a = std::move(value);
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::MainProtocolTwoWayAnonWithErrorRequest(::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::Storage_ storage) noexcept : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::MainProtocolTwoWayAnonWithErrorRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : MainProtocolTwoWayAnonWithErrorRequest(Storage_{}) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::MainProtocolTwoWayAnonWithErrorRequest(const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest& other) noexcept : MainProtocolTwoWayAnonWithErrorRequest(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest& ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::operator=(const ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::operator==(const MainProtocolTwoWayAnonWithErrorRequest& other) const noexcept {
  return ::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest>::Equal(this, &other);
}
bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::operator!=(const MainProtocolTwoWayAnonWithErrorRequest& other) const noexcept {
  return !::fidl::internal::NaturalTableCodingTraits<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest>::Equal(this, &other);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::Storage_ test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a)};
}

bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::IsEmpty() const {
  return !(storage_.a.has_value());
}
const std::optional<uint16_t>& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::a() const {
  return storage_.a;
}

::std::optional<uint16_t>& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::a() {
  return storage_.a;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorRequest::a(std::optional<uint16_t> value) {
  storage_.a = std::move(value);
  return *this;
}

::test_protocollayoutssamelibrary::UnionPayload::UnionPayload(UnionPayload&& other) noexcept : UnionPayload(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::UnionPayload& ::test_protocollayoutssamelibrary::UnionPayload::operator=(UnionPayload&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::UnionPayload::UnionPayload(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::UnionPayload::UnionPayload(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::UnionPayload::Tag test_protocollayoutssamelibrary::UnionPayload::Which() const {
  return UnionPayload::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::UnionPayload::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::UnionPayload::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::UnionPayload::Tag::kB:
      return 1;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::UnionPayload::Tag> test_protocollayoutssamelibrary::UnionPayload::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::UnionPayload::Tag::kB;
    default:
      return std::nullopt;
  }
}

::test_protocollayoutssamelibrary::UnionPayload::UnionPayload(const UnionPayload& other) noexcept : UnionPayload(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::UnionPayload& test_protocollayoutssamelibrary::UnionPayload::operator=(const UnionPayload& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::UnionPayload::operator==(const UnionPayload& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::UnionPayload::operator!=(const UnionPayload& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::UnionPayload::Storage_> test_protocollayoutssamelibrary::UnionPayload::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocollayoutssamelibrary::UnionPayload test_protocollayoutssamelibrary::UnionPayload::WithB(bool val) {
  return UnionPayload(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::UnionPayload::Storage_> test_protocollayoutssamelibrary::UnionPayload::b() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::UnionPayload::Storage_> test_protocollayoutssamelibrary::UnionPayload::b() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::UnionPayload& test_protocollayoutssamelibrary::UnionPayload::b(bool value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::ComposedProtocolTwoWayAnonComposedRequest(ComposedProtocolTwoWayAnonComposedRequest&& other) noexcept : ComposedProtocolTwoWayAnonComposedRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest& ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::operator=(ComposedProtocolTwoWayAnonComposedRequest&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::ComposedProtocolTwoWayAnonComposedRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::ComposedProtocolTwoWayAnonComposedRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::Tag test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::Which() const {
  return ComposedProtocolTwoWayAnonComposedRequest::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::Tag::kB:
      return 1;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::Tag> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::Tag::kB;
    default:
      return std::nullopt;
  }
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::ComposedProtocolTwoWayAnonComposedRequest(const ComposedProtocolTwoWayAnonComposedRequest& other) noexcept : ComposedProtocolTwoWayAnonComposedRequest(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::operator=(const ComposedProtocolTwoWayAnonComposedRequest& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::operator==(const ComposedProtocolTwoWayAnonComposedRequest& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::operator!=(const ComposedProtocolTwoWayAnonComposedRequest& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::WithB(bool val) {
  return ComposedProtocolTwoWayAnonComposedRequest(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::b() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::b() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedRequest::b(bool value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::ComposedProtocolTwoWayAnonComposedWithErrorResponse(ComposedProtocolTwoWayAnonComposedWithErrorResponse&& other) noexcept : ComposedProtocolTwoWayAnonComposedWithErrorResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse& ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::operator=(ComposedProtocolTwoWayAnonComposedWithErrorResponse&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::ComposedProtocolTwoWayAnonComposedWithErrorResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::ComposedProtocolTwoWayAnonComposedWithErrorResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::Tag test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::Which() const {
  return ComposedProtocolTwoWayAnonComposedWithErrorResponse::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::Tag::kB:
      return 1;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::Tag> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::Tag::kB;
    default:
      return std::nullopt;
  }
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::ComposedProtocolTwoWayAnonComposedWithErrorResponse(const ComposedProtocolTwoWayAnonComposedWithErrorResponse& other) noexcept : ComposedProtocolTwoWayAnonComposedWithErrorResponse(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::operator=(const ComposedProtocolTwoWayAnonComposedWithErrorResponse& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::operator==(const ComposedProtocolTwoWayAnonComposedWithErrorResponse& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::operator!=(const ComposedProtocolTwoWayAnonComposedWithErrorResponse& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::WithB(bool val) {
  return ComposedProtocolTwoWayAnonComposedWithErrorResponse(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::b() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::b() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse::b(bool value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::ComposedProtocolTwoWayAnonComposedWithErrorResult(ComposedProtocolTwoWayAnonComposedWithErrorResult&& other) noexcept : ComposedProtocolTwoWayAnonComposedWithErrorResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult& ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::operator=(ComposedProtocolTwoWayAnonComposedWithErrorResult&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::ComposedProtocolTwoWayAnonComposedWithErrorResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::ComposedProtocolTwoWayAnonComposedWithErrorResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Tag test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Which() const {
  return ComposedProtocolTwoWayAnonComposedWithErrorResult::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Tag::kResponse:
      return 1;
    case ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Tag::kErr:
      return 2;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Tag> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Tag::kResponse;
    case 2:
      return ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Tag::kErr;
    default:
      return std::nullopt;
  }
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::ComposedProtocolTwoWayAnonComposedWithErrorResult(const ComposedProtocolTwoWayAnonComposedWithErrorResult& other) noexcept : ComposedProtocolTwoWayAnonComposedWithErrorResult(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::operator=(const ComposedProtocolTwoWayAnonComposedWithErrorResult& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::operator==(const ComposedProtocolTwoWayAnonComposedWithErrorResult& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::operator!=(const ComposedProtocolTwoWayAnonComposedWithErrorResult& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::WithResponse(::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse val) {
  return ComposedProtocolTwoWayAnonComposedWithErrorResult(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::response() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::response() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::response(::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResponse value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::WithErr(uint32_t val) {
  return ComposedProtocolTwoWayAnonComposedWithErrorResult(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::err() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::err() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult& test_protocollayoutssamelibrary::ComposedProtocolTwoWayAnonComposedWithErrorResult::err(uint32_t value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::ComposedProtocolOnAnonComposedRequest(ComposedProtocolOnAnonComposedRequest&& other) noexcept : ComposedProtocolOnAnonComposedRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest& ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::operator=(ComposedProtocolOnAnonComposedRequest&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::ComposedProtocolOnAnonComposedRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::ComposedProtocolOnAnonComposedRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::Tag test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::Which() const {
  return ComposedProtocolOnAnonComposedRequest::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::Tag::kB:
      return 1;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::Tag> test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::Tag::kB;
    default:
      return std::nullopt;
  }
}

::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::ComposedProtocolOnAnonComposedRequest(const ComposedProtocolOnAnonComposedRequest& other) noexcept : ComposedProtocolOnAnonComposedRequest(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest& test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::operator=(const ComposedProtocolOnAnonComposedRequest& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::operator==(const ComposedProtocolOnAnonComposedRequest& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::operator!=(const ComposedProtocolOnAnonComposedRequest& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::Storage_> test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::WithB(bool val) {
  return ComposedProtocolOnAnonComposedRequest(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::Storage_> test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::b() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::Storage_> test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::b() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest& test_protocollayoutssamelibrary::ComposedProtocolOnAnonComposedRequest::b(bool value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::ComposedProtocolTwoWayNamedComposedWithErrorResult(ComposedProtocolTwoWayNamedComposedWithErrorResult&& other) noexcept : ComposedProtocolTwoWayNamedComposedWithErrorResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult& ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::operator=(ComposedProtocolTwoWayNamedComposedWithErrorResult&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::ComposedProtocolTwoWayNamedComposedWithErrorResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::ComposedProtocolTwoWayNamedComposedWithErrorResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Tag test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Which() const {
  return ComposedProtocolTwoWayNamedComposedWithErrorResult::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Tag::kResponse:
      return 1;
    case ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Tag::kErr:
      return 2;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Tag> test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Tag::kResponse;
    case 2:
      return ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Tag::kErr;
    default:
      return std::nullopt;
  }
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::ComposedProtocolTwoWayNamedComposedWithErrorResult(const ComposedProtocolTwoWayNamedComposedWithErrorResult& other) noexcept : ComposedProtocolTwoWayNamedComposedWithErrorResult(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult& test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::operator=(const ComposedProtocolTwoWayNamedComposedWithErrorResult& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::operator==(const ComposedProtocolTwoWayNamedComposedWithErrorResult& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::operator!=(const ComposedProtocolTwoWayNamedComposedWithErrorResult& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::WithResponse(::test_protocollayoutssamelibrary::UnionPayload val) {
  return ComposedProtocolTwoWayNamedComposedWithErrorResult(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::response() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::response() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult& test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::response(::test_protocollayoutssamelibrary::UnionPayload value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::WithErr(uint32_t val) {
  return ComposedProtocolTwoWayNamedComposedWithErrorResult(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::err() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::Storage_> test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::err() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult& test_protocollayoutssamelibrary::ComposedProtocolTwoWayNamedComposedWithErrorResult::err(uint32_t value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::MainProtocolTwoWayLocalWithErrorResult(MainProtocolTwoWayLocalWithErrorResult&& other) noexcept : MainProtocolTwoWayLocalWithErrorResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult& ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::operator=(MainProtocolTwoWayLocalWithErrorResult&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::MainProtocolTwoWayLocalWithErrorResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::MainProtocolTwoWayLocalWithErrorResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Tag test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Which() const {
  return MainProtocolTwoWayLocalWithErrorResult::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Tag::kResponse:
      return 1;
    case ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Tag::kErr:
      return 2;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Tag> test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Tag::kResponse;
    case 2:
      return ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Tag::kErr;
    default:
      return std::nullopt;
  }
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::MainProtocolTwoWayLocalWithErrorResult(const MainProtocolTwoWayLocalWithErrorResult& other) noexcept : MainProtocolTwoWayLocalWithErrorResult(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult& test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::operator=(const MainProtocolTwoWayLocalWithErrorResult& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::operator==(const MainProtocolTwoWayLocalWithErrorResult& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::operator!=(const MainProtocolTwoWayLocalWithErrorResult& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::WithResponse(::test_protocollayoutssamelibrary::UnionPayload val) {
  return MainProtocolTwoWayLocalWithErrorResult(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::response() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::response() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult& test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::response(::test_protocollayoutssamelibrary::UnionPayload value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::WithErr(uint32_t val) {
  return MainProtocolTwoWayLocalWithErrorResult(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::err() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::err() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult& test_protocollayoutssamelibrary::MainProtocolTwoWayLocalWithErrorResult::err(uint32_t value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::MainProtocolTwoWayAnonRequest(MainProtocolTwoWayAnonRequest&& other) noexcept : MainProtocolTwoWayAnonRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest& ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::operator=(MainProtocolTwoWayAnonRequest&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::MainProtocolTwoWayAnonRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::MainProtocolTwoWayAnonRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Tag test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Which() const {
  return MainProtocolTwoWayAnonRequest::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Tag::kB:
      return 1;
    default: {
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Tag> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Tag::kB;
    default:
      return ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::MainProtocolTwoWayAnonRequest(const MainProtocolTwoWayAnonRequest& other) noexcept : MainProtocolTwoWayAnonRequest(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::operator=(const MainProtocolTwoWayAnonRequest& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::operator==(const MainProtocolTwoWayAnonRequest& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::operator!=(const MainProtocolTwoWayAnonRequest& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::IsUnknown() const {
  return Which() == ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
}
::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::WithB(bool val) {
  return MainProtocolTwoWayAnonRequest(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::b() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::b() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonRequest::b(bool value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::MainProtocolTwoWayAnonWithErrorResponse(MainProtocolTwoWayAnonWithErrorResponse&& other) noexcept : MainProtocolTwoWayAnonWithErrorResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse& ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::operator=(MainProtocolTwoWayAnonWithErrorResponse&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::MainProtocolTwoWayAnonWithErrorResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::MainProtocolTwoWayAnonWithErrorResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Tag test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Which() const {
  return MainProtocolTwoWayAnonWithErrorResponse::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Tag::kB:
      return 1;
    default: {
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Tag> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Tag::kB;
    default:
      return ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::MainProtocolTwoWayAnonWithErrorResponse(const MainProtocolTwoWayAnonWithErrorResponse& other) noexcept : MainProtocolTwoWayAnonWithErrorResponse(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::operator=(const MainProtocolTwoWayAnonWithErrorResponse& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::operator==(const MainProtocolTwoWayAnonWithErrorResponse& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::operator!=(const MainProtocolTwoWayAnonWithErrorResponse& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::IsUnknown() const {
  return Which() == ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
}
::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::WithB(bool val) {
  return MainProtocolTwoWayAnonWithErrorResponse(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::b() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::b() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse::b(bool value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::MainProtocolTwoWayAnonWithErrorResult(MainProtocolTwoWayAnonWithErrorResult&& other) noexcept : MainProtocolTwoWayAnonWithErrorResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult& ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::operator=(MainProtocolTwoWayAnonWithErrorResult&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::MainProtocolTwoWayAnonWithErrorResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::MainProtocolTwoWayAnonWithErrorResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Tag test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Which() const {
  return MainProtocolTwoWayAnonWithErrorResult::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Tag::kResponse:
      return 1;
    case ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Tag::kErr:
      return 2;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Tag> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Tag::kResponse;
    case 2:
      return ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Tag::kErr;
    default:
      return std::nullopt;
  }
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::MainProtocolTwoWayAnonWithErrorResult(const MainProtocolTwoWayAnonWithErrorResult& other) noexcept : MainProtocolTwoWayAnonWithErrorResult(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::operator=(const MainProtocolTwoWayAnonWithErrorResult& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::operator==(const MainProtocolTwoWayAnonWithErrorResult& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::operator!=(const MainProtocolTwoWayAnonWithErrorResult& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::WithResponse(::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse val) {
  return MainProtocolTwoWayAnonWithErrorResult(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::response() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::response() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::response(::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResponse value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::WithErr(uint32_t val) {
  return MainProtocolTwoWayAnonWithErrorResult(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::err() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::Storage_> test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::err() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult& test_protocollayoutssamelibrary::MainProtocolTwoWayAnonWithErrorResult::err(uint32_t value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::MainProtocolOnAnonRequest(MainProtocolOnAnonRequest&& other) noexcept : MainProtocolOnAnonRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest& ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::operator=(MainProtocolOnAnonRequest&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::MainProtocolOnAnonRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::MainProtocolOnAnonRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Tag test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Which() const {
  return MainProtocolOnAnonRequest::IndexToTag(storage_->index()).value();
}

size_t test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Tag tag) {
  switch (tag) {
    case ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Tag::kB:
      return 1;
    default: {
      return 0;
    }
  }
}

std::optional<::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Tag> test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Tag::kB;
    default:
      return ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }
}

::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::MainProtocolOnAnonRequest(const MainProtocolOnAnonRequest& other) noexcept : MainProtocolOnAnonRequest(other.CloneStorage_()) {}

::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest& test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::operator=(const MainProtocolOnAnonRequest& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::operator==(const MainProtocolOnAnonRequest& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::operator!=(const MainProtocolOnAnonRequest& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Storage_> test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
bool test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::IsUnknown() const {
  return Which() == ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
}
::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::WithB(bool val) {
  return MainProtocolOnAnonRequest(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Storage_> test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::b() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::Storage_> test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::b() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocollayoutssamelibrary::MainProtocolOnAnonRequest& test_protocollayoutssamelibrary::MainProtocolOnAnonRequest::b(bool value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}

#pragma clang diagnostic pop
