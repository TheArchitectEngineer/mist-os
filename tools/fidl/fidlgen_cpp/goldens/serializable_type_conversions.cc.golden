// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.serializable/cpp/type_conversions.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

namespace fidl {
namespace internal {

::test_serializable::SerializableStruct WireNaturalConversionTraits<::test_serializable::wire::SerializableStruct, ::test_serializable::SerializableStruct>::ToNatural(::test_serializable::wire::SerializableStruct src) {
  return ::test_serializable::SerializableStruct(WireNaturalConversionTraits<uint8_t, uint8_t>::ToNatural(std::move(src.__reserved)));
}
::test_serializable::wire::SerializableStruct WireNaturalConversionTraits<::test_serializable::wire::SerializableStruct, ::test_serializable::SerializableStruct>::ToWire(fidl::AnyArena& arena, ::test_serializable::SerializableStruct src) {
  return ::test_serializable::wire::SerializableStruct{
      .__reserved = WireNaturalConversionTraits<uint8_t, uint8_t>::ToWire(arena, std::move(src.__reserved())),
  };
}
::test_serializable::SerializableTable WireNaturalConversionTraits<::test_serializable::wire::SerializableTable, ::test_serializable::SerializableTable>::ToNatural(::test_serializable::wire::SerializableTable src) {
  ::test_serializable::SerializableTable dst;

  return dst;
}
::test_serializable::wire::SerializableTable WireNaturalConversionTraits<::test_serializable::wire::SerializableTable, ::test_serializable::SerializableTable>::ToWire(fidl::AnyArena& arena, ::test_serializable::SerializableTable src) {
  auto builder = ::test_serializable::wire::SerializableTable::Builder(arena);
  return builder.Build();
}

::test_serializable::SerializableUnion WireNaturalConversionTraits<::test_serializable::wire::SerializableUnion, ::test_serializable::SerializableUnion>::ToNatural(::test_serializable::wire::SerializableUnion src) {
  switch (src.Which()) {
    case ::test_serializable::wire::SerializableUnion::Tag::kUnused:
      return ::test_serializable::SerializableUnion::WithUnused(
          WireNaturalConversionTraits<bool, bool>::ToNatural(std::move(src.unused())));
    default:
      ZX_PANIC("unknown union tag in strict union");
  }
}
::test_serializable::wire::SerializableUnion WireNaturalConversionTraits<::test_serializable::wire::SerializableUnion, ::test_serializable::SerializableUnion>::ToWire(fidl::AnyArena& arena, ::test_serializable::SerializableUnion src) {
  switch (src.Which()) {
    case ::test_serializable::SerializableUnion::Tag::kUnused:
      return ::test_serializable::wire::SerializableUnion::WithUnused(
          WireNaturalConversionTraits<bool, bool>::ToWire(arena, std::move(src.unused().value())));
  }
}

#pragma clang diagnostic pop

}  // namespace internal
}  // namespace fidl
