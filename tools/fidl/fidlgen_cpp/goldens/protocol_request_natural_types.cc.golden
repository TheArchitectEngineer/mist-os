// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.protocolrequest/cpp/natural_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

#ifdef __Fuchsia__

::test_protocolrequest::ParentGetChildResponse::ParentGetChildResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocolrequest::ParentGetChildResponse::ParentGetChildResponse(::fidl::ClientEnd<::test_protocolrequest::Child> c) noexcept
    : storage_({.c = std::move(c)}) {}

::test_protocolrequest::ParentGetChildResponse::ParentGetChildResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ParentGetChildResponse(Storage_{
                                                                                                                                         .c = {},
                                                                                                                                     }) {}
const ::fidl::ClientEnd<::test_protocolrequest::Child>&
test_protocolrequest::ParentGetChildResponse::c() const {
  return storage_.c;
}

::fidl::ClientEnd<::test_protocolrequest::Child>& ::test_protocolrequest::ParentGetChildResponse::c() {
  return storage_.c;
}

::test_protocolrequest::ParentGetChildResponse& ::test_protocolrequest::ParentGetChildResponse::c(::fidl::ClientEnd<::test_protocolrequest::Child> value) {
  storage_.c = std::move(value);
  return *this;
}

::test_protocolrequest::ParentGetChildRequestResponse::ParentGetChildRequestResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocolrequest::ParentGetChildRequestResponse::ParentGetChildRequestResponse(::fidl::ServerEnd<::test_protocolrequest::Child> r) noexcept
    : storage_({.r = std::move(r)}) {}

::test_protocolrequest::ParentGetChildRequestResponse::ParentGetChildRequestResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ParentGetChildRequestResponse(Storage_{
                                                                                                                                                       .r = {},
                                                                                                                                                   }) {}
const ::fidl::ServerEnd<::test_protocolrequest::Child>&
test_protocolrequest::ParentGetChildRequestResponse::r() const {
  return storage_.r;
}

::fidl::ServerEnd<::test_protocolrequest::Child>& ::test_protocolrequest::ParentGetChildRequestResponse::r() {
  return storage_.r;
}

::test_protocolrequest::ParentGetChildRequestResponse& ::test_protocolrequest::ParentGetChildRequestResponse::r(::fidl::ServerEnd<::test_protocolrequest::Child> value) {
  storage_.r = std::move(value);
  return *this;
}

::test_protocolrequest::ParentTakeChildRequest::ParentTakeChildRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocolrequest::ParentTakeChildRequest::ParentTakeChildRequest(::fidl::ClientEnd<::test_protocolrequest::Child> c) noexcept
    : storage_({.c = std::move(c)}) {}

::test_protocolrequest::ParentTakeChildRequest::ParentTakeChildRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ParentTakeChildRequest(Storage_{
                                                                                                                                         .c = {},
                                                                                                                                     }) {}
const ::fidl::ClientEnd<::test_protocolrequest::Child>&
test_protocolrequest::ParentTakeChildRequest::c() const {
  return storage_.c;
}

::fidl::ClientEnd<::test_protocolrequest::Child>& ::test_protocolrequest::ParentTakeChildRequest::c() {
  return storage_.c;
}

::test_protocolrequest::ParentTakeChildRequest& ::test_protocolrequest::ParentTakeChildRequest::c(::fidl::ClientEnd<::test_protocolrequest::Child> value) {
  storage_.c = std::move(value);
  return *this;
}

::test_protocolrequest::ParentTakeChildRequestRequest::ParentTakeChildRequestRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocolrequest::ParentTakeChildRequestRequest::ParentTakeChildRequestRequest(::fidl::ServerEnd<::test_protocolrequest::Child> r) noexcept
    : storage_({.r = std::move(r)}) {}

::test_protocolrequest::ParentTakeChildRequestRequest::ParentTakeChildRequestRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ParentTakeChildRequestRequest(Storage_{
                                                                                                                                                       .r = {},
                                                                                                                                                   }) {}
const ::fidl::ServerEnd<::test_protocolrequest::Child>&
test_protocolrequest::ParentTakeChildRequestRequest::r() const {
  return storage_.r;
}

::fidl::ServerEnd<::test_protocolrequest::Child>& ::test_protocolrequest::ParentTakeChildRequestRequest::r() {
  return storage_.r;
}

::test_protocolrequest::ParentTakeChildRequestRequest& ::test_protocolrequest::ParentTakeChildRequestRequest::r(::fidl::ServerEnd<::test_protocolrequest::Child> value) {
  storage_.r = std::move(value);
  return *this;
}

#endif  // __Fuchsia__

#pragma clang diagnostic pop
