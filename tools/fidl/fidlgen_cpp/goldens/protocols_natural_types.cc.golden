// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.protocols/cpp/natural_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

void fidl::internal::NaturalCodingTraits<::test_protocols::ErrorEnum, ::fidl::internal::NaturalCodingConstraintEmpty>::Encode(
    fidl::internal::NaturalEncoder* encoder, ::test_protocols::ErrorEnum* value, size_t offset, size_t recursion_depth) {
  switch (*value) {
    case ::test_protocols::ErrorEnum::kErrFoo:
    case ::test_protocols::ErrorEnum::kErrBar:
      break;
    default:
      encoder->SetError(::fidl::internal::kCodingErrorUnknownEnumValue);
      return;
  }
  *encoder->template GetPtr<::test_protocols::ErrorEnum>(offset) = *value;
}

void fidl::internal::NaturalCodingTraits<::test_protocols::ErrorEnum, ::fidl::internal::NaturalCodingConstraintEmpty>::Decode(
    fidl::internal::NaturalDecoder* decoder, ::test_protocols::ErrorEnum* value, size_t offset, size_t recursion_depth) {
  *value = *decoder->template GetPtr<::test_protocols::ErrorEnum>(offset);
  switch (*value) {
    case ::test_protocols::ErrorEnum::kErrFoo:
    case ::test_protocols::ErrorEnum::kErrBar:
      break;
    default:
      decoder->SetError(::fidl::internal::kCodingErrorUnknownEnumValue);
      return;
  }
}

::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::WithAndWithoutRequestResponseNoRequestWithResponseResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::WithAndWithoutRequestResponseNoRequestWithResponseResponse(::std::string ret) noexcept
    : storage_({.ret = std::move(ret)}) {}

::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::WithAndWithoutRequestResponseNoRequestWithResponseResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithAndWithoutRequestResponseNoRequestWithResponseResponse(Storage_{
                                                                                                                                                                                                           .ret = {},
                                                                                                                                                                                                       }) {}
::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::WithAndWithoutRequestResponseNoRequestWithResponseResponse(const ::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse& other) noexcept : ::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse(other.CloneStorage_()) {}

::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse& test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::operator=(const ::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::operator==(const WithAndWithoutRequestResponseNoRequestWithResponseResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse, 16>::Equal(this, &other);
}

bool test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::operator!=(const WithAndWithoutRequestResponseNoRequestWithResponseResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse, 16>::Equal(this, &other);
}

::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::Storage_ test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.ret)};
}
const ::std::string&
test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::ret() const {
  return storage_.ret;
}

::std::string& ::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::ret() {
  return storage_.ret;
}

::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse& ::test_protocols::WithAndWithoutRequestResponseNoRequestWithResponseResponse::ret(::std::string value) {
  storage_.ret = std::move(value);
  return *this;
}

::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::WithAndWithoutRequestResponseWithRequestNoResponseRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::WithAndWithoutRequestResponseWithRequestNoResponseRequest(::std::string arg) noexcept
    : storage_({.arg = std::move(arg)}) {}

::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::WithAndWithoutRequestResponseWithRequestNoResponseRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithAndWithoutRequestResponseWithRequestNoResponseRequest(Storage_{
                                                                                                                                                                                                         .arg = {},
                                                                                                                                                                                                     }) {}
::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::WithAndWithoutRequestResponseWithRequestNoResponseRequest(const ::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest& other) noexcept : ::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest(other.CloneStorage_()) {}

::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest& test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::operator=(const ::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::operator==(const WithAndWithoutRequestResponseWithRequestNoResponseRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest, 16>::Equal(this, &other);
}

bool test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::operator!=(const WithAndWithoutRequestResponseWithRequestNoResponseRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest, 16>::Equal(this, &other);
}

::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::Storage_ test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.arg)};
}
const ::std::string&
test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::arg() const {
  return storage_.arg;
}

::std::string& ::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::arg() {
  return storage_.arg;
}

::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest& ::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::arg(::std::string value) {
  storage_.arg = std::move(value);
  return *this;
}

::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest(::std::string arg) noexcept
    : storage_({.arg = std::move(arg)}) {}

::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithAndWithoutRequestResponseWithRequestEmptyResponseRequest(Storage_{
                                                                                                                                                                                                               .arg = {},
                                                                                                                                                                                                           }) {}
::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest(const ::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest& other) noexcept : ::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest(other.CloneStorage_()) {}

::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest& test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::operator=(const ::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::operator==(const WithAndWithoutRequestResponseWithRequestEmptyResponseRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest, 16>::Equal(this, &other);
}

bool test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::operator!=(const WithAndWithoutRequestResponseWithRequestEmptyResponseRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest, 16>::Equal(this, &other);
}

::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::Storage_ test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.arg)};
}
const ::std::string&
test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::arg() const {
  return storage_.arg;
}

::std::string& ::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::arg() {
  return storage_.arg;
}

::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest& ::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::arg(::std::string value) {
  storage_.arg = std::move(value);
  return *this;
}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::WithAndWithoutRequestResponseWithRequestWithResponseRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::WithAndWithoutRequestResponseWithRequestWithResponseRequest(::std::string arg) noexcept
    : storage_({.arg = std::move(arg)}) {}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::WithAndWithoutRequestResponseWithRequestWithResponseRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithAndWithoutRequestResponseWithRequestWithResponseRequest(Storage_{
                                                                                                                                                                                                             .arg = {},
                                                                                                                                                                                                         }) {}
::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::WithAndWithoutRequestResponseWithRequestWithResponseRequest(const ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest& other) noexcept : ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest(other.CloneStorage_()) {}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest& test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::operator=(const ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::operator==(const WithAndWithoutRequestResponseWithRequestWithResponseRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest, 16>::Equal(this, &other);
}

bool test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::operator!=(const WithAndWithoutRequestResponseWithRequestWithResponseRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest, 16>::Equal(this, &other);
}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::Storage_ test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.arg)};
}
const ::std::string&
test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::arg() const {
  return storage_.arg;
}

::std::string& ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::arg() {
  return storage_.arg;
}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest& ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::arg(::std::string value) {
  storage_.arg = std::move(value);
  return *this;
}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::WithAndWithoutRequestResponseWithRequestWithResponseResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::WithAndWithoutRequestResponseWithRequestWithResponseResponse(::std::string ret) noexcept
    : storage_({.ret = std::move(ret)}) {}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::WithAndWithoutRequestResponseWithRequestWithResponseResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithAndWithoutRequestResponseWithRequestWithResponseResponse(Storage_{
                                                                                                                                                                                                               .ret = {},
                                                                                                                                                                                                           }) {}
::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::WithAndWithoutRequestResponseWithRequestWithResponseResponse(const ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse& other) noexcept : ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse(other.CloneStorage_()) {}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse& test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::operator=(const ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::operator==(const WithAndWithoutRequestResponseWithRequestWithResponseResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse, 16>::Equal(this, &other);
}

bool test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::operator!=(const WithAndWithoutRequestResponseWithRequestWithResponseResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse, 16>::Equal(this, &other);
}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::Storage_ test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.ret)};
}
const ::std::string&
test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::ret() const {
  return storage_.ret;
}

::std::string& ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::ret() {
  return storage_.ret;
}

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse& ::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseResponse::ret(::std::string value) {
  storage_.ret = std::move(value);
  return *this;
}

::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::WithAndWithoutRequestResponseOnWithResponseRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::WithAndWithoutRequestResponseOnWithResponseRequest(::std::string ret) noexcept
    : storage_({.ret = std::move(ret)}) {}

::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::WithAndWithoutRequestResponseOnWithResponseRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithAndWithoutRequestResponseOnWithResponseRequest(Storage_{
                                                                                                                                                                                           .ret = {},
                                                                                                                                                                                       }) {}
::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::WithAndWithoutRequestResponseOnWithResponseRequest(const ::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest& other) noexcept : ::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest(other.CloneStorage_()) {}

::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest& test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::operator=(const ::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::operator==(const WithAndWithoutRequestResponseOnWithResponseRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest, 16>::Equal(this, &other);
}

bool test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::operator!=(const WithAndWithoutRequestResponseOnWithResponseRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest, 16>::Equal(this, &other);
}

::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::Storage_ test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.ret)};
}
const ::std::string&
test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::ret() const {
  return storage_.ret;
}

::std::string& ::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::ret() {
  return storage_.ret;
}

::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest& ::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::ret(::std::string value) {
  storage_.ret = std::move(value);
  return *this;
}

::test_protocols::WithErrorSyntaxResponseAsStructResponse::WithErrorSyntaxResponseAsStructResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithErrorSyntaxResponseAsStructResponse::WithErrorSyntaxResponseAsStructResponse(int64_t a, int64_t b, int64_t c) noexcept
    : storage_({.a = std::move(a),
                .b = std::move(b),
                .c = std::move(c)}) {}

::test_protocols::WithErrorSyntaxResponseAsStructResponse::WithErrorSyntaxResponseAsStructResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithErrorSyntaxResponseAsStructResponse(Storage_{
                                                                                                                                                                     .a = {},
                                                                                                                                                                     .b = {},
                                                                                                                                                                     .c = {},
                                                                                                                                                                 }) {}
::test_protocols::WithErrorSyntaxResponseAsStructResponse::WithErrorSyntaxResponseAsStructResponse(const ::test_protocols::WithErrorSyntaxResponseAsStructResponse& other) noexcept : ::test_protocols::WithErrorSyntaxResponseAsStructResponse(other.CloneStorage_()) {}

::test_protocols::WithErrorSyntaxResponseAsStructResponse& test_protocols::WithErrorSyntaxResponseAsStructResponse::operator=(const ::test_protocols::WithErrorSyntaxResponseAsStructResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::WithErrorSyntaxResponseAsStructResponse::operator==(const WithErrorSyntaxResponseAsStructResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithErrorSyntaxResponseAsStructResponse, 24>::Equal(this, &other);
}

bool test_protocols::WithErrorSyntaxResponseAsStructResponse::operator!=(const WithErrorSyntaxResponseAsStructResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithErrorSyntaxResponseAsStructResponse, 24>::Equal(this, &other);
}

::test_protocols::WithErrorSyntaxResponseAsStructResponse::Storage_ test_protocols::WithErrorSyntaxResponseAsStructResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a),
      ::fidl::internal::NaturalClone(storage_.b),
      ::fidl::internal::NaturalClone(storage_.c)};
}
int64_t
test_protocols::WithErrorSyntaxResponseAsStructResponse::a() const {
  return storage_.a;
}

int64_t& ::test_protocols::WithErrorSyntaxResponseAsStructResponse::a() {
  return storage_.a;
}

::test_protocols::WithErrorSyntaxResponseAsStructResponse& ::test_protocols::WithErrorSyntaxResponseAsStructResponse::a(int64_t value) {
  storage_.a = std::move(value);
  return *this;
}
int64_t
test_protocols::WithErrorSyntaxResponseAsStructResponse::b() const {
  return storage_.b;
}

int64_t& ::test_protocols::WithErrorSyntaxResponseAsStructResponse::b() {
  return storage_.b;
}

::test_protocols::WithErrorSyntaxResponseAsStructResponse& ::test_protocols::WithErrorSyntaxResponseAsStructResponse::b(int64_t value) {
  storage_.b = std::move(value);
  return *this;
}
int64_t
test_protocols::WithErrorSyntaxResponseAsStructResponse::c() const {
  return storage_.c;
}

int64_t& ::test_protocols::WithErrorSyntaxResponseAsStructResponse::c() {
  return storage_.c;
}

::test_protocols::WithErrorSyntaxResponseAsStructResponse& ::test_protocols::WithErrorSyntaxResponseAsStructResponse::c(int64_t value) {
  storage_.c = std::move(value);
  return *this;
}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::WithErrorSyntaxErrorAsPrimitiveResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::WithErrorSyntaxErrorAsPrimitiveResponse(uint8_t __reserved) noexcept
    : storage_({.__reserved = std::move(__reserved)}) {}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::WithErrorSyntaxErrorAsPrimitiveResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithErrorSyntaxErrorAsPrimitiveResponse(Storage_{
                                                                                                                                                                     .__reserved = 0u,
                                                                                                                                                                 }) {}
::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::WithErrorSyntaxErrorAsPrimitiveResponse(const ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse& other) noexcept : ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse(other.CloneStorage_()) {}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse& test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::operator=(const ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::operator==(const WithErrorSyntaxErrorAsPrimitiveResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse, 1>::Equal(this, &other);
}

bool test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::operator!=(const WithErrorSyntaxErrorAsPrimitiveResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse, 1>::Equal(this, &other);
}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::Storage_ test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.__reserved)};
}
uint8_t
test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::__reserved() const {
  return storage_.__reserved;
}

uint8_t& ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::__reserved() {
  return storage_.__reserved;
}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse& ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse::__reserved(uint8_t value) {
  storage_.__reserved = std::move(value);
  return *this;
}

::test_protocols::WithErrorSyntaxErrorAsEnumResponse::WithErrorSyntaxErrorAsEnumResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithErrorSyntaxErrorAsEnumResponse::WithErrorSyntaxErrorAsEnumResponse(uint8_t __reserved) noexcept
    : storage_({.__reserved = std::move(__reserved)}) {}

::test_protocols::WithErrorSyntaxErrorAsEnumResponse::WithErrorSyntaxErrorAsEnumResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithErrorSyntaxErrorAsEnumResponse(Storage_{
                                                                                                                                                           .__reserved = 0u,
                                                                                                                                                       }) {}
::test_protocols::WithErrorSyntaxErrorAsEnumResponse::WithErrorSyntaxErrorAsEnumResponse(const ::test_protocols::WithErrorSyntaxErrorAsEnumResponse& other) noexcept : ::test_protocols::WithErrorSyntaxErrorAsEnumResponse(other.CloneStorage_()) {}

::test_protocols::WithErrorSyntaxErrorAsEnumResponse& test_protocols::WithErrorSyntaxErrorAsEnumResponse::operator=(const ::test_protocols::WithErrorSyntaxErrorAsEnumResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::WithErrorSyntaxErrorAsEnumResponse::operator==(const WithErrorSyntaxErrorAsEnumResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithErrorSyntaxErrorAsEnumResponse, 1>::Equal(this, &other);
}

bool test_protocols::WithErrorSyntaxErrorAsEnumResponse::operator!=(const WithErrorSyntaxErrorAsEnumResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::WithErrorSyntaxErrorAsEnumResponse, 1>::Equal(this, &other);
}

::test_protocols::WithErrorSyntaxErrorAsEnumResponse::Storage_ test_protocols::WithErrorSyntaxErrorAsEnumResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.__reserved)};
}
uint8_t
test_protocols::WithErrorSyntaxErrorAsEnumResponse::__reserved() const {
  return storage_.__reserved;
}

uint8_t& ::test_protocols::WithErrorSyntaxErrorAsEnumResponse::__reserved() {
  return storage_.__reserved;
}

::test_protocols::WithErrorSyntaxErrorAsEnumResponse& ::test_protocols::WithErrorSyntaxErrorAsEnumResponse::__reserved(uint8_t value) {
  storage_.__reserved = std::move(value);
  return *this;
}
#ifdef __Fuchsia__

::test_protocols::WithErrorSyntaxHandleInResultResponse::WithErrorSyntaxHandleInResultResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithErrorSyntaxHandleInResultResponse::WithErrorSyntaxHandleInResultResponse(::zx::handle h) noexcept
    : storage_({.h = std::move(h)}) {}

::test_protocols::WithErrorSyntaxHandleInResultResponse::WithErrorSyntaxHandleInResultResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithErrorSyntaxHandleInResultResponse(Storage_{
                                                                                                                                                                 .h = {},
                                                                                                                                                             }) {}
const ::zx::handle&
test_protocols::WithErrorSyntaxHandleInResultResponse::h() const {
  return storage_.h;
}

::zx::handle& ::test_protocols::WithErrorSyntaxHandleInResultResponse::h() {
  return storage_.h;
}

::test_protocols::WithErrorSyntaxHandleInResultResponse& ::test_protocols::WithErrorSyntaxHandleInResultResponse::h(::zx::handle value) {
  storage_.h = std::move(value);
  return *this;
}

#endif  // __Fuchsia__

::test_protocols::ChannelProtocolMethodARequest::ChannelProtocolMethodARequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::ChannelProtocolMethodARequest::ChannelProtocolMethodARequest(int64_t a, int64_t b) noexcept
    : storage_({.a = std::move(a),
                .b = std::move(b)}) {}

::test_protocols::ChannelProtocolMethodARequest::ChannelProtocolMethodARequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ChannelProtocolMethodARequest(Storage_{
                                                                                                                                                 .a = {},
                                                                                                                                                 .b = {},
                                                                                                                                             }) {}
::test_protocols::ChannelProtocolMethodARequest::ChannelProtocolMethodARequest(const ::test_protocols::ChannelProtocolMethodARequest& other) noexcept : ::test_protocols::ChannelProtocolMethodARequest(other.CloneStorage_()) {}

::test_protocols::ChannelProtocolMethodARequest& test_protocols::ChannelProtocolMethodARequest::operator=(const ::test_protocols::ChannelProtocolMethodARequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::ChannelProtocolMethodARequest::operator==(const ChannelProtocolMethodARequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::ChannelProtocolMethodARequest, 16>::Equal(this, &other);
}

bool test_protocols::ChannelProtocolMethodARequest::operator!=(const ChannelProtocolMethodARequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::ChannelProtocolMethodARequest, 16>::Equal(this, &other);
}

::test_protocols::ChannelProtocolMethodARequest::Storage_ test_protocols::ChannelProtocolMethodARequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a),
      ::fidl::internal::NaturalClone(storage_.b)};
}
int64_t
test_protocols::ChannelProtocolMethodARequest::a() const {
  return storage_.a;
}

int64_t& ::test_protocols::ChannelProtocolMethodARequest::a() {
  return storage_.a;
}

::test_protocols::ChannelProtocolMethodARequest& ::test_protocols::ChannelProtocolMethodARequest::a(int64_t value) {
  storage_.a = std::move(value);
  return *this;
}
int64_t
test_protocols::ChannelProtocolMethodARequest::b() const {
  return storage_.b;
}

int64_t& ::test_protocols::ChannelProtocolMethodARequest::b() {
  return storage_.b;
}

::test_protocols::ChannelProtocolMethodARequest& ::test_protocols::ChannelProtocolMethodARequest::b(int64_t value) {
  storage_.b = std::move(value);
  return *this;
}

::test_protocols::ChannelProtocolEventARequest::ChannelProtocolEventARequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::ChannelProtocolEventARequest::ChannelProtocolEventARequest(int64_t a, int64_t b) noexcept
    : storage_({.a = std::move(a),
                .b = std::move(b)}) {}

::test_protocols::ChannelProtocolEventARequest::ChannelProtocolEventARequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ChannelProtocolEventARequest(Storage_{
                                                                                                                                               .a = {},
                                                                                                                                               .b = {},
                                                                                                                                           }) {}
::test_protocols::ChannelProtocolEventARequest::ChannelProtocolEventARequest(const ::test_protocols::ChannelProtocolEventARequest& other) noexcept : ::test_protocols::ChannelProtocolEventARequest(other.CloneStorage_()) {}

::test_protocols::ChannelProtocolEventARequest& test_protocols::ChannelProtocolEventARequest::operator=(const ::test_protocols::ChannelProtocolEventARequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::ChannelProtocolEventARequest::operator==(const ChannelProtocolEventARequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::ChannelProtocolEventARequest, 16>::Equal(this, &other);
}

bool test_protocols::ChannelProtocolEventARequest::operator!=(const ChannelProtocolEventARequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::ChannelProtocolEventARequest, 16>::Equal(this, &other);
}

::test_protocols::ChannelProtocolEventARequest::Storage_ test_protocols::ChannelProtocolEventARequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a),
      ::fidl::internal::NaturalClone(storage_.b)};
}
int64_t
test_protocols::ChannelProtocolEventARequest::a() const {
  return storage_.a;
}

int64_t& ::test_protocols::ChannelProtocolEventARequest::a() {
  return storage_.a;
}

::test_protocols::ChannelProtocolEventARequest& ::test_protocols::ChannelProtocolEventARequest::a(int64_t value) {
  storage_.a = std::move(value);
  return *this;
}
int64_t
test_protocols::ChannelProtocolEventARequest::b() const {
  return storage_.b;
}

int64_t& ::test_protocols::ChannelProtocolEventARequest::b() {
  return storage_.b;
}

::test_protocols::ChannelProtocolEventARequest& ::test_protocols::ChannelProtocolEventARequest::b(int64_t value) {
  storage_.b = std::move(value);
  return *this;
}

::test_protocols::ChannelProtocolMethodBRequest::ChannelProtocolMethodBRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::ChannelProtocolMethodBRequest::ChannelProtocolMethodBRequest(int64_t a, int64_t b) noexcept
    : storage_({.a = std::move(a),
                .b = std::move(b)}) {}

::test_protocols::ChannelProtocolMethodBRequest::ChannelProtocolMethodBRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ChannelProtocolMethodBRequest(Storage_{
                                                                                                                                                 .a = {},
                                                                                                                                                 .b = {},
                                                                                                                                             }) {}
::test_protocols::ChannelProtocolMethodBRequest::ChannelProtocolMethodBRequest(const ::test_protocols::ChannelProtocolMethodBRequest& other) noexcept : ::test_protocols::ChannelProtocolMethodBRequest(other.CloneStorage_()) {}

::test_protocols::ChannelProtocolMethodBRequest& test_protocols::ChannelProtocolMethodBRequest::operator=(const ::test_protocols::ChannelProtocolMethodBRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::ChannelProtocolMethodBRequest::operator==(const ChannelProtocolMethodBRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::ChannelProtocolMethodBRequest, 16>::Equal(this, &other);
}

bool test_protocols::ChannelProtocolMethodBRequest::operator!=(const ChannelProtocolMethodBRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::ChannelProtocolMethodBRequest, 16>::Equal(this, &other);
}

::test_protocols::ChannelProtocolMethodBRequest::Storage_ test_protocols::ChannelProtocolMethodBRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a),
      ::fidl::internal::NaturalClone(storage_.b)};
}
int64_t
test_protocols::ChannelProtocolMethodBRequest::a() const {
  return storage_.a;
}

int64_t& ::test_protocols::ChannelProtocolMethodBRequest::a() {
  return storage_.a;
}

::test_protocols::ChannelProtocolMethodBRequest& ::test_protocols::ChannelProtocolMethodBRequest::a(int64_t value) {
  storage_.a = std::move(value);
  return *this;
}
int64_t
test_protocols::ChannelProtocolMethodBRequest::b() const {
  return storage_.b;
}

int64_t& ::test_protocols::ChannelProtocolMethodBRequest::b() {
  return storage_.b;
}

::test_protocols::ChannelProtocolMethodBRequest& ::test_protocols::ChannelProtocolMethodBRequest::b(int64_t value) {
  storage_.b = std::move(value);
  return *this;
}

::test_protocols::ChannelProtocolMethodBResponse::ChannelProtocolMethodBResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::ChannelProtocolMethodBResponse::ChannelProtocolMethodBResponse(int64_t result) noexcept
    : storage_({.result = std::move(result)}) {}

::test_protocols::ChannelProtocolMethodBResponse::ChannelProtocolMethodBResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ChannelProtocolMethodBResponse(Storage_{
                                                                                                                                                   .result = {},
                                                                                                                                               }) {}
::test_protocols::ChannelProtocolMethodBResponse::ChannelProtocolMethodBResponse(const ::test_protocols::ChannelProtocolMethodBResponse& other) noexcept : ::test_protocols::ChannelProtocolMethodBResponse(other.CloneStorage_()) {}

::test_protocols::ChannelProtocolMethodBResponse& test_protocols::ChannelProtocolMethodBResponse::operator=(const ::test_protocols::ChannelProtocolMethodBResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::ChannelProtocolMethodBResponse::operator==(const ChannelProtocolMethodBResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::ChannelProtocolMethodBResponse, 8>::Equal(this, &other);
}

bool test_protocols::ChannelProtocolMethodBResponse::operator!=(const ChannelProtocolMethodBResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::ChannelProtocolMethodBResponse, 8>::Equal(this, &other);
}

::test_protocols::ChannelProtocolMethodBResponse::Storage_ test_protocols::ChannelProtocolMethodBResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.result)};
}
int64_t
test_protocols::ChannelProtocolMethodBResponse::result() const {
  return storage_.result;
}

int64_t& ::test_protocols::ChannelProtocolMethodBResponse::result() {
  return storage_.result;
}

::test_protocols::ChannelProtocolMethodBResponse& ::test_protocols::ChannelProtocolMethodBResponse::result(int64_t value) {
  storage_.result = std::move(value);
  return *this;
}
#ifdef __Fuchsia__

::test_protocols::ChannelProtocolTakeHandleRequest::ChannelProtocolTakeHandleRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::ChannelProtocolTakeHandleRequest::ChannelProtocolTakeHandleRequest(::zx::handle h) noexcept
    : storage_({.h = std::move(h)}) {}

::test_protocols::ChannelProtocolTakeHandleRequest::ChannelProtocolTakeHandleRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ChannelProtocolTakeHandleRequest(Storage_{
                                                                                                                                                       .h = {},
                                                                                                                                                   }) {}
const ::zx::handle&
test_protocols::ChannelProtocolTakeHandleRequest::h() const {
  return storage_.h;
}

::zx::handle& ::test_protocols::ChannelProtocolTakeHandleRequest::h() {
  return storage_.h;
}

::test_protocols::ChannelProtocolTakeHandleRequest& ::test_protocols::ChannelProtocolTakeHandleRequest::h(::zx::handle value) {
  storage_.h = std::move(value);
  return *this;
}

::test_protocols::ChannelProtocolMutateSocketRequest::ChannelProtocolMutateSocketRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::ChannelProtocolMutateSocketRequest::ChannelProtocolMutateSocketRequest(::zx::socket a) noexcept
    : storage_({.a = std::move(a)}) {}

::test_protocols::ChannelProtocolMutateSocketRequest::ChannelProtocolMutateSocketRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ChannelProtocolMutateSocketRequest(Storage_{
                                                                                                                                                           .a = {},
                                                                                                                                                       }) {}
const ::zx::socket&
test_protocols::ChannelProtocolMutateSocketRequest::a() const {
  return storage_.a;
}

::zx::socket& ::test_protocols::ChannelProtocolMutateSocketRequest::a() {
  return storage_.a;
}

::test_protocols::ChannelProtocolMutateSocketRequest& ::test_protocols::ChannelProtocolMutateSocketRequest::a(::zx::socket value) {
  storage_.a = std::move(value);
  return *this;
}

::test_protocols::ChannelProtocolMutateSocketResponse::ChannelProtocolMutateSocketResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::ChannelProtocolMutateSocketResponse::ChannelProtocolMutateSocketResponse(::zx::socket b) noexcept
    : storage_({.b = std::move(b)}) {}

::test_protocols::ChannelProtocolMutateSocketResponse::ChannelProtocolMutateSocketResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ChannelProtocolMutateSocketResponse(Storage_{
                                                                                                                                                             .b = {},
                                                                                                                                                         }) {}
const ::zx::socket&
test_protocols::ChannelProtocolMutateSocketResponse::b() const {
  return storage_.b;
}

::zx::socket& ::test_protocols::ChannelProtocolMutateSocketResponse::b() {
  return storage_.b;
}

::test_protocols::ChannelProtocolMutateSocketResponse& ::test_protocols::ChannelProtocolMutateSocketResponse::b(::zx::socket value) {
  storage_.b = std::move(value);
  return *this;
}

#endif  // __Fuchsia__

::test_protocols::SyscallProtocolMethodCRequest::SyscallProtocolMethodCRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::SyscallProtocolMethodCRequest::SyscallProtocolMethodCRequest(int64_t a, int64_t b) noexcept
    : storage_({.a = std::move(a),
                .b = std::move(b)}) {}

::test_protocols::SyscallProtocolMethodCRequest::SyscallProtocolMethodCRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : SyscallProtocolMethodCRequest(Storage_{
                                                                                                                                                 .a = {},
                                                                                                                                                 .b = {},
                                                                                                                                             }) {}
::test_protocols::SyscallProtocolMethodCRequest::SyscallProtocolMethodCRequest(const ::test_protocols::SyscallProtocolMethodCRequest& other) noexcept : ::test_protocols::SyscallProtocolMethodCRequest(other.CloneStorage_()) {}

::test_protocols::SyscallProtocolMethodCRequest& test_protocols::SyscallProtocolMethodCRequest::operator=(const ::test_protocols::SyscallProtocolMethodCRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::SyscallProtocolMethodCRequest::operator==(const SyscallProtocolMethodCRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::SyscallProtocolMethodCRequest, 16>::Equal(this, &other);
}

bool test_protocols::SyscallProtocolMethodCRequest::operator!=(const SyscallProtocolMethodCRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::SyscallProtocolMethodCRequest, 16>::Equal(this, &other);
}

::test_protocols::SyscallProtocolMethodCRequest::Storage_ test_protocols::SyscallProtocolMethodCRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.a),
      ::fidl::internal::NaturalClone(storage_.b)};
}
int64_t
test_protocols::SyscallProtocolMethodCRequest::a() const {
  return storage_.a;
}

int64_t& ::test_protocols::SyscallProtocolMethodCRequest::a() {
  return storage_.a;
}

::test_protocols::SyscallProtocolMethodCRequest& ::test_protocols::SyscallProtocolMethodCRequest::a(int64_t value) {
  storage_.a = std::move(value);
  return *this;
}
int64_t
test_protocols::SyscallProtocolMethodCRequest::b() const {
  return storage_.b;
}

int64_t& ::test_protocols::SyscallProtocolMethodCRequest::b() {
  return storage_.b;
}

::test_protocols::SyscallProtocolMethodCRequest& ::test_protocols::SyscallProtocolMethodCRequest::b(int64_t value) {
  storage_.b = std::move(value);
  return *this;
}
#ifdef __Fuchsia__

::test_protocols::HandleRightsProtocolNoResponseMethodRequest::HandleRightsProtocolNoResponseMethodRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::HandleRightsProtocolNoResponseMethodRequest::HandleRightsProtocolNoResponseMethodRequest(::zx::socket h) noexcept
    : storage_({.h = std::move(h)}) {}

::test_protocols::HandleRightsProtocolNoResponseMethodRequest::HandleRightsProtocolNoResponseMethodRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : HandleRightsProtocolNoResponseMethodRequest(Storage_{
                                                                                                                                                                             .h = {},
                                                                                                                                                                         }) {}
const ::zx::socket&
test_protocols::HandleRightsProtocolNoResponseMethodRequest::h() const {
  return storage_.h;
}

::zx::socket& ::test_protocols::HandleRightsProtocolNoResponseMethodRequest::h() {
  return storage_.h;
}

::test_protocols::HandleRightsProtocolNoResponseMethodRequest& ::test_protocols::HandleRightsProtocolNoResponseMethodRequest::h(::zx::socket value) {
  storage_.h = std::move(value);
  return *this;
}

::test_protocols::HandleRightsProtocolResponseMethodRequest::HandleRightsProtocolResponseMethodRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::HandleRightsProtocolResponseMethodRequest::HandleRightsProtocolResponseMethodRequest(::zx::socket h) noexcept
    : storage_({.h = std::move(h)}) {}

::test_protocols::HandleRightsProtocolResponseMethodRequest::HandleRightsProtocolResponseMethodRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : HandleRightsProtocolResponseMethodRequest(Storage_{
                                                                                                                                                                         .h = {},
                                                                                                                                                                     }) {}
const ::zx::socket&
test_protocols::HandleRightsProtocolResponseMethodRequest::h() const {
  return storage_.h;
}

::zx::socket& ::test_protocols::HandleRightsProtocolResponseMethodRequest::h() {
  return storage_.h;
}

::test_protocols::HandleRightsProtocolResponseMethodRequest& ::test_protocols::HandleRightsProtocolResponseMethodRequest::h(::zx::socket value) {
  storage_.h = std::move(value);
  return *this;
}

::test_protocols::HandleRightsProtocolResponseMethodResponse::HandleRightsProtocolResponseMethodResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::HandleRightsProtocolResponseMethodResponse::HandleRightsProtocolResponseMethodResponse(::zx::socket h) noexcept
    : storage_({.h = std::move(h)}) {}

::test_protocols::HandleRightsProtocolResponseMethodResponse::HandleRightsProtocolResponseMethodResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : HandleRightsProtocolResponseMethodResponse(Storage_{
                                                                                                                                                                           .h = {},
                                                                                                                                                                       }) {}
const ::zx::socket&
test_protocols::HandleRightsProtocolResponseMethodResponse::h() const {
  return storage_.h;
}

::zx::socket& ::test_protocols::HandleRightsProtocolResponseMethodResponse::h() {
  return storage_.h;
}

::test_protocols::HandleRightsProtocolResponseMethodResponse& ::test_protocols::HandleRightsProtocolResponseMethodResponse::h(::zx::socket value) {
  storage_.h = std::move(value);
  return *this;
}

::test_protocols::HandleRightsProtocolAnEventRequest::HandleRightsProtocolAnEventRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::HandleRightsProtocolAnEventRequest::HandleRightsProtocolAnEventRequest(::zx::socket h) noexcept
    : storage_({.h = std::move(h)}) {}

::test_protocols::HandleRightsProtocolAnEventRequest::HandleRightsProtocolAnEventRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : HandleRightsProtocolAnEventRequest(Storage_{
                                                                                                                                                           .h = {},
                                                                                                                                                       }) {}
const ::zx::socket&
test_protocols::HandleRightsProtocolAnEventRequest::h() const {
  return storage_.h;
}

::zx::socket& ::test_protocols::HandleRightsProtocolAnEventRequest::h() {
  return storage_.h;
}

::test_protocols::HandleRightsProtocolAnEventRequest& ::test_protocols::HandleRightsProtocolAnEventRequest::h(::zx::socket value) {
  storage_.h = std::move(value);
  return *this;
}

::test_protocols::ProtocolEnds::ProtocolEnds(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::ProtocolEnds::ProtocolEnds(::fidl::ClientEnd<::test_protocols::DiscoverableProtocol> client, ::fidl::ServerEnd<::test_protocols::DiscoverableProtocol> server, ::fidl::ClientEnd<::test_protocols::DiscoverableProtocol> client_opt, ::fidl::ServerEnd<::test_protocols::DiscoverableProtocol> server_opt) noexcept
    : storage_({.client = std::move(client),
                .server = std::move(server),
                .client_opt = std::move(client_opt),
                .server_opt = std::move(server_opt)}) {}

::test_protocols::ProtocolEnds::ProtocolEnds(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ProtocolEnds(Storage_{
                                                                                                               .client = {},
                                                                                                               .server = {},
                                                                                                               .client_opt = {},
                                                                                                               .server_opt = {},
                                                                                                           }) {}
const ::fidl::ClientEnd<::test_protocols::DiscoverableProtocol>&
test_protocols::ProtocolEnds::client() const {
  return storage_.client;
}

::fidl::ClientEnd<::test_protocols::DiscoverableProtocol>& ::test_protocols::ProtocolEnds::client() {
  return storage_.client;
}

::test_protocols::ProtocolEnds& ::test_protocols::ProtocolEnds::client(::fidl::ClientEnd<::test_protocols::DiscoverableProtocol> value) {
  storage_.client = std::move(value);
  return *this;
}
const ::fidl::ServerEnd<::test_protocols::DiscoverableProtocol>&
test_protocols::ProtocolEnds::server() const {
  return storage_.server;
}

::fidl::ServerEnd<::test_protocols::DiscoverableProtocol>& ::test_protocols::ProtocolEnds::server() {
  return storage_.server;
}

::test_protocols::ProtocolEnds& ::test_protocols::ProtocolEnds::server(::fidl::ServerEnd<::test_protocols::DiscoverableProtocol> value) {
  storage_.server = std::move(value);
  return *this;
}
const ::fidl::ClientEnd<::test_protocols::DiscoverableProtocol>&
test_protocols::ProtocolEnds::client_opt() const {
  return storage_.client_opt;
}

::fidl::ClientEnd<::test_protocols::DiscoverableProtocol>& ::test_protocols::ProtocolEnds::client_opt() {
  return storage_.client_opt;
}

::test_protocols::ProtocolEnds& ::test_protocols::ProtocolEnds::client_opt(::fidl::ClientEnd<::test_protocols::DiscoverableProtocol> value) {
  storage_.client_opt = std::move(value);
  return *this;
}
const ::fidl::ServerEnd<::test_protocols::DiscoverableProtocol>&
test_protocols::ProtocolEnds::server_opt() const {
  return storage_.server_opt;
}

::fidl::ServerEnd<::test_protocols::DiscoverableProtocol>& ::test_protocols::ProtocolEnds::server_opt() {
  return storage_.server_opt;
}

::test_protocols::ProtocolEnds& ::test_protocols::ProtocolEnds::server_opt(::fidl::ServerEnd<::test_protocols::DiscoverableProtocol> value) {
  storage_.server_opt = std::move(value);
  return *this;
}

::test_protocols::WithProtocolEndsClientEndsRequest::WithProtocolEndsClientEndsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithProtocolEndsClientEndsRequest::WithProtocolEndsClientEndsRequest(::fidl::ClientEnd<::test_protocols::DiscoverableProtocol> in) noexcept
    : storage_({.in = std::move(in)}) {}

::test_protocols::WithProtocolEndsClientEndsRequest::WithProtocolEndsClientEndsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithProtocolEndsClientEndsRequest(Storage_{
                                                                                                                                                         .in = {},
                                                                                                                                                     }) {}
const ::fidl::ClientEnd<::test_protocols::DiscoverableProtocol>&
test_protocols::WithProtocolEndsClientEndsRequest::in() const {
  return storage_.in;
}

::fidl::ClientEnd<::test_protocols::DiscoverableProtocol>& ::test_protocols::WithProtocolEndsClientEndsRequest::in() {
  return storage_.in;
}

::test_protocols::WithProtocolEndsClientEndsRequest& ::test_protocols::WithProtocolEndsClientEndsRequest::in(::fidl::ClientEnd<::test_protocols::DiscoverableProtocol> value) {
  storage_.in = std::move(value);
  return *this;
}

::test_protocols::WithProtocolEndsClientEndsResponse::WithProtocolEndsClientEndsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithProtocolEndsClientEndsResponse::WithProtocolEndsClientEndsResponse(::fidl::ClientEnd<::test_protocols::DiscoverableProtocol> out) noexcept
    : storage_({.out = std::move(out)}) {}

::test_protocols::WithProtocolEndsClientEndsResponse::WithProtocolEndsClientEndsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithProtocolEndsClientEndsResponse(Storage_{
                                                                                                                                                           .out = {},
                                                                                                                                                       }) {}
const ::fidl::ClientEnd<::test_protocols::DiscoverableProtocol>&
test_protocols::WithProtocolEndsClientEndsResponse::out() const {
  return storage_.out;
}

::fidl::ClientEnd<::test_protocols::DiscoverableProtocol>& ::test_protocols::WithProtocolEndsClientEndsResponse::out() {
  return storage_.out;
}

::test_protocols::WithProtocolEndsClientEndsResponse& ::test_protocols::WithProtocolEndsClientEndsResponse::out(::fidl::ClientEnd<::test_protocols::DiscoverableProtocol> value) {
  storage_.out = std::move(value);
  return *this;
}

::test_protocols::WithProtocolEndsServerEndsRequest::WithProtocolEndsServerEndsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithProtocolEndsServerEndsRequest::WithProtocolEndsServerEndsRequest(::fidl::ServerEnd<::test_protocols::DiscoverableProtocol> in) noexcept
    : storage_({.in = std::move(in)}) {}

::test_protocols::WithProtocolEndsServerEndsRequest::WithProtocolEndsServerEndsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithProtocolEndsServerEndsRequest(Storage_{
                                                                                                                                                         .in = {},
                                                                                                                                                     }) {}
const ::fidl::ServerEnd<::test_protocols::DiscoverableProtocol>&
test_protocols::WithProtocolEndsServerEndsRequest::in() const {
  return storage_.in;
}

::fidl::ServerEnd<::test_protocols::DiscoverableProtocol>& ::test_protocols::WithProtocolEndsServerEndsRequest::in() {
  return storage_.in;
}

::test_protocols::WithProtocolEndsServerEndsRequest& ::test_protocols::WithProtocolEndsServerEndsRequest::in(::fidl::ServerEnd<::test_protocols::DiscoverableProtocol> value) {
  storage_.in = std::move(value);
  return *this;
}

::test_protocols::WithProtocolEndsServerEndsResponse::WithProtocolEndsServerEndsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithProtocolEndsServerEndsResponse::WithProtocolEndsServerEndsResponse(::fidl::ServerEnd<::test_protocols::DiscoverableProtocol> out) noexcept
    : storage_({.out = std::move(out)}) {}

::test_protocols::WithProtocolEndsServerEndsResponse::WithProtocolEndsServerEndsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithProtocolEndsServerEndsResponse(Storage_{
                                                                                                                                                           .out = {},
                                                                                                                                                       }) {}
const ::fidl::ServerEnd<::test_protocols::DiscoverableProtocol>&
test_protocols::WithProtocolEndsServerEndsResponse::out() const {
  return storage_.out;
}

::fidl::ServerEnd<::test_protocols::DiscoverableProtocol>& ::test_protocols::WithProtocolEndsServerEndsResponse::out() {
  return storage_.out;
}

::test_protocols::WithProtocolEndsServerEndsResponse& ::test_protocols::WithProtocolEndsServerEndsResponse::out(::fidl::ServerEnd<::test_protocols::DiscoverableProtocol> value) {
  storage_.out = std::move(value);
  return *this;
}

::test_protocols::WithProtocolEndsStructContainingEndsRequest::WithProtocolEndsStructContainingEndsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithProtocolEndsStructContainingEndsRequest::WithProtocolEndsStructContainingEndsRequest(::test_protocols::ProtocolEnds in) noexcept
    : storage_({.in = std::move(in)}) {}

::test_protocols::WithProtocolEndsStructContainingEndsRequest::WithProtocolEndsStructContainingEndsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithProtocolEndsStructContainingEndsRequest(Storage_{
                                                                                                                                                                             .in = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                                         }) {}
const ::test_protocols::ProtocolEnds&
test_protocols::WithProtocolEndsStructContainingEndsRequest::in() const {
  return storage_.in;
}

::test_protocols::ProtocolEnds& ::test_protocols::WithProtocolEndsStructContainingEndsRequest::in() {
  return storage_.in;
}

::test_protocols::WithProtocolEndsStructContainingEndsRequest& ::test_protocols::WithProtocolEndsStructContainingEndsRequest::in(::test_protocols::ProtocolEnds value) {
  storage_.in = std::move(value);
  return *this;
}

::test_protocols::WithProtocolEndsStructContainingEndsResponse::WithProtocolEndsStructContainingEndsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::WithProtocolEndsStructContainingEndsResponse::WithProtocolEndsStructContainingEndsResponse(::test_protocols::ProtocolEnds out) noexcept
    : storage_({.out = std::move(out)}) {}

::test_protocols::WithProtocolEndsStructContainingEndsResponse::WithProtocolEndsStructContainingEndsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : WithProtocolEndsStructContainingEndsResponse(Storage_{
                                                                                                                                                                               .out = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                                           }) {}
const ::test_protocols::ProtocolEnds&
test_protocols::WithProtocolEndsStructContainingEndsResponse::out() const {
  return storage_.out;
}

::test_protocols::ProtocolEnds& ::test_protocols::WithProtocolEndsStructContainingEndsResponse::out() {
  return storage_.out;
}

::test_protocols::WithProtocolEndsStructContainingEndsResponse& ::test_protocols::WithProtocolEndsStructContainingEndsResponse::out(::test_protocols::ProtocolEnds value) {
  storage_.out = std::move(value);
  return *this;
}

#endif  // __Fuchsia__

::test_protocols::ManyParametersFifteenRequest::ManyParametersFifteenRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::ManyParametersFifteenRequest::ManyParametersFifteenRequest(bool p1, bool p2, bool p3, bool p4, bool p5, bool p6, bool p7, bool p8, bool p9, bool p10, bool p11, bool p12, bool p13, bool p14, bool p15) noexcept
    : storage_({.p1 = std::move(p1),
                .p2 = std::move(p2),
                .p3 = std::move(p3),
                .p4 = std::move(p4),
                .p5 = std::move(p5),
                .p6 = std::move(p6),
                .p7 = std::move(p7),
                .p8 = std::move(p8),
                .p9 = std::move(p9),
                .p10 = std::move(p10),
                .p11 = std::move(p11),
                .p12 = std::move(p12),
                .p13 = std::move(p13),
                .p14 = std::move(p14),
                .p15 = std::move(p15)}) {}

::test_protocols::ManyParametersFifteenRequest::ManyParametersFifteenRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ManyParametersFifteenRequest(Storage_{
                                                                                                                                               .p1 = {},
                                                                                                                                               .p2 = {},
                                                                                                                                               .p3 = {},
                                                                                                                                               .p4 = {},
                                                                                                                                               .p5 = {},
                                                                                                                                               .p6 = {},
                                                                                                                                               .p7 = {},
                                                                                                                                               .p8 = {},
                                                                                                                                               .p9 = {},
                                                                                                                                               .p10 = {},
                                                                                                                                               .p11 = {},
                                                                                                                                               .p12 = {},
                                                                                                                                               .p13 = {},
                                                                                                                                               .p14 = {},
                                                                                                                                               .p15 = {},
                                                                                                                                           }) {}
::test_protocols::ManyParametersFifteenRequest::ManyParametersFifteenRequest(const ::test_protocols::ManyParametersFifteenRequest& other) noexcept : ::test_protocols::ManyParametersFifteenRequest(other.CloneStorage_()) {}

::test_protocols::ManyParametersFifteenRequest& test_protocols::ManyParametersFifteenRequest::operator=(const ::test_protocols::ManyParametersFifteenRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::ManyParametersFifteenRequest::operator==(const ManyParametersFifteenRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::ManyParametersFifteenRequest, 15>::Equal(this, &other);
}

bool test_protocols::ManyParametersFifteenRequest::operator!=(const ManyParametersFifteenRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::ManyParametersFifteenRequest, 15>::Equal(this, &other);
}

::test_protocols::ManyParametersFifteenRequest::Storage_ test_protocols::ManyParametersFifteenRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.p1),
      ::fidl::internal::NaturalClone(storage_.p2),
      ::fidl::internal::NaturalClone(storage_.p3),
      ::fidl::internal::NaturalClone(storage_.p4),
      ::fidl::internal::NaturalClone(storage_.p5),
      ::fidl::internal::NaturalClone(storage_.p6),
      ::fidl::internal::NaturalClone(storage_.p7),
      ::fidl::internal::NaturalClone(storage_.p8),
      ::fidl::internal::NaturalClone(storage_.p9),
      ::fidl::internal::NaturalClone(storage_.p10),
      ::fidl::internal::NaturalClone(storage_.p11),
      ::fidl::internal::NaturalClone(storage_.p12),
      ::fidl::internal::NaturalClone(storage_.p13),
      ::fidl::internal::NaturalClone(storage_.p14),
      ::fidl::internal::NaturalClone(storage_.p15)};
}
bool test_protocols::ManyParametersFifteenRequest::p1() const {
  return storage_.p1;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p1() {
  return storage_.p1;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p1(bool value) {
  storage_.p1 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p2() const {
  return storage_.p2;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p2() {
  return storage_.p2;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p2(bool value) {
  storage_.p2 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p3() const {
  return storage_.p3;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p3() {
  return storage_.p3;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p3(bool value) {
  storage_.p3 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p4() const {
  return storage_.p4;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p4() {
  return storage_.p4;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p4(bool value) {
  storage_.p4 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p5() const {
  return storage_.p5;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p5() {
  return storage_.p5;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p5(bool value) {
  storage_.p5 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p6() const {
  return storage_.p6;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p6() {
  return storage_.p6;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p6(bool value) {
  storage_.p6 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p7() const {
  return storage_.p7;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p7() {
  return storage_.p7;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p7(bool value) {
  storage_.p7 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p8() const {
  return storage_.p8;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p8() {
  return storage_.p8;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p8(bool value) {
  storage_.p8 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p9() const {
  return storage_.p9;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p9() {
  return storage_.p9;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p9(bool value) {
  storage_.p9 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p10() const {
  return storage_.p10;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p10() {
  return storage_.p10;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p10(bool value) {
  storage_.p10 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p11() const {
  return storage_.p11;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p11() {
  return storage_.p11;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p11(bool value) {
  storage_.p11 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p12() const {
  return storage_.p12;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p12() {
  return storage_.p12;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p12(bool value) {
  storage_.p12 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p13() const {
  return storage_.p13;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p13() {
  return storage_.p13;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p13(bool value) {
  storage_.p13 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p14() const {
  return storage_.p14;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p14() {
  return storage_.p14;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p14(bool value) {
  storage_.p14 = std::move(value);
  return *this;
}
bool test_protocols::ManyParametersFifteenRequest::p15() const {
  return storage_.p15;
}

bool& ::test_protocols::ManyParametersFifteenRequest::p15() {
  return storage_.p15;
}

::test_protocols::ManyParametersFifteenRequest& ::test_protocols::ManyParametersFifteenRequest::p15(bool value) {
  storage_.p15 = std::move(value);
  return *this;
}

::test_protocols::MethodWithUnionUnionMethodRequest::MethodWithUnionUnionMethodRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::MethodWithUnionUnionMethodRequest::MethodWithUnionUnionMethodRequest(::test_protocols::TheUnion u) noexcept
    : storage_({.u = std::move(u)}) {}

::test_protocols::MethodWithUnionUnionMethodRequest::MethodWithUnionUnionMethodRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : MethodWithUnionUnionMethodRequest(Storage_{
                                                                                                                                                         .u = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                     }) {}
::test_protocols::MethodWithUnionUnionMethodRequest::MethodWithUnionUnionMethodRequest(const ::test_protocols::MethodWithUnionUnionMethodRequest& other) noexcept : ::test_protocols::MethodWithUnionUnionMethodRequest(other.CloneStorage_()) {}

::test_protocols::MethodWithUnionUnionMethodRequest& test_protocols::MethodWithUnionUnionMethodRequest::operator=(const ::test_protocols::MethodWithUnionUnionMethodRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::MethodWithUnionUnionMethodRequest::operator==(const MethodWithUnionUnionMethodRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::MethodWithUnionUnionMethodRequest, 16>::Equal(this, &other);
}

bool test_protocols::MethodWithUnionUnionMethodRequest::operator!=(const MethodWithUnionUnionMethodRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::MethodWithUnionUnionMethodRequest, 16>::Equal(this, &other);
}

::test_protocols::MethodWithUnionUnionMethodRequest::Storage_ test_protocols::MethodWithUnionUnionMethodRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.u)};
}
const ::test_protocols::TheUnion&
test_protocols::MethodWithUnionUnionMethodRequest::u() const {
  return storage_.u;
}

::test_protocols::TheUnion& ::test_protocols::MethodWithUnionUnionMethodRequest::u() {
  return storage_.u;
}

::test_protocols::MethodWithUnionUnionMethodRequest& ::test_protocols::MethodWithUnionUnionMethodRequest::u(::test_protocols::TheUnion value) {
  storage_.u = std::move(value);
  return *this;
}

::test_protocols::MethodWithUnionUnionMethodResponse::MethodWithUnionUnionMethodResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_protocols::MethodWithUnionUnionMethodResponse::MethodWithUnionUnionMethodResponse(::fidl::Box<::test_protocols::TheUnion> u) noexcept
    : storage_({.u = std::move(u)}) {}

::test_protocols::MethodWithUnionUnionMethodResponse::MethodWithUnionUnionMethodResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : MethodWithUnionUnionMethodResponse(Storage_{
                                                                                                                                                           .u = {},
                                                                                                                                                       }) {}
::test_protocols::MethodWithUnionUnionMethodResponse::MethodWithUnionUnionMethodResponse(const ::test_protocols::MethodWithUnionUnionMethodResponse& other) noexcept : ::test_protocols::MethodWithUnionUnionMethodResponse(other.CloneStorage_()) {}

::test_protocols::MethodWithUnionUnionMethodResponse& test_protocols::MethodWithUnionUnionMethodResponse::operator=(const ::test_protocols::MethodWithUnionUnionMethodResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_protocols::MethodWithUnionUnionMethodResponse::operator==(const MethodWithUnionUnionMethodResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_protocols::MethodWithUnionUnionMethodResponse, 16>::Equal(this, &other);
}

bool test_protocols::MethodWithUnionUnionMethodResponse::operator!=(const MethodWithUnionUnionMethodResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_protocols::MethodWithUnionUnionMethodResponse, 16>::Equal(this, &other);
}

::test_protocols::MethodWithUnionUnionMethodResponse::Storage_ test_protocols::MethodWithUnionUnionMethodResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.u)};
}
const ::fidl::Box<::test_protocols::TheUnion>&
test_protocols::MethodWithUnionUnionMethodResponse::u() const {
  return storage_.u;
}

::fidl::Box<::test_protocols::TheUnion>& ::test_protocols::MethodWithUnionUnionMethodResponse::u() {
  return storage_.u;
}

::test_protocols::MethodWithUnionUnionMethodResponse& ::test_protocols::MethodWithUnionUnionMethodResponse::u(::fidl::Box<::test_protocols::TheUnion> value) {
  storage_.u = std::move(value);
  return *this;
}

::test_protocols::WithErrorSyntaxResponseAsStructResult::WithErrorSyntaxResponseAsStructResult(WithErrorSyntaxResponseAsStructResult&& other) noexcept : WithErrorSyntaxResponseAsStructResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocols::WithErrorSyntaxResponseAsStructResult& ::test_protocols::WithErrorSyntaxResponseAsStructResult::operator=(WithErrorSyntaxResponseAsStructResult&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocols::WithErrorSyntaxResponseAsStructResult::WithErrorSyntaxResponseAsStructResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocols::WithErrorSyntaxResponseAsStructResult::WithErrorSyntaxResponseAsStructResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocols::WithErrorSyntaxResponseAsStructResult::Tag test_protocols::WithErrorSyntaxResponseAsStructResult::Which() const {
  return WithErrorSyntaxResponseAsStructResult::IndexToTag(storage_->index()).value();
}

size_t test_protocols::WithErrorSyntaxResponseAsStructResult::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocols::WithErrorSyntaxResponseAsStructResult::Tag tag) {
  switch (tag) {
    case ::test_protocols::WithErrorSyntaxResponseAsStructResult::Tag::kResponse:
      return 1;
    case ::test_protocols::WithErrorSyntaxResponseAsStructResult::Tag::kErr:
      return 2;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocols::WithErrorSyntaxResponseAsStructResult::Tag> test_protocols::WithErrorSyntaxResponseAsStructResult::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocols::WithErrorSyntaxResponseAsStructResult::Tag::kResponse;
    case 2:
      return ::test_protocols::WithErrorSyntaxResponseAsStructResult::Tag::kErr;
    default:
      return std::nullopt;
  }
}

::test_protocols::WithErrorSyntaxResponseAsStructResult::WithErrorSyntaxResponseAsStructResult(const WithErrorSyntaxResponseAsStructResult& other) noexcept : WithErrorSyntaxResponseAsStructResult(other.CloneStorage_()) {}

::test_protocols::WithErrorSyntaxResponseAsStructResult& test_protocols::WithErrorSyntaxResponseAsStructResult::operator=(const WithErrorSyntaxResponseAsStructResult& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocols::WithErrorSyntaxResponseAsStructResult::operator==(const WithErrorSyntaxResponseAsStructResult& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocols::WithErrorSyntaxResponseAsStructResult::operator!=(const WithErrorSyntaxResponseAsStructResult& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocols::WithErrorSyntaxResponseAsStructResult::Storage_> test_protocols::WithErrorSyntaxResponseAsStructResult::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocols::WithErrorSyntaxResponseAsStructResult test_protocols::WithErrorSyntaxResponseAsStructResult::WithResponse(::test_protocols::WithErrorSyntaxResponseAsStructResponse val) {
  return WithErrorSyntaxResponseAsStructResult(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocols::WithErrorSyntaxResponseAsStructResult::Storage_> test_protocols::WithErrorSyntaxResponseAsStructResult::response() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocols::WithErrorSyntaxResponseAsStructResult::Storage_> test_protocols::WithErrorSyntaxResponseAsStructResult::response() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocols::WithErrorSyntaxResponseAsStructResult& test_protocols::WithErrorSyntaxResponseAsStructResult::response(::test_protocols::WithErrorSyntaxResponseAsStructResponse value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_protocols::WithErrorSyntaxResponseAsStructResult test_protocols::WithErrorSyntaxResponseAsStructResult::WithErr(uint32_t val) {
  return WithErrorSyntaxResponseAsStructResult(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_protocols::WithErrorSyntaxResponseAsStructResult::Storage_> test_protocols::WithErrorSyntaxResponseAsStructResult::err() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_protocols::WithErrorSyntaxResponseAsStructResult::Storage_> test_protocols::WithErrorSyntaxResponseAsStructResult::err() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_protocols::WithErrorSyntaxResponseAsStructResult& test_protocols::WithErrorSyntaxResponseAsStructResult::err(uint32_t value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::WithErrorSyntaxErrorAsPrimitiveResult(WithErrorSyntaxErrorAsPrimitiveResult&& other) noexcept : WithErrorSyntaxErrorAsPrimitiveResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult& ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::operator=(WithErrorSyntaxErrorAsPrimitiveResult&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::WithErrorSyntaxErrorAsPrimitiveResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::WithErrorSyntaxErrorAsPrimitiveResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Tag test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Which() const {
  return WithErrorSyntaxErrorAsPrimitiveResult::IndexToTag(storage_->index()).value();
}

size_t test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Tag tag) {
  switch (tag) {
    case ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Tag::kResponse:
      return 1;
    case ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Tag::kErr:
      return 2;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Tag> test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Tag::kResponse;
    case 2:
      return ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Tag::kErr;
    default:
      return std::nullopt;
  }
}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::WithErrorSyntaxErrorAsPrimitiveResult(const WithErrorSyntaxErrorAsPrimitiveResult& other) noexcept : WithErrorSyntaxErrorAsPrimitiveResult(other.CloneStorage_()) {}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult& test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::operator=(const WithErrorSyntaxErrorAsPrimitiveResult& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::operator==(const WithErrorSyntaxErrorAsPrimitiveResult& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::operator!=(const WithErrorSyntaxErrorAsPrimitiveResult& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Storage_> test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::WithResponse(::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse val) {
  return WithErrorSyntaxErrorAsPrimitiveResult(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Storage_> test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::response() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Storage_> test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::response() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult& test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::response(::test_protocols::WithErrorSyntaxErrorAsPrimitiveResponse value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::WithErr(uint32_t val) {
  return WithErrorSyntaxErrorAsPrimitiveResult(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Storage_> test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::err() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::Storage_> test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::err() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_protocols::WithErrorSyntaxErrorAsPrimitiveResult& test_protocols::WithErrorSyntaxErrorAsPrimitiveResult::err(uint32_t value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}

::test_protocols::WithErrorSyntaxErrorAsEnumResult::WithErrorSyntaxErrorAsEnumResult(WithErrorSyntaxErrorAsEnumResult&& other) noexcept : WithErrorSyntaxErrorAsEnumResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocols::WithErrorSyntaxErrorAsEnumResult& ::test_protocols::WithErrorSyntaxErrorAsEnumResult::operator=(WithErrorSyntaxErrorAsEnumResult&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocols::WithErrorSyntaxErrorAsEnumResult::WithErrorSyntaxErrorAsEnumResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocols::WithErrorSyntaxErrorAsEnumResult::WithErrorSyntaxErrorAsEnumResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocols::WithErrorSyntaxErrorAsEnumResult::Tag test_protocols::WithErrorSyntaxErrorAsEnumResult::Which() const {
  return WithErrorSyntaxErrorAsEnumResult::IndexToTag(storage_->index()).value();
}

size_t test_protocols::WithErrorSyntaxErrorAsEnumResult::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocols::WithErrorSyntaxErrorAsEnumResult::Tag tag) {
  switch (tag) {
    case ::test_protocols::WithErrorSyntaxErrorAsEnumResult::Tag::kResponse:
      return 1;
    case ::test_protocols::WithErrorSyntaxErrorAsEnumResult::Tag::kErr:
      return 2;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocols::WithErrorSyntaxErrorAsEnumResult::Tag> test_protocols::WithErrorSyntaxErrorAsEnumResult::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocols::WithErrorSyntaxErrorAsEnumResult::Tag::kResponse;
    case 2:
      return ::test_protocols::WithErrorSyntaxErrorAsEnumResult::Tag::kErr;
    default:
      return std::nullopt;
  }
}

::test_protocols::WithErrorSyntaxErrorAsEnumResult::WithErrorSyntaxErrorAsEnumResult(const WithErrorSyntaxErrorAsEnumResult& other) noexcept : WithErrorSyntaxErrorAsEnumResult(other.CloneStorage_()) {}

::test_protocols::WithErrorSyntaxErrorAsEnumResult& test_protocols::WithErrorSyntaxErrorAsEnumResult::operator=(const WithErrorSyntaxErrorAsEnumResult& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocols::WithErrorSyntaxErrorAsEnumResult::operator==(const WithErrorSyntaxErrorAsEnumResult& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocols::WithErrorSyntaxErrorAsEnumResult::operator!=(const WithErrorSyntaxErrorAsEnumResult& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocols::WithErrorSyntaxErrorAsEnumResult::Storage_> test_protocols::WithErrorSyntaxErrorAsEnumResult::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_protocols::WithErrorSyntaxErrorAsEnumResult test_protocols::WithErrorSyntaxErrorAsEnumResult::WithResponse(::test_protocols::WithErrorSyntaxErrorAsEnumResponse val) {
  return WithErrorSyntaxErrorAsEnumResult(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocols::WithErrorSyntaxErrorAsEnumResult::Storage_> test_protocols::WithErrorSyntaxErrorAsEnumResult::response() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocols::WithErrorSyntaxErrorAsEnumResult::Storage_> test_protocols::WithErrorSyntaxErrorAsEnumResult::response() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocols::WithErrorSyntaxErrorAsEnumResult& test_protocols::WithErrorSyntaxErrorAsEnumResult::response(::test_protocols::WithErrorSyntaxErrorAsEnumResponse value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_protocols::WithErrorSyntaxErrorAsEnumResult test_protocols::WithErrorSyntaxErrorAsEnumResult::WithErr(::test_protocols::ErrorEnum val) {
  return WithErrorSyntaxErrorAsEnumResult(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_protocols::WithErrorSyntaxErrorAsEnumResult::Storage_> test_protocols::WithErrorSyntaxErrorAsEnumResult::err() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_protocols::WithErrorSyntaxErrorAsEnumResult::Storage_> test_protocols::WithErrorSyntaxErrorAsEnumResult::err() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_protocols::WithErrorSyntaxErrorAsEnumResult& test_protocols::WithErrorSyntaxErrorAsEnumResult::err(::test_protocols::ErrorEnum value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}
#ifdef __Fuchsia__

::test_protocols::WithErrorSyntaxHandleInResultResult::WithErrorSyntaxHandleInResultResult(WithErrorSyntaxHandleInResultResult&& other) noexcept : WithErrorSyntaxHandleInResultResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocols::WithErrorSyntaxHandleInResultResult& ::test_protocols::WithErrorSyntaxHandleInResultResult::operator=(WithErrorSyntaxHandleInResultResult&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocols::WithErrorSyntaxHandleInResultResult::WithErrorSyntaxHandleInResultResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocols::WithErrorSyntaxHandleInResultResult::WithErrorSyntaxHandleInResultResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocols::WithErrorSyntaxHandleInResultResult::Tag test_protocols::WithErrorSyntaxHandleInResultResult::Which() const {
  return WithErrorSyntaxHandleInResultResult::IndexToTag(storage_->index()).value();
}

size_t test_protocols::WithErrorSyntaxHandleInResultResult::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocols::WithErrorSyntaxHandleInResultResult::Tag tag) {
  switch (tag) {
    case ::test_protocols::WithErrorSyntaxHandleInResultResult::Tag::kResponse:
      return 1;
    case ::test_protocols::WithErrorSyntaxHandleInResultResult::Tag::kErr:
      return 2;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_protocols::WithErrorSyntaxHandleInResultResult::Tag> test_protocols::WithErrorSyntaxHandleInResultResult::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocols::WithErrorSyntaxHandleInResultResult::Tag::kResponse;
    case 2:
      return ::test_protocols::WithErrorSyntaxHandleInResultResult::Tag::kErr;
    default:
      return std::nullopt;
  }
}

::test_protocols::WithErrorSyntaxHandleInResultResult test_protocols::WithErrorSyntaxHandleInResultResult::WithResponse(::test_protocols::WithErrorSyntaxHandleInResultResponse val) {
  return WithErrorSyntaxHandleInResultResult(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocols::WithErrorSyntaxHandleInResultResult::Storage_> test_protocols::WithErrorSyntaxHandleInResultResult::response() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocols::WithErrorSyntaxHandleInResultResult::Storage_> test_protocols::WithErrorSyntaxHandleInResultResult::response() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocols::WithErrorSyntaxHandleInResultResult& test_protocols::WithErrorSyntaxHandleInResultResult::response(::test_protocols::WithErrorSyntaxHandleInResultResponse value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}
::test_protocols::WithErrorSyntaxHandleInResultResult test_protocols::WithErrorSyntaxHandleInResultResult::WithErr(uint32_t val) {
  return WithErrorSyntaxHandleInResultResult(std::make_shared<Storage_>(
      std::in_place_index_t<2>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<2, ::test_protocols::WithErrorSyntaxHandleInResultResult::Storage_> test_protocols::WithErrorSyntaxHandleInResultResult::err() const {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<2, ::test_protocols::WithErrorSyntaxHandleInResultResult::Storage_> test_protocols::WithErrorSyntaxHandleInResultResult::err() {
  return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
}

::test_protocols::WithErrorSyntaxHandleInResultResult& test_protocols::WithErrorSyntaxHandleInResultResult::err(uint32_t value) {
  storage_->emplace<2>(std::move(value));
  return *this;
}

#endif  // __Fuchsia__

::test_protocols::TheUnion::TheUnion(TheUnion&& other) noexcept : TheUnion(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_protocols::TheUnion& ::test_protocols::TheUnion::operator=(TheUnion&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_protocols::TheUnion::TheUnion(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_protocols::TheUnion::TheUnion(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_protocols::TheUnion::Tag test_protocols::TheUnion::Which() const {
  return TheUnion::IndexToTag(storage_->index()).value();
}

size_t test_protocols::TheUnion::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_protocols::TheUnion::Tag tag) {
  switch (tag) {
    case ::test_protocols::TheUnion::Tag::kV:
      return 1;
    default: {
      return 0;
    }
  }
}

std::optional<::test_protocols::TheUnion::Tag> test_protocols::TheUnion::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_protocols::TheUnion::Tag::kV;
    default:
      return ::test_protocols::TheUnion::Tag::_do_not_handle_this__write_a_default_case_instead;
  }
}

::test_protocols::TheUnion::TheUnion(const TheUnion& other) noexcept : TheUnion(other.CloneStorage_()) {}

::test_protocols::TheUnion& test_protocols::TheUnion::operator=(const TheUnion& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_protocols::TheUnion::operator==(const TheUnion& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_protocols::TheUnion::operator!=(const TheUnion& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_protocols::TheUnion::Storage_> test_protocols::TheUnion::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
bool test_protocols::TheUnion::IsUnknown() const {
  return Which() == ::test_protocols::TheUnion::Tag::_do_not_handle_this__write_a_default_case_instead;
}
::test_protocols::TheUnion test_protocols::TheUnion::WithV(uint32_t val) {
  return TheUnion(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_protocols::TheUnion::Storage_> test_protocols::TheUnion::v() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_protocols::TheUnion::Storage_> test_protocols::TheUnion::v() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_protocols::TheUnion& test_protocols::TheUnion::v(uint32_t value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}

#pragma clang diagnostic pop
