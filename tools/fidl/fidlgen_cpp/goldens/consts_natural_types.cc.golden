// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.consts/cpp/natural_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

void fidl::internal::NaturalCodingTraits<::test_consts::BitsType, ::fidl::internal::NaturalCodingConstraintEmpty>::Encode(
    fidl::internal::NaturalEncoder* encoder, ::test_consts::BitsType* value, size_t offset, size_t recursion_depth) {
  if (unlikely(static_cast<uint32_t>(*value) & ~3ull)) {
    encoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
  *encoder->template GetPtr<::test_consts::BitsType>(offset) = *value;
}
void fidl::internal::NaturalCodingTraits<::test_consts::BitsType, ::fidl::internal::NaturalCodingConstraintEmpty>::Decode(
    fidl::internal::NaturalDecoder* decoder, ::test_consts::BitsType* value, size_t offset, size_t recursion_depth) {
  *value = *decoder->template GetPtr<::test_consts::BitsType>(offset);
  if (unlikely(static_cast<uint32_t>(*value) & ~3ull)) {
    decoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
}

void fidl::internal::NaturalCodingTraits<::test_consts::EnumType, ::fidl::internal::NaturalCodingConstraintEmpty>::Encode(
    fidl::internal::NaturalEncoder* encoder, ::test_consts::EnumType* value, size_t offset, size_t recursion_depth) {
  switch (*value) {
    case ::test_consts::EnumType::kValue:
    case ::test_consts::EnumType::kTrue:
      break;
    default:
      encoder->SetError(::fidl::internal::kCodingErrorUnknownEnumValue);
      return;
  }
  *encoder->template GetPtr<::test_consts::EnumType>(offset) = *value;
}

void fidl::internal::NaturalCodingTraits<::test_consts::EnumType, ::fidl::internal::NaturalCodingConstraintEmpty>::Decode(
    fidl::internal::NaturalDecoder* decoder, ::test_consts::EnumType* value, size_t offset, size_t recursion_depth) {
  *value = *decoder->template GetPtr<::test_consts::EnumType>(offset);
  switch (*value) {
    case ::test_consts::EnumType::kValue:
    case ::test_consts::EnumType::kTrue:
      break;
    default:
      decoder->SetError(::fidl::internal::kCodingErrorUnknownEnumValue);
      return;
  }
}

const char* ::test_consts::kUsername = "\"squeenze\"";

#pragma clang diagnostic pop
