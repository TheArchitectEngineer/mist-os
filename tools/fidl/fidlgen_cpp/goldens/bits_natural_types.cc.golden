// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.bits/cpp/natural_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

void fidl::internal::NaturalCodingTraits<::test_bits::MyBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Encode(
    fidl::internal::NaturalEncoder* encoder, ::test_bits::MyBits* value, size_t offset, size_t recursion_depth) {
  if (unlikely(static_cast<uint32_t>(*value) & ~7ull)) {
    encoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
  *encoder->template GetPtr<::test_bits::MyBits>(offset) = *value;
}
void fidl::internal::NaturalCodingTraits<::test_bits::MyBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Decode(
    fidl::internal::NaturalDecoder* decoder, ::test_bits::MyBits* value, size_t offset, size_t recursion_depth) {
  *value = *decoder->template GetPtr<::test_bits::MyBits>(offset);
  if (unlikely(static_cast<uint32_t>(*value) & ~7ull)) {
    decoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
}

void fidl::internal::NaturalCodingTraits<::test_bits::StrictBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Encode(
    fidl::internal::NaturalEncoder* encoder, ::test_bits::StrictBits* value, size_t offset, size_t recursion_depth) {
  if (unlikely(static_cast<uint64_t>(*value) & ~9223372036854775809ull)) {
    encoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
  *encoder->template GetPtr<::test_bits::StrictBits>(offset) = *value;
}
void fidl::internal::NaturalCodingTraits<::test_bits::StrictBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Decode(
    fidl::internal::NaturalDecoder* decoder, ::test_bits::StrictBits* value, size_t offset, size_t recursion_depth) {
  *value = *decoder->template GetPtr<::test_bits::StrictBits>(offset);
  if (unlikely(static_cast<uint64_t>(*value) & ~9223372036854775809ull)) {
    decoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
}

void fidl::internal::NaturalCodingTraits<::test_bits::FlexibleBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Encode(
    fidl::internal::NaturalEncoder* encoder, ::test_bits::FlexibleBits* value, size_t offset, size_t recursion_depth) {
  *encoder->template GetPtr<::test_bits::FlexibleBits>(offset) = *value;
}
void fidl::internal::NaturalCodingTraits<::test_bits::FlexibleBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Decode(
    fidl::internal::NaturalDecoder* decoder, ::test_bits::FlexibleBits* value, size_t offset, size_t recursion_depth) {
  *value = *decoder->template GetPtr<::test_bits::FlexibleBits>(offset);
}

void fidl::internal::NaturalCodingTraits<::test_bits::EmptyBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Encode(
    fidl::internal::NaturalEncoder* encoder, ::test_bits::EmptyBits* value, size_t offset, size_t recursion_depth) {
  *encoder->template GetPtr<::test_bits::EmptyBits>(offset) = *value;
}
void fidl::internal::NaturalCodingTraits<::test_bits::EmptyBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Decode(
    fidl::internal::NaturalDecoder* decoder, ::test_bits::EmptyBits* value, size_t offset, size_t recursion_depth) {
  *value = *decoder->template GetPtr<::test_bits::EmptyBits>(offset);
}

#pragma clang diagnostic pop
