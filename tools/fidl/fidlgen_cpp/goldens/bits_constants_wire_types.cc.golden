// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.bitsconstants/cpp/wire_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

static_assert(std::is_standard_layout_v<::test_bitsconstants::wire::BitsType>);
static_assert(sizeof(::test_bitsconstants::wire::BitsType) == sizeof(uint32_t));

template <bool IsRecursive>
void fidl::internal::WireCodingTraits<::test_bitsconstants::wire::BitsType, ::fidl::internal::WireCodingConstraintEmpty, IsRecursive>::Encode(
    ::fidl::internal::WireEncoder* encoder, ::test_bitsconstants::wire::BitsType* value, ::fidl::internal::WirePosition position, ::fidl::internal::RecursionDepth<IsRecursive> recursion_depth) {
  if (unlikely(static_cast<uint32_t>(*value) & ~131ull)) {
    encoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
  *position.As<::test_bitsconstants::wire::BitsType>() = *value;
}

template <bool IsRecursive>
void fidl::internal::WireCodingTraits<::test_bitsconstants::wire::BitsType, ::fidl::internal::WireCodingConstraintEmpty, IsRecursive>::Decode(
    ::fidl::internal::WireDecoder* decoder, ::fidl::internal::WirePosition position, ::fidl::internal::RecursionDepth<IsRecursive> recursion_depth) {
  ::test_bitsconstants::wire::BitsType value = *position.As<::test_bitsconstants::wire::BitsType>();
  if (unlikely(static_cast<uint32_t>(value) & ~131ull)) {
    decoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
}

template struct ::fidl::internal::WireCodingTraits<::test_bitsconstants::wire::BitsType, ::fidl::internal::WireCodingConstraintEmpty, true>;
template struct ::fidl::internal::WireCodingTraits<::test_bitsconstants::wire::BitsType, ::fidl::internal::WireCodingConstraintEmpty, false>;

#pragma clang diagnostic pop
