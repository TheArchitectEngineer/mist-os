// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json
#ifdef __Fuchsia__

#include <fidl/test.handles/cpp/wire_messaging.h>

#include <memory>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

::fidl::internal::WireEventDispatcher<::test_handles::SomeProtocol>::WireEventDispatcher(::fidl::internal::WireEventHandlerInterface<::test_handles::SomeProtocol>* event_handler)
    : IncomingEventDispatcher(event_handler) {}

::fidl::Status fidl::WireSyncEventHandler<::test_handles::SomeProtocol>::HandleOneEvent(
    ::fidl::UnownedClientEnd<::test_handles::SomeProtocol> client_end) {
  ::fidl::internal::IncomingEventsStorage<::test_handles::SomeProtocol> event_storage;
  fidl::internal::WireEventDispatcher<::test_handles::SomeProtocol> dispatcher{this};
  return HandleOneEventImpl_(client_end.channel(), event_storage.view(), dispatcher);
}

constexpr ::fidl::internal::MethodEntry fidl::internal::WireServerDispatcher<::test_handles::SomeProtocol>::entries_[] = {};

const ::fidl::internal::MethodEntry* fidl::internal::WireServerDispatcher<::test_handles::SomeProtocol>::entries_end_ =
    &entries_[0];

::fidl::DispatchResult fidl::internal::WireServerDispatcher<::test_handles::SomeProtocol>::TryDispatch(
    ::fidl::WireServer<::test_handles::SomeProtocol>* impl, ::fidl::IncomingHeaderAndMessage& msg,
    internal::MessageStorageViewBase* storage_view, ::fidl::Transaction* txn) {
  return ::fidl::internal::TryDispatch(
      impl, msg, storage_view, txn, entries_, entries_end_);
}

void fidl::internal::WireServerDispatcher<::test_handles::SomeProtocol>::Dispatch(::fidl::WireServer<::test_handles::SomeProtocol>* impl, ::fidl::IncomingHeaderAndMessage&& msg,
                                                                                  internal::MessageStorageViewBase* storage_view, ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, storage_view, txn, entries_, entries_end_,
                             &unknown_method_handler_entry_);
}

void fidl::WireServer<::test_handles::SomeProtocol>::dispatch_message(
    ::fidl::IncomingHeaderAndMessage&& msg, ::fidl::Transaction* txn,
    ::fidl::internal::MessageStorageViewBase* storage_view) {
  ::fidl::internal::WireServerDispatcher<::test_handles::SomeProtocol>::Dispatch(this, std::move(msg), storage_view, txn);
}

fidl::WireServer<::test_handles::SomeProtocol>::Handler fidl::WireServer<::test_handles::SomeProtocol>::bind_handler(async_dispatcher_t* dispatcher) {
  return [impl = this, dispatcher = dispatcher](::fidl::ServerEnd<::test_handles::SomeProtocol> request) {
    (void)::fidl::BindServer(dispatcher, std::move(request), impl);
  };
}

#pragma clang diagnostic pop

#endif  // __Fuchsia__
