// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.placementofattributes/cpp/natural_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

void fidl::internal::NaturalCodingTraits<::test_placementofattributes::ExampleBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Encode(
    fidl::internal::NaturalEncoder* encoder, ::test_placementofattributes::ExampleBits* value, size_t offset, size_t recursion_depth) {
  if (unlikely(static_cast<uint32_t>(*value) & ~1ull)) {
    encoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
  *encoder->template GetPtr<::test_placementofattributes::ExampleBits>(offset) = *value;
}
void fidl::internal::NaturalCodingTraits<::test_placementofattributes::ExampleBits, ::fidl::internal::NaturalCodingConstraintEmpty>::Decode(
    fidl::internal::NaturalDecoder* decoder, ::test_placementofattributes::ExampleBits* value, size_t offset, size_t recursion_depth) {
  *value = *decoder->template GetPtr<::test_placementofattributes::ExampleBits>(offset);
  if (unlikely(static_cast<uint32_t>(*value) & ~1ull)) {
    decoder->SetError(::fidl::internal::kCodingErrorUnknownBitSetInBitsValue);
  }
}

void fidl::internal::NaturalCodingTraits<::test_placementofattributes::ExampleEnum, ::fidl::internal::NaturalCodingConstraintEmpty>::Encode(
    fidl::internal::NaturalEncoder* encoder, ::test_placementofattributes::ExampleEnum* value, size_t offset, size_t recursion_depth) {
  switch (*value) {
    case ::test_placementofattributes::ExampleEnum::kMember:
      break;
    default:
      encoder->SetError(::fidl::internal::kCodingErrorUnknownEnumValue);
      return;
  }
  *encoder->template GetPtr<::test_placementofattributes::ExampleEnum>(offset) = *value;
}

void fidl::internal::NaturalCodingTraits<::test_placementofattributes::ExampleEnum, ::fidl::internal::NaturalCodingConstraintEmpty>::Decode(
    fidl::internal::NaturalDecoder* decoder, ::test_placementofattributes::ExampleEnum* value, size_t offset, size_t recursion_depth) {
  *value = *decoder->template GetPtr<::test_placementofattributes::ExampleEnum>(offset);
  switch (*value) {
    case ::test_placementofattributes::ExampleEnum::kMember:
      break;
    default:
      decoder->SetError(::fidl::internal::kCodingErrorUnknownEnumValue);
      return;
  }
}

::test_placementofattributes::ExampleProtocolMethodRequest::ExampleProtocolMethodRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_placementofattributes::ExampleProtocolMethodRequest::ExampleProtocolMethodRequest(::test_exampleusing::Empty arg) noexcept
    : storage_({.arg = std::move(arg)}) {}

::test_placementofattributes::ExampleProtocolMethodRequest::ExampleProtocolMethodRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ExampleProtocolMethodRequest(Storage_{
                                                                                                                                                           .arg = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                       }) {}
::test_placementofattributes::ExampleProtocolMethodRequest::ExampleProtocolMethodRequest(const ::test_placementofattributes::ExampleProtocolMethodRequest& other) noexcept : ::test_placementofattributes::ExampleProtocolMethodRequest(other.CloneStorage_()) {}

::test_placementofattributes::ExampleProtocolMethodRequest& test_placementofattributes::ExampleProtocolMethodRequest::operator=(const ::test_placementofattributes::ExampleProtocolMethodRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_placementofattributes::ExampleProtocolMethodRequest::operator==(const ExampleProtocolMethodRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_placementofattributes::ExampleProtocolMethodRequest, 1>::Equal(this, &other);
}

bool test_placementofattributes::ExampleProtocolMethodRequest::operator!=(const ExampleProtocolMethodRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_placementofattributes::ExampleProtocolMethodRequest, 1>::Equal(this, &other);
}

::test_placementofattributes::ExampleProtocolMethodRequest::Storage_ test_placementofattributes::ExampleProtocolMethodRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.arg)};
}
const ::test_exampleusing::Empty&
test_placementofattributes::ExampleProtocolMethodRequest::arg() const {
  return storage_.arg;
}

::test_exampleusing::Empty& ::test_placementofattributes::ExampleProtocolMethodRequest::arg() {
  return storage_.arg;
}

::test_placementofattributes::ExampleProtocolMethodRequest& ::test_placementofattributes::ExampleProtocolMethodRequest::arg(::test_exampleusing::Empty value) {
  storage_.arg = std::move(value);
  return *this;
}

::test_placementofattributes::ExampleStruct::ExampleStruct(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_placementofattributes::ExampleStruct::ExampleStruct(uint32_t member) noexcept
    : storage_({.member = std::move(member)}) {}

::test_placementofattributes::ExampleStruct::ExampleStruct(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ExampleStruct(Storage_{
                                                                                                                             .member = {},
                                                                                                                         }) {}
::test_placementofattributes::ExampleStruct::ExampleStruct(const ::test_placementofattributes::ExampleStruct& other) noexcept : ::test_placementofattributes::ExampleStruct(other.CloneStorage_()) {}

::test_placementofattributes::ExampleStruct& test_placementofattributes::ExampleStruct::operator=(const ::test_placementofattributes::ExampleStruct& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_placementofattributes::ExampleStruct::operator==(const ExampleStruct& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_placementofattributes::ExampleStruct, 4>::Equal(this, &other);
}

bool test_placementofattributes::ExampleStruct::operator!=(const ExampleStruct& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_placementofattributes::ExampleStruct, 4>::Equal(this, &other);
}

::test_placementofattributes::ExampleStruct::Storage_ test_placementofattributes::ExampleStruct::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.member)};
}
uint32_t
test_placementofattributes::ExampleStruct::member() const {
  return storage_.member;
}

uint32_t& ::test_placementofattributes::ExampleStruct::member() {
  return storage_.member;
}

::test_placementofattributes::ExampleStruct& ::test_placementofattributes::ExampleStruct::member(uint32_t value) {
  storage_.member = std::move(value);
  return *this;
}

::test_placementofattributes::ExampleTable::ExampleTable(::test_placementofattributes::ExampleTable::Storage_ storage) noexcept : storage_(std::move(storage)) {}

::test_placementofattributes::ExampleTable::ExampleTable(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : ExampleTable(Storage_{}) {}

::test_placementofattributes::ExampleTable::ExampleTable(const ::test_placementofattributes::ExampleTable& other) noexcept : ExampleTable(other.CloneStorage_()) {}

::test_placementofattributes::ExampleTable& ::test_placementofattributes::ExampleTable::operator=(const ::test_placementofattributes::ExampleTable& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_placementofattributes::ExampleTable::operator==(const ExampleTable& other) const noexcept {
  return ::fidl::internal::NaturalTableCodingTraits<::test_placementofattributes::ExampleTable>::Equal(this, &other);
}
bool test_placementofattributes::ExampleTable::operator!=(const ExampleTable& other) const noexcept {
  return !::fidl::internal::NaturalTableCodingTraits<::test_placementofattributes::ExampleTable>::Equal(this, &other);
}

::test_placementofattributes::ExampleTable::Storage_ test_placementofattributes::ExampleTable::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.member)};
}

bool test_placementofattributes::ExampleTable::IsEmpty() const {
  return !(storage_.member.has_value());
}
const std::optional<uint32_t>& test_placementofattributes::ExampleTable::member() const {
  return storage_.member;
}

::std::optional<uint32_t>& test_placementofattributes::ExampleTable::member() {
  return storage_.member;
}

::test_placementofattributes::ExampleTable& test_placementofattributes::ExampleTable::member(std::optional<uint32_t> value) {
  storage_.member = std::move(value);
  return *this;
}

::test_placementofattributes::ExampleUnion::ExampleUnion(ExampleUnion&& other) noexcept : ExampleUnion(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
  *storage_ = std::move(*other.storage_);
}

::test_placementofattributes::ExampleUnion& ::test_placementofattributes::ExampleUnion::operator=(ExampleUnion&& other) noexcept {
  if (this != &other) {
    *storage_ = std::move(*other.storage_);
  }
  return *this;
}

::test_placementofattributes::ExampleUnion::ExampleUnion(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
    : storage_(std::make_shared<Storage_>()) {}

::test_placementofattributes::ExampleUnion::ExampleUnion(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

::test_placementofattributes::ExampleUnion::Tag test_placementofattributes::ExampleUnion::Which() const {
  return ExampleUnion::IndexToTag(storage_->index()).value();
}

size_t test_placementofattributes::ExampleUnion::TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_placementofattributes::ExampleUnion::Tag tag) {
  switch (tag) {
    case ::test_placementofattributes::ExampleUnion::Tag::kVariant:
      return 1;
    default: {
      decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
      return 0;
    }
  }
}

std::optional<::test_placementofattributes::ExampleUnion::Tag> test_placementofattributes::ExampleUnion::IndexToTag(size_t index) {
  switch (index) {
    case 1:
      return ::test_placementofattributes::ExampleUnion::Tag::kVariant;
    default:
      return std::nullopt;
  }
}

::test_placementofattributes::ExampleUnion::ExampleUnion(const ExampleUnion& other) noexcept : ExampleUnion(other.CloneStorage_()) {}

::test_placementofattributes::ExampleUnion& test_placementofattributes::ExampleUnion::operator=(const ExampleUnion& other) noexcept {
  if (this != &other) {
    storage_ = other.CloneStorage_();
  }
  return *this;
}

bool test_placementofattributes::ExampleUnion::operator==(const ExampleUnion& other) const noexcept {
  return *storage_ == *other.storage_;
}
bool test_placementofattributes::ExampleUnion::operator!=(const ExampleUnion& other) const noexcept {
  return *storage_ != *other.storage_;
}

std::shared_ptr<::test_placementofattributes::ExampleUnion::Storage_> test_placementofattributes::ExampleUnion::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
::test_placementofattributes::ExampleUnion test_placementofattributes::ExampleUnion::WithVariant(uint32_t val) {
  return ExampleUnion(std::make_shared<Storage_>(
      std::in_place_index_t<1>{},
      std::move(val)));
}

const ::fidl::internal::UnionMemberView<1, ::test_placementofattributes::ExampleUnion::Storage_> test_placementofattributes::ExampleUnion::variant() const {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::fidl::internal::UnionMemberView<1, ::test_placementofattributes::ExampleUnion::Storage_> test_placementofattributes::ExampleUnion::variant() {
  return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
}

::test_placementofattributes::ExampleUnion& test_placementofattributes::ExampleUnion::variant(uint32_t value) {
  storage_->emplace<1>(std::move(value));
  return *this;
}

#pragma clang diagnostic pop
