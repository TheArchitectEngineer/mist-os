
#ifdef __Fuchsia__

#include <fidl/test.handles/cpp/driver/natural_messaging.h>
#include <lib/fidl_driver/cpp/unknown_interactions.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

::fidl::internal::NaturalEventDispatcher<::test_handles::DriverProtocol>::NaturalEventDispatcher(::fidl::internal::NaturalEventHandlerInterface<::test_handles::DriverProtocol>* event_handler)
    : IncomingEventDispatcher(event_handler) {}

::fidl::ProtocolHandler<::test_handles::DriverProtocol> fdf::Server<::test_handles::DriverProtocol>::bind_handler(fdf_dispatcher_t* dispatcher) {
  return [impl = this, dispatcher = dispatcher](::fdf::ServerEnd<::test_handles::DriverProtocol> request) {
    (void)::fdf::BindServer(dispatcher, std::move(request), impl);
  };
}

constexpr ::fidl::internal::MethodEntry fidl::internal::NaturalServerDispatcher<::test_handles::DriverProtocol>::entries_[] = {};

const ::fidl::internal::MethodEntry* fidl::internal::NaturalServerDispatcher<::test_handles::DriverProtocol>::entries_end_ =
    &entries_[0];

void fidl::internal::NaturalServerDispatcher<::test_handles::DriverProtocol>::Dispatch(::fdf::Server<::test_handles::DriverProtocol>* impl, ::fidl::IncomingHeaderAndMessage&& msg,
                                                                                       internal::MessageStorageViewBase* storage_view, ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, storage_view, txn, entries_, entries_end_, &unknown_method_handler_entry_);
}

void fdf::Server<::test_handles::DriverProtocol>::dispatch_message(
    ::fidl::IncomingHeaderAndMessage&& msg, ::fidl::Transaction* txn,
    ::fidl::internal::MessageStorageViewBase* storage_view) {
  ::fidl::internal::NaturalServerDispatcher<::test_handles::DriverProtocol>::Dispatch(this, std::move(msg), storage_view, txn);
}

#pragma clang diagnostic pop

#endif  // __Fuchsia__
