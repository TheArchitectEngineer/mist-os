// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <fidl/test.emptystruct/cpp/natural_types.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

::test_emptystruct::Empty::Empty(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_emptystruct::Empty::Empty(uint8_t __reserved) noexcept
    : storage_({.__reserved = std::move(__reserved)}) {}

::test_emptystruct::Empty::Empty(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : Empty(Storage_{
                                                                                                   .__reserved = 0u,
                                                                                               }) {}
::test_emptystruct::Empty::Empty(const ::test_emptystruct::Empty& other) noexcept : ::test_emptystruct::Empty(other.CloneStorage_()) {}

::test_emptystruct::Empty& test_emptystruct::Empty::operator=(const ::test_emptystruct::Empty& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_emptystruct::Empty::operator==(const Empty& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::Empty, 1>::Equal(this, &other);
}

bool test_emptystruct::Empty::operator!=(const Empty& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::Empty, 1>::Equal(this, &other);
}

::test_emptystruct::Empty::Storage_ test_emptystruct::Empty::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.__reserved)};
}
uint8_t
test_emptystruct::Empty::__reserved() const {
  return storage_.__reserved;
}

uint8_t& ::test_emptystruct::Empty::__reserved() {
  return storage_.__reserved;
}

::test_emptystruct::Empty& ::test_emptystruct::Empty::__reserved(uint8_t value) {
  storage_.__reserved = std::move(value);
  return *this;
}

::test_emptystruct::EmptyProtocolSendRequest::EmptyProtocolSendRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_emptystruct::EmptyProtocolSendRequest::EmptyProtocolSendRequest(::test_emptystruct::Empty e) noexcept
    : storage_({.e = std::move(e)}) {}

::test_emptystruct::EmptyProtocolSendRequest::EmptyProtocolSendRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : EmptyProtocolSendRequest(Storage_{
                                                                                                                                         .e = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                     }) {}
::test_emptystruct::EmptyProtocolSendRequest::EmptyProtocolSendRequest(const ::test_emptystruct::EmptyProtocolSendRequest& other) noexcept : ::test_emptystruct::EmptyProtocolSendRequest(other.CloneStorage_()) {}

::test_emptystruct::EmptyProtocolSendRequest& test_emptystruct::EmptyProtocolSendRequest::operator=(const ::test_emptystruct::EmptyProtocolSendRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_emptystruct::EmptyProtocolSendRequest::operator==(const EmptyProtocolSendRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::EmptyProtocolSendRequest, 1>::Equal(this, &other);
}

bool test_emptystruct::EmptyProtocolSendRequest::operator!=(const EmptyProtocolSendRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::EmptyProtocolSendRequest, 1>::Equal(this, &other);
}

::test_emptystruct::EmptyProtocolSendRequest::Storage_ test_emptystruct::EmptyProtocolSendRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.e)};
}
const ::test_emptystruct::Empty&
test_emptystruct::EmptyProtocolSendRequest::e() const {
  return storage_.e;
}

::test_emptystruct::Empty& ::test_emptystruct::EmptyProtocolSendRequest::e() {
  return storage_.e;
}

::test_emptystruct::EmptyProtocolSendRequest& ::test_emptystruct::EmptyProtocolSendRequest::e(::test_emptystruct::Empty value) {
  storage_.e = std::move(value);
  return *this;
}

::test_emptystruct::EmptyProtocolReceiveRequest::EmptyProtocolReceiveRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_emptystruct::EmptyProtocolReceiveRequest::EmptyProtocolReceiveRequest(::test_emptystruct::Empty e) noexcept
    : storage_({.e = std::move(e)}) {}

::test_emptystruct::EmptyProtocolReceiveRequest::EmptyProtocolReceiveRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : EmptyProtocolReceiveRequest(Storage_{
                                                                                                                                               .e = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                           }) {}
::test_emptystruct::EmptyProtocolReceiveRequest::EmptyProtocolReceiveRequest(const ::test_emptystruct::EmptyProtocolReceiveRequest& other) noexcept : ::test_emptystruct::EmptyProtocolReceiveRequest(other.CloneStorage_()) {}

::test_emptystruct::EmptyProtocolReceiveRequest& test_emptystruct::EmptyProtocolReceiveRequest::operator=(const ::test_emptystruct::EmptyProtocolReceiveRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_emptystruct::EmptyProtocolReceiveRequest::operator==(const EmptyProtocolReceiveRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::EmptyProtocolReceiveRequest, 1>::Equal(this, &other);
}

bool test_emptystruct::EmptyProtocolReceiveRequest::operator!=(const EmptyProtocolReceiveRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::EmptyProtocolReceiveRequest, 1>::Equal(this, &other);
}

::test_emptystruct::EmptyProtocolReceiveRequest::Storage_ test_emptystruct::EmptyProtocolReceiveRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.e)};
}
const ::test_emptystruct::Empty&
test_emptystruct::EmptyProtocolReceiveRequest::e() const {
  return storage_.e;
}

::test_emptystruct::Empty& ::test_emptystruct::EmptyProtocolReceiveRequest::e() {
  return storage_.e;
}

::test_emptystruct::EmptyProtocolReceiveRequest& ::test_emptystruct::EmptyProtocolReceiveRequest::e(::test_emptystruct::Empty value) {
  storage_.e = std::move(value);
  return *this;
}

::test_emptystruct::EmptyProtocolSendAndReceiveRequest::EmptyProtocolSendAndReceiveRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_emptystruct::EmptyProtocolSendAndReceiveRequest::EmptyProtocolSendAndReceiveRequest(::test_emptystruct::Empty e) noexcept
    : storage_({.e = std::move(e)}) {}

::test_emptystruct::EmptyProtocolSendAndReceiveRequest::EmptyProtocolSendAndReceiveRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : EmptyProtocolSendAndReceiveRequest(Storage_{
                                                                                                                                                             .e = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                         }) {}
::test_emptystruct::EmptyProtocolSendAndReceiveRequest::EmptyProtocolSendAndReceiveRequest(const ::test_emptystruct::EmptyProtocolSendAndReceiveRequest& other) noexcept : ::test_emptystruct::EmptyProtocolSendAndReceiveRequest(other.CloneStorage_()) {}

::test_emptystruct::EmptyProtocolSendAndReceiveRequest& test_emptystruct::EmptyProtocolSendAndReceiveRequest::operator=(const ::test_emptystruct::EmptyProtocolSendAndReceiveRequest& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_emptystruct::EmptyProtocolSendAndReceiveRequest::operator==(const EmptyProtocolSendAndReceiveRequest& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::EmptyProtocolSendAndReceiveRequest, 1>::Equal(this, &other);
}

bool test_emptystruct::EmptyProtocolSendAndReceiveRequest::operator!=(const EmptyProtocolSendAndReceiveRequest& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::EmptyProtocolSendAndReceiveRequest, 1>::Equal(this, &other);
}

::test_emptystruct::EmptyProtocolSendAndReceiveRequest::Storage_ test_emptystruct::EmptyProtocolSendAndReceiveRequest::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.e)};
}
const ::test_emptystruct::Empty&
test_emptystruct::EmptyProtocolSendAndReceiveRequest::e() const {
  return storage_.e;
}

::test_emptystruct::Empty& ::test_emptystruct::EmptyProtocolSendAndReceiveRequest::e() {
  return storage_.e;
}

::test_emptystruct::EmptyProtocolSendAndReceiveRequest& ::test_emptystruct::EmptyProtocolSendAndReceiveRequest::e(::test_emptystruct::Empty value) {
  storage_.e = std::move(value);
  return *this;
}

::test_emptystruct::EmptyProtocolSendAndReceiveResponse::EmptyProtocolSendAndReceiveResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
::test_emptystruct::EmptyProtocolSendAndReceiveResponse::EmptyProtocolSendAndReceiveResponse(::test_emptystruct::Empty e) noexcept
    : storage_({.e = std::move(e)}) {}

::test_emptystruct::EmptyProtocolSendAndReceiveResponse::EmptyProtocolSendAndReceiveResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : EmptyProtocolSendAndReceiveResponse(Storage_{
                                                                                                                                                               .e = ::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{},
                                                                                                                                                           }) {}
::test_emptystruct::EmptyProtocolSendAndReceiveResponse::EmptyProtocolSendAndReceiveResponse(const ::test_emptystruct::EmptyProtocolSendAndReceiveResponse& other) noexcept : ::test_emptystruct::EmptyProtocolSendAndReceiveResponse(other.CloneStorage_()) {}

::test_emptystruct::EmptyProtocolSendAndReceiveResponse& test_emptystruct::EmptyProtocolSendAndReceiveResponse::operator=(const ::test_emptystruct::EmptyProtocolSendAndReceiveResponse& other) noexcept {
  storage_ = other.CloneStorage_();
  return *this;
}

bool test_emptystruct::EmptyProtocolSendAndReceiveResponse::operator==(const EmptyProtocolSendAndReceiveResponse& other) const noexcept {
  return ::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::EmptyProtocolSendAndReceiveResponse, 1>::Equal(this, &other);
}

bool test_emptystruct::EmptyProtocolSendAndReceiveResponse::operator!=(const EmptyProtocolSendAndReceiveResponse& other) const noexcept {
  return !::fidl::internal::NaturalStructCodingTraits<::test_emptystruct::EmptyProtocolSendAndReceiveResponse, 1>::Equal(this, &other);
}

::test_emptystruct::EmptyProtocolSendAndReceiveResponse::Storage_ test_emptystruct::EmptyProtocolSendAndReceiveResponse::CloneStorage_() const {
  return Storage_{
      ::fidl::internal::NaturalClone(storage_.e)};
}
const ::test_emptystruct::Empty&
test_emptystruct::EmptyProtocolSendAndReceiveResponse::e() const {
  return storage_.e;
}

::test_emptystruct::Empty& ::test_emptystruct::EmptyProtocolSendAndReceiveResponse::e() {
  return storage_.e;
}

::test_emptystruct::EmptyProtocolSendAndReceiveResponse& ::test_emptystruct::EmptyProtocolSendAndReceiveResponse::e(::test_emptystruct::Empty value) {
  storage_.e = std::move(value);
  return *this;
}

#pragma clang diagnostic pop
