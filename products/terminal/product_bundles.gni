# Copyright 2025 The Fuchsia Authors.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# A list of bazel inputs that are common to all terminal product bundles.
_COMMON_BAZEL_INPUTS = [
  "//src/fonts/asset_providers:open-fonts-collection-bazel",
  "//build/images/flash:esp.bazel_input",

  # Cache packages.
  "//src/ui/bin/terminal:terminal.bazel_input",
  "//src/ui/bin/tiles-session:tiles-session.bazel_input",
  "//src/graphics/display/testing/fake-coordinator-connector:fake-coordinator-connector.bazel_input",
  "//src/diagnostics/validator/inspect:validator.bazel_input",
  "//src/tests/fidl/dynsuite/client_suite/harness:harness.bazel_input",
  "//src/tests/fidl/dynsuite/server_suite/harness:harness.bazel_input",
  "//src/developer/build_info/testing:fake-build-info.bazel_input",
  "//src/diagnostics/archivist:archivist-for-embedding.bazel_input",
  "//src/testing/fidl/intl_property_manager:intl_property_manager.bazel_input",
  "//src/fonts:fonts_hermetic_for_test.bazel_input",
  "//src/fonts:fonts_configurable_for_test.bazel_input",
  "//src/ui/testing/test_ui_stack:flatland-scene-manager-test-ui-stack.bazel_input",
  "//src/ui/testing/test_ui_stack:test-ui-stack.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-array-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-minimal-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-struct-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-table-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-union-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-vector-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility/cpp:cpp.bazel_input",
  "//src/tests/fidl/compatibility/hlcpp:hlcpp.bazel_input",
  "//src/tests/fidl/compatibility/llcpp:llcpp.bazel_input",
  "//src/tests/fidl/compatibility/go:go.bazel_input",
  "//src/tests/fidl/compatibility/rust:rust.bazel_input",
]

if (current_cpu == "x64") {
  TERMINAL_PRODUCT_BUNDLES = [
    {
      gn_target_name = "product_bundle.x64"
      testonly = true
      product_bundle_name = "terminal.x64"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target = "//products/terminal:product_bundle.x64"
      bazel_product_image_target = "//products/terminal:image.x64"
      bazel_product_config_target = "//products/terminal:product_config"
      bazel_product_config_name = "terminal"
      bazel_recovery_image_target = "//products/zedboot:x64"
      bazel_elf_sizes_target = "//products/terminal:elf_sizes.x64"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS + [ "//boards/x64:x64.bazel_input" ]
    },
    {
      gn_target_name = "product_bundle.x64_reduced_perf_variation"
      testonly = true
      product_bundle_name = "terminal.x64-reduced-perf-variation"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target =
          "//products/terminal:product_bundle.x64_reduced_perf_variation"
      bazel_product_image_target =
          "//products/terminal:image.x64_reduced_perf_variation"
      bazel_recovery_image_target =
          "//products/zedboot:x64_reduced_perf_variation"
      bazel_elf_sizes_target =
          "//products/terminal:elf_sizes.x64_reduced_perf_variation"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS +
          [ "//boards/x64:reduced_perf_variation.bazel_input" ]
    },
    {
      gn_target_name = "product_bundle_with_netstack2.x64"
      testonly = true
      product_bundle_name = "terminal_with_netstack2.x64"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target =
          "//products/terminal:product_bundle_with_netstack2.x64"
      bazel_product_image_target =
          "//products/terminal:image_with_netstack2.x64"
      bazel_recovery_image_target = "//products/zedboot:x64"
      bazel_elf_sizes_target =
          "//products/terminal:elf_sizes_with_netstack2.x64"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS + [ "//boards/x64:x64.bazel_input" ]
    },
    {
      gn_target_name =
          "product_bundle_with_netstack2.x64_reduced_perf_variation"
      testonly = true
      product_bundle_name = "terminal_with_netstack2.x64-reduced-perf-variation"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target = "//products/terminal:product_bundle_with_netstack2.x64_reduced_perf_variation"
      bazel_product_image_target =
          "//products/terminal:image_with_netstack2.x64_reduced_perf_variation"
      bazel_recovery_image_target =
          "//products/zedboot:x64_reduced_perf_variation"
      bazel_elf_sizes_target = "//products/terminal:elf_sizes_with_netstack2.x64_reduced_perf_variation"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS +
          [ "//boards/x64:reduced_perf_variation.bazel_input" ]
    },
  ]
} else if (current_cpu == "arm64") {
  TERMINAL_PRODUCT_BUNDLES = [
    {
      gn_target_name = "product_bundle.arm64"
      testonly = true
      product_bundle_name = "terminal.arm64"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target = "//products/terminal:product_bundle.arm64"
      bazel_product_image_target = "//products/terminal:image.arm64"
      bazel_product_config_target = "//products/terminal:product_config"
      bazel_product_config_name = "terminal"
      bazel_recovery_image_target = "//products/zedboot:arm64"
      bazel_elf_sizes_target = "//products/terminal:elf_sizes.arm64"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS + [ "//boards/arm64:arm64.bazel_input" ]
    },
    {
      gn_target_name = "product_bundle.qemu-arm64"
      testonly = true
      image_use_vbmeta = false
      product_bundle_name = "terminal.qemu-arm64"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target =
          "//products/terminal:product_bundle.qemu-arm64"
      bazel_product_image_target = "//products/terminal:image.qemu-arm64"
      bazel_recovery_image_target = "//products/zedboot:qemu-arm64"
      bazel_elf_sizes_target = "//products/terminal:elf_sizes.qemu-arm64"
      bazel_inputs_from_gn = _COMMON_BAZEL_INPUTS +
                             [ "//boards/qemu-arm64:qemu-arm64.bazel_input" ]
    },
    {
      gn_target_name = "product_bundle.vim3"
      testonly = true
      product_bundle_name = "terminal.vim3"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target = "//products/terminal:product_bundle.vim3"
      bazel_product_image_target = "//products/terminal:image.vim3"
      bazel_recovery_image_target = "//products/zedboot:vim3"
      bazel_elf_sizes_target = "//products/terminal:elf_sizes.vim3"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS + [ "//boards/vim3:bazel_inputs" ]
    },
    {
      gn_target_name = "product_bundle.vim3_reduced_perf_variation"
      testonly = true
      product_bundle_name = "terminal.vim3-reduced-perf-variation"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target =
          "//products/terminal:product_bundle.vim3_reduced_perf_variation"
      bazel_product_image_target =
          "//products/terminal:image.vim3_reduced_perf_variation"
      bazel_recovery_image_target =
          "//products/zedboot:vim3_reduced_perf_variation"
      bazel_elf_sizes_target =
          "//products/terminal:elf_sizes.vim3_reduced_perf_variation"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS + [ "//boards/vim3:bazel_inputs" ]
    },
    {
      gn_target_name = "product_bundle_with_netstack2.arm64"
      testonly = true
      product_bundle_name = "terminal_with_netstack2.arm64"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target =
          "//products/terminal:product_bundle_with_netstack2.arm64"
      bazel_product_image_target =
          "//products/terminal:image_with_netstack2.arm64"
      bazel_recovery_image_target = "//products/zedboot:arm64"
      bazel_elf_sizes_target =
          "//products/terminal:elf_sizes_with_netstack2.arm64"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS + [ "//boards/arm64:arm64.bazel_input" ]
    },
    {
      gn_target_name = "product_bundle_with_netstack2.qemu-arm64"
      testonly = true
      image_use_vbmeta = false
      product_bundle_name = "terminal_with_netstack2.qemu-arm64"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target =
          "//products/terminal:product_bundle_with_netstack2.qemu-arm64"
      bazel_product_image_target =
          "//products/terminal:image_with_netstack2.qemu-arm64"
      bazel_recovery_image_target = "//products/zedboot:qemu-arm64"
      bazel_elf_sizes_target =
          "//products/terminal:elf_sizes_with_netstack2.qemu-arm64"
      bazel_inputs_from_gn = _COMMON_BAZEL_INPUTS +
                             [ "//boards/qemu-arm64:qemu-arm64.bazel_input" ]
    },
    {
      gn_target_name = "product_bundle_with_netstack2.vim3"
      testonly = true
      product_bundle_name = "terminal_with_netstack2.vim3"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target =
          "//products/terminal:product_bundle_with_netstack2.vim3"
      bazel_product_image_target =
          "//products/terminal:image_with_netstack2.vim3"
      bazel_recovery_image_target = "//products/zedboot:vim3"
      bazel_elf_sizes_target =
          "//products/terminal:elf_sizes_with_netstack2.vim3"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS + [ "//boards/vim3:bazel_inputs" ]
    },
    {
      gn_target_name =
          "product_bundle_with_netstack2.vim3_reduced_perf_variation"
      testonly = true
      product_bundle_name =
          "terminal_with_netstack2.vim3-reduced-perf-variation"
      allow_eng_platform_bundle_use = true
      bazel_product_bundle_target = "//products/terminal:product_bundle_with_netstack2.vim3_reduced_perf_variation"
      bazel_product_image_target =
          "//products/terminal:image_with_netstack2.vim3_reduced_perf_variation"
      bazel_recovery_image_target =
          "//products/zedboot:vim3_reduced_perf_variation"
      bazel_elf_sizes_target = "//products/terminal:elf_sizes_with_netstack2.vim3_reduced_perf_variation"
      bazel_inputs_from_gn =
          _COMMON_BAZEL_INPUTS + [ "//boards/vim3:bazel_inputs" ]
    },
  ]
} else {
  assert(false, "Unsupported CPU ${current_cpu} for terminal product bundles")
}
