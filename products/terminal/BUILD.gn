# Copyright 2022 The Fuchsia Authors.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/product_assembly_configuration.gni")
import("//build/assembly/sshd_config.gni")
import("//build/bazel/assembly/bazel_product_bundle.gni")
import("//build/info/info.gni")

assert(
    is_fuchsia,
    "Product definitions and assemblies should only be defined in the fuchsia toolchain")

bazel_inputs = [
  "//src/fonts/asset_providers:open-fonts-collection-bazel",
  "//build/images/flash:esp.bazel_input",

  # Cache packages.
  "//src/ui/bin/terminal:terminal.bazel_input",
  "//src/ui/bin/tiles-session:tiles-session.bazel_input",
  "//src/graphics/display/testing/fake-coordinator-connector:fake-coordinator-connector.bazel_input",
  "//src/diagnostics/validator/inspect:validator.bazel_input",
  "//src/tests/fidl/dynsuite/client_suite/harness:harness.bazel_input",
  "//src/tests/fidl/dynsuite/server_suite/harness:harness.bazel_input",
  "//src/developer/build_info/testing:fake-build-info.bazel_input",
  "//src/diagnostics/archivist:archivist-for-embedding.bazel_input",
  "//src/testing/fidl/intl_property_manager:intl_property_manager.bazel_input",
  "//src/fonts:fonts_hermetic_for_test.bazel_input",
  "//src/fonts:fonts_configurable_for_test.bazel_input",
  "//src/ui/testing/test_ui_stack:flatland-scene-manager-test-ui-stack.bazel_input",
  "//src/ui/testing/test_ui_stack:test-ui-stack.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-array-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-minimal-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-struct-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-table-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-union-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility:fidl-compatibility-vector-harness_pkg.bazel_input",
  "//src/tests/fidl/compatibility/cpp:cpp.bazel_input",
  "//src/tests/fidl/compatibility/hlcpp:hlcpp.bazel_input",
  "//src/tests/fidl/compatibility/llcpp:llcpp.bazel_input",
  "//src/tests/fidl/compatibility/go:go.bazel_input",
  "//src/tests/fidl/compatibility/rust:rust.bazel_input",
]
if (board_configuration_label != false &&
    get_label_info(board_configuration_label, "dir") != "//boards/vim3") {
  bazel_inputs += [ get_label_info(board_configuration_label,
                                   "label_no_toolchain") + ".bazel_input" ]
}

if (target_cpu == "x64") {
  bazel_product_bundle("product_bundle.x64") {
    testonly = true
    product_bundle_name = "terminal.x64"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle.x64"
    bazel_product_image_target = ":image.x64"
    bazel_recovery_image_target = "//products/zedboot:x64"
    bazel_elf_sizes_target = ":elf_sizes.x64"
    bazel_inputs_from_gn = bazel_inputs
  }

  bazel_product_bundle("product_bundle.x64_reduced_perf_variation") {
    testonly = true
    product_bundle_name = "terminal.x64-reduced-perf-variation"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle.x64_reduced_perf_variation"
    bazel_product_image_target = ":image.x64_reduced_perf_variation"
    bazel_recovery_image_target =
        "//products/zedboot:x64_reduced_perf_variation"
    bazel_elf_sizes_target = ":elf_sizes.x64_reduced_perf_variation"
    bazel_inputs_from_gn = bazel_inputs
  }

  bazel_product_bundle("product_bundle_with_netstack2.x64") {
    testonly = true
    product_bundle_name = "terminal_with_netstack2.x64"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle_with_netstack2.x64"
    bazel_product_image_target = ":image_with_netstack2.x64"
    bazel_recovery_image_target = "//products/zedboot:x64"
    bazel_elf_sizes_target = ":elf_sizes_with_netstack2.x64"
    bazel_inputs_from_gn = bazel_inputs
  }

  bazel_product_bundle(
      "product_bundle_with_netstack2.x64_reduced_perf_variation") {
    testonly = true
    product_bundle_name = "terminal_with_netstack2.x64-reduced-perf-variation"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target =
        ":product_bundle_with_netstack2.x64_reduced_perf_variation"
    bazel_product_image_target =
        ":image_with_netstack2.x64_reduced_perf_variation"
    bazel_recovery_image_target =
        "//products/zedboot:x64_reduced_perf_variation"
    bazel_elf_sizes_target =
        ":elf_sizes_with_netstack2.x64_reduced_perf_variation"
    bazel_inputs_from_gn = bazel_inputs
  }
}

if (target_cpu == "arm64") {
  bazel_product_bundle("product_bundle.arm64") {
    testonly = true
    product_bundle_name = "terminal.arm64"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle.arm64"
    bazel_product_image_target = ":image.arm64"
    bazel_recovery_image_target = "//products/zedboot:arm64"
    bazel_elf_sizes_target = ":elf_sizes.arm64"
    bazel_inputs_from_gn = bazel_inputs
  }

  bazel_product_bundle("product_bundle.qemu-arm64") {
    testonly = true
    product_bundle_name = "terminal.qemu-arm64"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle.qemu-arm64"
    bazel_product_image_target = ":image.qemu-arm64"
    bazel_recovery_image_target = "//products/zedboot:qemu-arm64"
    bazel_elf_sizes_target = ":elf_sizes.qemu-arm64"
    bazel_inputs_from_gn = bazel_inputs
  }

  bazel_product_bundle("product_bundle.vim3") {
    testonly = true
    product_bundle_name = "terminal.vim3"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle.vim3"
    bazel_product_image_target = ":image.vim3"
    bazel_recovery_image_target = "//products/zedboot:vim3"
    bazel_elf_sizes_target = ":elf_sizes.vim3"
    bazel_inputs_from_gn = bazel_inputs + [ "//boards/vim3:bazel_inputs" ]
  }

  bazel_product_bundle("product_bundle.vim3_reduced_perf_variation") {
    testonly = true
    product_bundle_name = "terminal.vim3-reduced-perf-variation"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle.vim3_reduced_perf_variation"
    bazel_product_image_target = ":image.vim3_reduced_perf_variation"
    bazel_recovery_image_target =
        "//products/zedboot:vim3_reduced_perf_variation"
    bazel_elf_sizes_target = ":elf_sizes.vim3_reduced_perf_variation"
    bazel_inputs_from_gn = bazel_inputs + [ "//boards/vim3:bazel_inputs" ]
  }

  bazel_product_bundle("product_bundle_with_netstack2.arm64") {
    testonly = true
    product_bundle_name = "terminal_with_netstack2.arm64"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle_with_netstack2.arm64"
    bazel_product_image_target = ":image_with_netstack2.arm64"
    bazel_recovery_image_target = "//products/zedboot:arm64"
    bazel_elf_sizes_target = ":elf_sizes_with_netstack2.arm64"
    bazel_inputs_from_gn = bazel_inputs
  }

  bazel_product_bundle("product_bundle_with_netstack2.qemu-arm64") {
    testonly = true
    product_bundle_name = "terminal_with_netstack2.qemu-arm64"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle_with_netstack2.qemu-arm64"
    bazel_product_image_target = ":image.qemu-arm64"
    bazel_recovery_image_target = "//products/zedboot:qemu-arm64"
    bazel_elf_sizes_target = ":elf_sizes.qemu-arm64"
    bazel_inputs_from_gn = bazel_inputs
  }

  bazel_product_bundle("product_bundle_with_netstack2.vim3") {
    testonly = true
    product_bundle_name = "terminal_with_netstack2.vim3"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = ":product_bundle_with_netstack2.vim3"
    bazel_product_image_target = ":image_with_netstack2.vim3"
    bazel_recovery_image_target = "//products/zedboot:vim3"
    bazel_elf_sizes_target = ":elf_sizes_with_netstack2.vim3"
    bazel_inputs_from_gn = bazel_inputs + [ "//boards/vim3:bazel_inputs" ]
  }

  bazel_product_bundle(
      "product_bundle_with_netstack2.vim3_reduced_perf_variation") {
    testonly = true
    product_bundle_name = "terminal_with_netstack2.vim3-reduced-perf-variation"
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target =
        ":product_bundle_with_netstack2.vim3_reduced_perf_variation"
    bazel_product_image_target =
        ":image_with_netstack2.vim3_reduced_perf_variation"
    bazel_recovery_image_target =
        "//products/zedboot:vim3_reduced_perf_variation"
    bazel_elf_sizes_target =
        ":elf_sizes_with_netstack2.vim3_reduced_perf_variation"
    bazel_inputs_from_gn = bazel_inputs + [ "//boards/vim3:bazel_inputs" ]
  }
}
