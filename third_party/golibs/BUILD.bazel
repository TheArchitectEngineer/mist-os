# AUTO-GENERATED - DO NOT EDIT.
#
# Auto-generated by //third_party/golibs/update.sh.

load("@io_bazel_rules_go//go:def.bzl", "go_library")

package(default_visibility = ["//visibility:public"])

go_library(
    name = "golibs",
    srcs = [
        "imports.go",
        "petal_imports.go",
    ],
    importpath = "go.fuchsia.dev/fuchsia/third_party/golibs",
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/golibs/vendor/cloud.google.com/go/storage",
        "//third_party/golibs/vendor/github.com/BurntSushi/toml",
        "//third_party/golibs/vendor/github.com/creack/pty",
        "//third_party/golibs/vendor/github.com/dustin/go-humanize",
        "//third_party/golibs/vendor/github.com/golang/glog",
        "//third_party/golibs/vendor/github.com/google/go-cmp/cmp",
        "//third_party/golibs/vendor/github.com/google/go-cmp/cmp/cmpopts",
        "//third_party/golibs/vendor/github.com/google/licenseclassifier/v2:licenseclassifier",
        "//third_party/golibs/vendor/github.com/google/shlex",
        "//third_party/golibs/vendor/github.com/google/subcommands",
        "//third_party/golibs/vendor/github.com/kr/fs",
        "//third_party/golibs/vendor/github.com/kr/pretty",
        "//third_party/golibs/vendor/github.com/pkg/sftp",
        "//third_party/golibs/vendor/github.com/sasha-s/go-deadlock",
        "//third_party/golibs/vendor/github.com/spdx/tools-golang/spdx/common",
        "//third_party/golibs/vendor/github.com/spdx/tools-golang/spdx/v2_2",
        "//third_party/golibs/vendor/github.com/spf13/pflag",
        "//third_party/golibs/vendor/github.com/theupdateframework/go-tuf",
        "//third_party/golibs/vendor/github.com/theupdateframework/go-tuf/data",
        "//third_party/golibs/vendor/github.com/theupdateframework/go-tuf/pkg/keys",
        "//third_party/golibs/vendor/go.starlark.net/starlark",
        "//third_party/golibs/vendor/go.starlark.net/syntax",
        "//third_party/golibs/vendor/go.uber.org/goleak",
        "//third_party/golibs/vendor/golang.org/x/crypto/openpgp",
        "//third_party/golibs/vendor/golang.org/x/crypto/ssh",
        "//third_party/golibs/vendor/golang.org/x/exp/maps",
        "//third_party/golibs/vendor/golang.org/x/exp/slices",
        "//third_party/golibs/vendor/golang.org/x/net/ipv4",
        "//third_party/golibs/vendor/golang.org/x/net/ipv6",
        "//third_party/golibs/vendor/golang.org/x/sync/errgroup",
        "//third_party/golibs/vendor/golang.org/x/sys/unix",
        "//third_party/golibs/vendor/gonum.org/v1/gonum/dsp/fourier",
        "//third_party/golibs/vendor/gonum.org/v1/gonum/mathext",
        "//third_party/golibs/vendor/google.golang.org/api/iterator",
        "//third_party/golibs/vendor/google.golang.org/protobuf/encoding/protojson",
        "//third_party/golibs/vendor/google.golang.org/protobuf/encoding/prototext",
        "//third_party/golibs/vendor/google.golang.org/protobuf/proto",
        "//third_party/golibs/vendor/google.golang.org/protobuf/reflect/protoreflect",
        "//third_party/golibs/vendor/google.golang.org/protobuf/runtime/protoimpl",
        "//third_party/golibs/vendor/google.golang.org/protobuf/testing/protocmp",
        "//third_party/golibs/vendor/google.golang.org/protobuf/types/known/durationpb",
        "//third_party/golibs/vendor/google.golang.org/protobuf/types/known/structpb",
        "//third_party/golibs/vendor/google.golang.org/protobuf/types/known/timestamppb",
        "//third_party/golibs/vendor/gopkg.in/yaml.v2:yaml_v2",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/atomicbitops",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/buffer",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/log",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/checksum",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/faketime",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/header",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/ethernet",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/loopback",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/nested",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/packetsocket",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/pipe",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/qdisc/fifo",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/sniffer",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/network/arp",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/network/ipv4",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/network/ipv6",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/stack",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/icmp",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/packet",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/raw",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/tcp",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/udp",
        "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/waiter",
    ],
)

# The following redirects are manually maintained to match the golibs defined in
# //third_party/golibs/BUILD.gn. They make it easier to keep the same Go targets
# defined in BUILD.gn and BUILD.bazel in sync when dual-building.
#
# NOTE: It should be possible to automatically generate the following redirects,
# although given they don't change that often, it's simpler to manually maintain
# them, or generate them with one-off scripts.
alias(
    name = "cloud.google.com/go/storage",
    actual = "//third_party/golibs/vendor/cloud.google.com/go/storage",
)

alias(
    name = "github.com/BurntSushi/toml",
    actual = "//third_party/golibs/vendor/github.com/BurntSushi/toml",
)

alias(
    name = "github.com/creack/pty",
    actual = "//third_party/golibs/vendor/github.com/creack/pty",
)

alias(
    name = "github.com/dustin/go-humanize",
    actual = "//third_party/golibs/vendor/github.com/dustin/go-humanize",
)

alias(
    name = "github.com/dustin/go-humanize/english",
    actual = "//third_party/golibs/vendor/github.com/dustin/go-humanize/english",
)

alias(
    name = "github.com/fsnotify/fsnotify",
    actual = "//third_party/golibs/vendor/github.com/fsnotify/fsnotify",
)

alias(
    name = "github.com/golang/glog",
    actual = "//third_party/golibs/vendor/github.com/golang/glog",
)

alias(
    name = "github.com/google/go-cmp/cmp",
    actual = "//third_party/golibs/vendor/github.com/google/go-cmp/cmp",
)

alias(
    name = "github.com/google/go-cmp/cmp/cmpopts",
    actual = "//third_party/golibs/vendor/github.com/google/go-cmp/cmp/cmpopts",
)

alias(
    name = "github.com/google/licenseclassifier/v2",
    actual = "//third_party/golibs/vendor/github.com/google/licenseclassifier/v2:licenseclassifier",
)

alias(
    name = "github.com/google/shlex",
    actual = "//third_party/golibs/vendor/github.com/google/shlex",
)

alias(
    name = "github.com/google/subcommands",
    actual = "//third_party/golibs/vendor/github.com/google/subcommands",
)

alias(
    name = "github.com/kr/fs",
    actual = "//third_party/golibs/vendor/github.com/kr/fs",
)

alias(
    name = "github.com/kr/pretty",
    actual = "//third_party/golibs/vendor/github.com/kr/pretty",
)

alias(
    name = "github.com/pkg/sftp",
    actual = "//third_party/golibs/vendor/github.com/pkg/sftp",
)

alias(
    name = "github.com/sasha-s/go-deadlock",
    actual = "//third_party/golibs/vendor/github.com/sasha-s/go-deadlock",
)

alias(
    name = "github.com/spdx/tools-golang/spdx/common",
    actual = "//third_party/golibs/vendor/github.com/spdx/tools-golang/spdx/common",
)

alias(
    name = "github.com/spdx/tools-golang/spdx/v2_2",
    actual = "//third_party/golibs/vendor/github.com/spdx/tools-golang/spdx/v2_2",
)

alias(
    name = "github.com/spf13/pflag",
    actual = "//third_party/golibs/vendor/github.com/spf13/pflag",
)

alias(
    name = "go.starlark.net/starlark",
    actual = "//third_party/golibs/vendor/go.starlark.net/starlark",
)

alias(
    name = "go.starlark.net/syntax",
    actual = "//third_party/golibs/vendor/go.starlark.net/syntax",
)

alias(
    name = "github.com/theupdateframework/go-tuf",
    actual = "//third_party/golibs/vendor/github.com/theupdateframework/go-tuf",
)

alias(
    name = "github.com/theupdateframework/go-tuf/data",
    actual = "//third_party/golibs/vendor/github.com/theupdateframework/go-tuf/data",
)

alias(
    name = "github.com/theupdateframework/go-tuf/pkg/keys",
    actual = "//third_party/golibs/vendor/github.com/theupdateframework/go-tuf/pkg/keys",
)

alias(
    name = "go.uber.org/goleak",
    actual = "//third_party/golibs/vendor/go.uber.org/goleak",
)

alias(
    name = "golang.org/x/crypto/openpgp",
    actual = "//third_party/golibs/vendor/golang.org/x/crypto/openpgp",
)

alias(
    name = "golang.org/x/crypto/ssh",
    actual = "//third_party/golibs/vendor/golang.org/x/crypto/ssh",
)

alias(
    name = "golang.org/x/exp/maps",
    actual = "//third_party/golibs/vendor/golang.org/x/exp/maps",
)

alias(
    name = "golang.org/x/exp/slices",
    actual = "//third_party/golibs/vendor/golang.org/x/exp/slices",
)

alias(
    name = "golang.org/x/net/ipv4",
    actual = "//third_party/golibs/vendor/golang.org/x/net/ipv4",
)

alias(
    name = "golang.org/x/net/ipv6",
    actual = "//third_party/golibs/vendor/golang.org/x/net/ipv6",
)

alias(
    name = "golang.org/x/sync/errgroup",
    actual = "//third_party/golibs/vendor/golang.org/x/sync/errgroup",
)

alias(
    name = "golang.org/x/sys/unix",
    actual = "//third_party/golibs/vendor/golang.org/x/sys/unix",
)

alias(
    name = "gonum.org/v1/gonum/dsp/fourier",
    actual = "//third_party/golibs/vendor/gonum.org/v1/gonum/dsp/fourier",
)

alias(
    name = "gonum.org/v1/gonum/mathext",
    actual = "//third_party/golibs/vendor/gonum.org/v1/gonum/mathext",
)

alias(
    name = "google.golang.org/api/iterator",
    actual = "//third_party/golibs/vendor/google.golang.org/api/iterator",
)

alias(
    name = "google.golang.org/protobuf/encoding/protojson",
    actual = "//third_party/golibs/vendor/google.golang.org/protobuf/encoding/protojson",
)

alias(
    name = "google.golang.org/protobuf/encoding/prototext",
    actual = "//third_party/golibs/vendor/google.golang.org/protobuf/encoding/prototext",
)

alias(
    name = "google.golang.org/protobuf/proto",
    actual = "//third_party/golibs/vendor/google.golang.org/protobuf/proto",
)

alias(
    name = "google.golang.org/protobuf/reflect/protoreflect",
    actual = "//third_party/golibs/vendor/google.golang.org/protobuf/reflect/protoreflect",
)

alias(
    name = "google.golang.org/protobuf/runtime/protoimpl",
    actual = "//third_party/golibs/vendor/google.golang.org/protobuf/runtime/protoimpl",
)

alias(
    name = "google.golang.org/protobuf/testing/protocmp",
    actual = "//third_party/golibs/vendor/google.golang.org/protobuf/testing/protocmp",
)

alias(
    name = "google.golang.org/protobuf/types/known/durationpb",
    actual = "//third_party/golibs/vendor/google.golang.org/protobuf/types/known/durationpb",
)

alias(
    name = "google.golang.org/protobuf/types/known/structpb",
    actual = "//third_party/golibs/vendor/google.golang.org/protobuf/types/known/structpb",
)

alias(
    name = "google.golang.org/protobuf/types/known/timestamppb",
    actual = "//third_party/golibs/vendor/google.golang.org/protobuf/types/known/timestamppb",
)

alias(
    name = "gopkg.in/yaml.v2",
    actual = "//third_party/golibs/vendor/gopkg.in/yaml.v2:yaml_v2",
)

alias(
    name = "gvisor.dev/gvisor/pkg/atomicbitops",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/atomicbitops",
)

alias(
    name = "gvisor.dev/gvisor/pkg/buffer",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/buffer",
)

alias(
    name = "gvisor.dev/gvisor/pkg/log",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/log",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/checksum",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/checksum",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/faketime",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/faketime",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/header",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/header",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/link/ethernet",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/ethernet",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/link/loopback",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/loopback",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/link/nested",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/nested",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/link/packetsocket",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/packetsocket",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/link/pipe",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/pipe",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/link/qdisc/fifo",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/qdisc/fifo",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/link/sniffer",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/link/sniffer",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/network/arp",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/network/arp",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/network/ipv4",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/network/ipv4",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/network/ipv6",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/network/ipv6",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/stack",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/stack",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/transport",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/transport/icmp",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/icmp",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/transport/packet",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/packet",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/transport/raw",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/raw",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/transport/tcp",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/tcp",
)

alias(
    name = "gvisor.dev/gvisor/pkg/tcpip/transport/udp",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/tcpip/transport/udp",
)

alias(
    name = "gvisor.dev/gvisor/pkg/waiter",
    actual = "//third_party/golibs/vendor/gvisor.dev/gvisor/pkg/waiter",
)
