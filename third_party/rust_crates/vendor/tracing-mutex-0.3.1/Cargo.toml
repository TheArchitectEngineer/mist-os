# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.70"
name = "tracing-mutex"
version = "0.3.1"
build = "build.rs"
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Ensure deadlock-free mutexes by allocating in order, or else."
readme = "README.md"
keywords = [
    "mutex",
    "rwlock",
    "once",
    "thread",
]
categories = [
    "concurrency",
    "development-tools::debugging",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/bertptrs/tracing-mutex"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[features]
backtraces = []
default = ["backtraces"]
experimental = []
lock_api = ["dep:lock_api"]
lockapi = ["dep:lock_api"]
parking_lot = [
    "dep:parking_lot",
    "lock_api",
]
parkinglot = [
    "dep:parking_lot",
    "lock_api",
]

[lib]
name = "tracing_mutex"
path = "src/lib.rs"

[[example]]
name = "drop_in_parking_lot"
path = "examples/drop_in_parking_lot.rs"
required-features = ["parkinglot"]

[[example]]
name = "mutex_cycle"
path = "examples/mutex_cycle.rs"

[[bench]]
name = "mutex"
path = "benches/mutex.rs"
harness = false

[dependencies.lock_api]
version = "0.4"
optional = true

[dependencies.parking_lot]
version = "0.12"
optional = true

[dev-dependencies.criterion]
version = "0.5"

[dev-dependencies.rand]
version = "0.8"

[build-dependencies.autocfg]
version = "1.4.0"
