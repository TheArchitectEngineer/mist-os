# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build_overrides/pigweed.gni")
import("$dir_pw_build/python.gni")
import("$dir_pw_build/python_action.gni")
import("$dir_pw_build/python_dist.gni")
import("$dir_pw_protobuf_compiler/proto.gni")

# Fuchsia in-tree protobuf source paths.
_protobuf_path = "//third_party/protobuf/src"
_protobuf_python_path = "//third_party/protobuf/python"

# Protos to compile to *_pb2.py for inclusion in the protoc_python_package.
_common_proto_files = [
  "$_protobuf_path/google/protobuf/any.proto",
  "$_protobuf_path/google/protobuf/api.proto",
  "$_protobuf_path/google/protobuf/compiler/plugin.proto",
  "$_protobuf_path/google/protobuf/descriptor.proto",
  "$_protobuf_path/google/protobuf/duration.proto",
  "$_protobuf_path/google/protobuf/empty.proto",
  "$_protobuf_path/google/protobuf/field_mask.proto",
  "$_protobuf_path/google/protobuf/source_context.proto",
  "$_protobuf_path/google/protobuf/struct.proto",
  "$_protobuf_path/google/protobuf/timestamp.proto",
  "$_protobuf_path/google/protobuf/type.proto",
  "$_protobuf_path/google/protobuf/wrappers.proto",
]

# All other Python sources to include in the protoc_python_package.
_protobuf_python_sources = [
  "$_protobuf_python_path/google/__init__.py",
  "$_protobuf_python_path/google/protobuf/__init__.py",
  "$_protobuf_python_path/google/protobuf/compiler/__init__.py",
  "$_protobuf_python_path/google/protobuf/descriptor.py",
  "$_protobuf_python_path/google/protobuf/descriptor_database.py",
  "$_protobuf_python_path/google/protobuf/descriptor_pool.py",
  "$_protobuf_python_path/google/protobuf/internal/__init__.py",
  "$_protobuf_python_path/google/protobuf/internal/_parameterized.py",
  "$_protobuf_python_path/google/protobuf/internal/api_implementation.py",
  "$_protobuf_python_path/google/protobuf/internal/builder.py",
  "$_protobuf_python_path/google/protobuf/internal/containers.py",
  "$_protobuf_python_path/google/protobuf/internal/decoder.py",
  "$_protobuf_python_path/google/protobuf/internal/descriptor_database_test.py",
  "$_protobuf_python_path/google/protobuf/internal/descriptor_pool_test.py",
  "$_protobuf_python_path/google/protobuf/internal/descriptor_test.py",
  "$_protobuf_python_path/google/protobuf/internal/encoder.py",
  "$_protobuf_python_path/google/protobuf/internal/enum_type_wrapper.py",
  "$_protobuf_python_path/google/protobuf/internal/extension_dict.py",
  "$_protobuf_python_path/google/protobuf/internal/field_mask.py",
  "$_protobuf_python_path/google/protobuf/internal/field_mask_test.py",
  "$_protobuf_python_path/google/protobuf/internal/generator_test.py",
  "$_protobuf_python_path/google/protobuf/internal/import_test.py",
  "$_protobuf_python_path/google/protobuf/internal/import_test_package/__init__.py",
  "$_protobuf_python_path/google/protobuf/internal/json_format_test.py",
  "$_protobuf_python_path/google/protobuf/internal/keywords_test.py",
  "$_protobuf_python_path/google/protobuf/internal/message_factory_test.py",
  "$_protobuf_python_path/google/protobuf/internal/message_listener.py",
  "$_protobuf_python_path/google/protobuf/internal/message_test.py",
  "$_protobuf_python_path/google/protobuf/internal/numpy/__init__.py",
  "$_protobuf_python_path/google/protobuf/internal/numpy/numpy_test.py",
  "$_protobuf_python_path/google/protobuf/internal/proto_builder_test.py",
  "$_protobuf_python_path/google/protobuf/internal/python_message.py",
  "$_protobuf_python_path/google/protobuf/internal/reflection_test.py",
  "$_protobuf_python_path/google/protobuf/internal/service_reflection_test.py",
  "$_protobuf_python_path/google/protobuf/internal/symbol_database_test.py",
  "$_protobuf_python_path/google/protobuf/internal/test_util.py",
  "$_protobuf_python_path/google/protobuf/internal/testing_refleaks.py",
  "$_protobuf_python_path/google/protobuf/internal/text_encoding_test.py",
  "$_protobuf_python_path/google/protobuf/internal/text_format_test.py",
  "$_protobuf_python_path/google/protobuf/internal/thread_safe_test.py",
  "$_protobuf_python_path/google/protobuf/internal/type_checkers.py",
  "$_protobuf_python_path/google/protobuf/internal/unknown_fields_test.py",
  "$_protobuf_python_path/google/protobuf/internal/well_known_types.py",
  "$_protobuf_python_path/google/protobuf/internal/well_known_types_test.py",
  "$_protobuf_python_path/google/protobuf/internal/wire_format.py",
  "$_protobuf_python_path/google/protobuf/internal/wire_format_test.py",
  "$_protobuf_python_path/google/protobuf/json_format.py",
  "$_protobuf_python_path/google/protobuf/message.py",
  "$_protobuf_python_path/google/protobuf/message_factory.py",
  "$_protobuf_python_path/google/protobuf/proto_builder.py",
  "$_protobuf_python_path/google/protobuf/pyext/__init__.py",
  "$_protobuf_python_path/google/protobuf/pyext/cpp_message.py",
  "$_protobuf_python_path/google/protobuf/reflection.py",
  "$_protobuf_python_path/google/protobuf/runtime_version.py",
  "$_protobuf_python_path/google/protobuf/service.py",
  "$_protobuf_python_path/google/protobuf/service_reflection.py",
  "$_protobuf_python_path/google/protobuf/symbol_database.py",
  "$_protobuf_python_path/google/protobuf/testdata/__init__.py",
  "$_protobuf_python_path/google/protobuf/text_encoding.py",
  "$_protobuf_python_path/google/protobuf/text_format.py",
  "$_protobuf_python_path/google/protobuf/unknown_fields.py",
  "$_protobuf_python_path/google/protobuf/util/__init__.py",
]

# Pigweed Python action to compile protobuf's own proto files.
pw_python_action("compile_common_python_protos") {
  script =
      "$dir_pw_protobuf_compiler/py/pw_protobuf_compiler/generate_protos.py"
  _pw_internal_run_in_venv = false

  _proto_files = _common_proto_files

  _protoc_src_dir =
      get_label_info(pw_protobuf_compiler_PROTOC_TARGET, "dir") + "/src"
  _protoc_python_dir =
      get_label_info(pw_protobuf_compiler_PROTOC_TARGET, "dir") + "/python"

  _out_dir = "$target_out_dir/$target_name"

  args = [
    "--protoc",
    pw_protobuf_compiler_PROTOC_BINARY,
    "--compile-dir",
    rebase_path(_protoc_src_dir, root_build_dir),
    "--proto-path",
    rebase_path(_protoc_python_dir, root_build_dir),
    "--proto-path",
    rebase_path(_out_dir, root_build_dir),
    "--out-dir",
    rebase_path(_out_dir, root_build_dir),
    "--language",
    "python",
  ]
  outputs = []
  args += [ "--sources" ]

  foreach(source_proto, _proto_files) {
    _out_path = string_replace(source_proto, _protobuf_path, "", 1)
    _out_path = string_replace(_out_path, ".proto", "_pb2.py", 1)
    outputs += [ "${_out_dir}${_out_path}" ]
    args += [ rebase_path(source_proto, root_build_dir) ]
  }

  deps = [ pw_protobuf_compiler_PROTOC_TARGET ]
}

# It is no longer possible to use the protobuf/python directory as-is
# as some Python files need to be generated (usually with
# `bazel build //python/dist:source`, which will unfortunately build
# a ton of different things).
#
# The action below is used to generate the python_edition_defaults.py source
# file, which requires compiling descriptor.proto first, then expanding
# a python_edition_defaults.py.template file with the string representation
# of its content.
#
# The result must be available in the protoc python package as
# google/protobuf/internal/python_edition_defaults.py
#
# See $PROTOBUF/editions/defaults.bzl for details.

_python_edition_defaults_path = "$target_out_dir/python_edition_defaults.py"
_python_edition_defaults_target = "python_editions_defaults_py"

pw_python_action(_python_edition_defaults_target) {
  script = "expand_python_edition_defaults.py"
  inputs = [
    "$_protobuf_path/google/protobuf/descriptor.proto",
    "$_protobuf_python_path/google/protobuf/internal/python_edition_defaults.py.template",
  ]
  outputs = [ _python_edition_defaults_path ]
  args = [
    "--protoc",
    pw_protobuf_compiler_PROTOC_BINARY,
    "--descriptor-proto",
    rebase_path(inputs[0], root_build_dir),
    "--template-file",
    rebase_path(inputs[1], root_build_dir),
    "--output",
    rebase_path(outputs[0], root_build_dir),
    "--edition-defaults-minimum=PROTO2",
    "--edition-defaults-maximum=2023",
  ]
  deps = [ pw_protobuf_compiler_PROTOC_TARGET ]
}

pw_python_distribution("protoc_python_package") {
  # No in-tree pw_python_package targets should be included.
  packages = []

  generate_setup_cfg = {
    name = "protoc_python"
    version = "0.0.1"
    append_date_to_version = true
    include_default_pyproject_file = true
    include_extra_files_in_package_data = true
  }

  extra_files = []

  _compiled_protos = get_target_outputs(":compile_common_python_protos")
  _compiled_proto_root =
      get_label_info(":compile_common_python_protos", "target_out_dir") + "/" +
      get_label_info(":compile_common_python_protos", "name")

  foreach(proto, _compiled_protos) {
    new_path = string_replace(proto, _compiled_proto_root, "", 1)
    extra_files += [ "${proto} > ${new_path}" ]
  }

  foreach(pyfile, _common_proto_files) {
    new_path = string_replace(pyfile, _protobuf_path, "", 1)
    extra_files += [ "${pyfile} > ${new_path}" ]
  }

  foreach(pyfile, _protobuf_python_sources) {
    new_path = string_replace(pyfile, _protobuf_python_path, "", 1)
    extra_files += [ "${pyfile} > ${new_path}" ]
  }

  # Special case for for python_edition_defaults.py
  foreach(pyfile, [ _python_edition_defaults_path ]) {
    new_path =
        string_replace(pyfile, target_out_dir, "google/protobuf/internal")
    extra_files += [ "${pyfile} > ${new_path}" ]
  }

  public_deps = [
    ":${_python_edition_defaults_target}",
    ":compile_common_python_protos",
  ]
}
