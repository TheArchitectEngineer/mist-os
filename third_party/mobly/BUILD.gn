# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/python/python_library.gni")

group("mobly") {
  testonly = true

  deps = [ ":mobly_no_testonly" ]
}

python_library("mobly_no_testonly") {
  enable_mypy = false

  # In-tree-only tests should prefer ":mobly" because that enforces that only
  # testonly code uses regular Mobly. This target should be used for tests or
  # dependencies of tests that are packaged into the SDK, since they cannot be
  # testonly.
  visibility = [
    ":*",
    "//src/testing/end_to_end/mobly_base_tests:*",
    "//src/testing/end_to_end/mobly_driver:*",

    # SDK-based test targets listed below.
    "//src/tests/end_to_end/rtc:*",
  ]

  library_name = "mobly"
  source_root = "src/mobly"
  sources = [
    "__init__.py",
    "asserts.py",
    "base_instrumentation_test.py",
    "base_suite.py",
    "base_test.py",
    "config_parser.py",
    "controller_manager.py",
    "controllers/__init__.py",
    "controllers/android_device.py",
    "controllers/android_device_lib/__init__.py",
    "controllers/android_device_lib/adb.py",
    "controllers/android_device_lib/apk_utils.py",
    "controllers/android_device_lib/callback_handler.py",
    "controllers/android_device_lib/callback_handler_v2.py",
    "controllers/android_device_lib/errors.py",
    "controllers/android_device_lib/fastboot.py",
    "controllers/android_device_lib/jsonrpc_client_base.py",
    "controllers/android_device_lib/jsonrpc_shell_base.py",
    "controllers/android_device_lib/service_manager.py",
    "controllers/android_device_lib/services/__init__.py",
    "controllers/android_device_lib/services/base_service.py",
    "controllers/android_device_lib/services/logcat.py",
    "controllers/android_device_lib/services/snippet_management_service.py",
    "controllers/android_device_lib/snippet_client.py",
    "controllers/android_device_lib/snippet_client_v2.py",
    "controllers/android_device_lib/snippet_event.py",
    "controllers/attenuator.py",
    "controllers/attenuator_lib/__init__.py",
    "controllers/attenuator_lib/minicircuits.py",
    "controllers/attenuator_lib/telnet_scpi_client.py",
    "controllers/iperf_server.py",
    "controllers/sniffer.py",
    "controllers/sniffer_lib/__init__.py",
    "controllers/sniffer_lib/local/__init__.py",
    "controllers/sniffer_lib/local/local_base.py",
    "controllers/sniffer_lib/local/tcpdump.py",
    "controllers/sniffer_lib/local/tshark.py",
    "expects.py",
    "keys.py",
    "logger.py",
    "records.py",
    "runtime_test_info.py",
    "signals.py",
    "snippet/__init__.py",
    "snippet/callback_event.py",
    "snippet/callback_handler_base.py",
    "snippet/client_base.py",
    "snippet/errors.py",
    "suite_runner.py",
    "test_runner.py",
    "utils.py",
  ]
  library_deps = [
    "//third_party/python_portpicker:portpicker",
    "//third_party/pyyaml:yaml",
  ]
}
