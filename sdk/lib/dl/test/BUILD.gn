# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components/fuchsia_unittest_package.gni")
import("//build/test.gni")
import("//build/toolchain/zircon/user_basic_redirect.gni")

group("tests") {
  testonly = true
  deps = [
    ":dl-tests",
    ":dl-unittests($host_toolchain)",
  ]
}

test("dl-unittests") {
  visibility = [ ":*" ]

  sources = [
    "concat-view-tests.cc",
    "dl-tests.cc",
  ]
  deps = [
    "..:concat-view",
    "..:diagnostics",
    "..:error",
    "..:stateful-error",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
  ]
  if (is_elf) {
    sources += [
      "dl-impl-tests.cc",
      "dl-impl-tests.h",
      "dl-iterate-phdr-tests.cc",
      "dl-iterate-phdr-tests.h",
      "dl-load-tests-base.cc",
      "dl-load-tests-base.h",
      "dl-load-tests-basic.cc",
      "dl-load-tests-deps.cc",
      "dl-load-tests-fail.cc",
      "dl-load-tests-global.cc",
      "dl-load-tests-initfini.cc",
      "dl-load-tests-open-flags.cc",
      "dl-load-tests-tls.cc",
      "dl-load-tests.h",
      "dl-system-tests.cc",
      "dl-system-tests.h",
      "dl-tests-base.h",
    ]
    deps += [
      ":dl-unittest.deps",
      ":tls-desc-resolver-tests",
      ":tlsdesc-runtime-dynamic-tests",
      "..:runtime",
      "//sdk/lib/fit",
      "//sdk/lib/ld/testing",
      "//src/lib/elfldltl/testing",
    ]
    include_dirs = [ "//sdk/lib/ld/test/modules" ]
    if (is_fuchsia) {
      sources += [
        "dl-load-zircon-tests-base.cc",
        "dl-load-zircon-tests-base.h",
      ]
    } else {
      # For the host test, this sets a DT_RUNPATH using $ORIGIN to find where
      # the modules are copied into a subdirectory of $host_out_dir (where the
      # test executable will be).
      configs += [ "//sdk/lib/ld/test/modules:dl-test-data.config" ]
    }
    data_deps = [ ":test-data" ]
  }
}

source_set("tlsdesc-runtime-dynamic-tests") {
  visibility = [ ":*" ]
  testonly = true

  sources = [
    "call-tlsdesc.S",
    "call-tlsdesc.h",
    "tlsdesc-runtime-dynamic-tests.cc",
  ]
  deps = [
    "..:tlsdesc-runtime-dynamic",
    "//sdk/lib/ld:headers",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
    "//zircon/kernel/lib/arch",
  ]
}

source_set("tls-desc-resolver-tests") {
  visibility = [ ":*" ]
  testonly = true

  sources = [ "tls-desc-resolver-tests.cc" ]
  deps = [
    "..:diagnostics",
    "..:tls-desc-resolver",
    "//sdk/lib/ld:tlsdesc",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
  ]
}

# These are the shared_library() targets to be included as startup modules for
# tests.
user_basic_redirect("dl-unittest.deps") {
  visibility = [ ":*" ]
  testonly = true
  public_deps = [ "//sdk/lib/ld/test/modules:dl-unittest.deps" ]
}

# This collects all the test modules and their runtime deps.  On Fuchsia, they
# just go into /pkg/lib with the link-time shared libraries.  For the host
# test, they go where the DT_RUNPATH will find them relative to $host_out_dir.
user_basic_redirect("test-data") {
  visibility = [ ":*" ]
  testonly = true
  public_deps = [ "//sdk/lib/ld/test/modules:dl-test-data" ]
}

fuchsia_unittest_package("dl-tests") {
  deps = [ ":dl-unittests" ]
  manifest = "meta/dl-tests.cml"

  # By default the packaging step will do checks that try to detect bugs in the
  # build system by verifying that ELF files in a package match a bunch of
  # hard-coded assumptions about the old dynamic linker and libc implementation
  # that don't hold true for the test binaries here.
  disable_elf_binaries_checks = true
}
