// Copyright 2025 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
@available(added=HEAD)
library fuchsia.starnix.psi;

using zx;

type PsiStats = table {
    /// Average fraction of time spent stalling in the last 10 seconds (0-1).
    1: avg10 float64;

    /// Average fraction of time spent stalling in the last 60 seconds (0-1).
    2: avg60 float64;

    /// Average fraction of time spent stalling in the last 300 seconds (0-1).
    3: avg300 float64;

    /// Cumulative time spent stalling since boot (using the monotonic clock as
    /// the time base).
    4: total zx.Duration;
};

@discoverable
open protocol PsiProvider {
    flexible GetMemoryPressureStats() -> (table {
        /// Stats about time spent with at least one thread stalling.
        1: some PsiStats;

        /// Stats about time spent with all threads stalling.
        2: full PsiStats;
    }) error zx.Status;

    flexible WatchMemoryStall(table {
        1: kind uint32;
        2: threshold zx.Duration;
        3: window zx.Duration;
    }) -> (resource table {
        1: event zx.Handle:EVENT;
    }) error zx.Status;
};
