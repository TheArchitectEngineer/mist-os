// Copyright 2025 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.hardware.display;

/// Identifies a display configuration submitted to the Coordinator.
///
/// This is a type-safe wrapper for a
/// [`fuchsia.hardware.display/ConfigStampValue`], which is a raw numeric value.
///
/// Values are unique within a Display Coordinator client connection.
///
/// Clients create new values when they call
/// [`fuchsia.hardware.display/Coordinator.ApplyConfig3`].  The values are used
/// by the Display Coordinator to identify configurations in
/// [`fuchsia.hardware.display/CoordinatorListener.OnVsync`] calls.
///
/// Clients must create strictly increasing (unique, strictly monotonic) values
/// within the lifetime of a [`fuchsia.display/Coordinator`] connection.
///
/// [`fuchsia.hardware.display/INVALID_CONFIG_STAMP_VALUE`] represents an
/// invalid value.
type ConfigStamp = struct {
    value ConfigStampValue;
};

/// See [`fuchsia.hardware.display.types/ConfigStamp`].
alias ConfigStampValue = uint64;

const INVALID_CONFIG_STAMP_VALUE ConfigStampValue = 0;
