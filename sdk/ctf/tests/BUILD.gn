# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
import("//build/zircon/c_utils.gni")
import("//sdk/ctf/build/ctf.gni")

group("tests") {
  testonly = true
  assert_no_deps = e2e_test_libs

  deps = [
    "examples:tests",
    "fidl:tests",
    "pkg:tests",

    # Tests defined outside of //sdk/ctf
    "//src/connectivity/wlan/testing/hw-sim/test:ctf-tests",
    "//src/devices/tests/ctf:ctf-tests",
    "//src/diagnostics/archivist/tests:ctf-tests",
    "//src/sys/component_manager/tests/realm:ctf-tests",
    "//src/sys/pkg/tests/pkgdir:ctf-tests",
    "//src/sys/time/timekeeper_integration:ctf-tests",
    "//src/ui/scenic/tests:ctf-tests",
    "//src/ui/tests/conformance_input_tests:ctf-tests",
  ]
}

group("ctf-tests") {
  testonly = true

  # TODO(https://fxbug.dev/42070336): Iteratively fix these builds for frozen CTF.
  # These targets will be removed from :tests when we depend on the subbuild for
  # the current CTF release bundle, but for now this list serves as a TODO for
  # further changes.
  deps = [
    "examples:ctf-tests",
    "fidl:ctf-tests",
    "pkg:ctf-tests",

    # Tests defined outside of //sdk/ctf
    "//src/devices/tests/ctf:ctf-tests",
    "//src/diagnostics/archivist/tests:ctf-tests",
    "//src/sys/component_manager/tests/realm:ctf-tests",
    "//src/sys/pkg/tests/pkgdir:ctf-tests",
    "//src/sys/time/timekeeper_integration:ctf-tests",
    "//src/ui/scenic/tests:ctf-tests",
    "//src/ui/tests/conformance_input_tests:ctf-tests",

    # TODO(https://fxbug.dev/361846433): Enable when WLAN Softmac can be stabilized.
    # "//src/connectivity/wlan/testing/hw-sim/test:ctf-tests",
  ]
}

group("e2e_tests") {
  testonly = true
  deps = [ "examples:e2e_tests" ]
}

ctf_unstripped_binaries_file = "$root_out_dir/ctf_unstripped_binaries.list"
link_output_rspfile("ctf_unstripped_binaries_list") {
  testonly = true
  outputs = [ ctf_unstripped_binaries_file ]
  deps = [
    # TODO(chok): This currently contains a superset of unstripped binaries.
    # We will want to create a smaller group which only contains executable()'s.
    ":tests",
  ]
}
